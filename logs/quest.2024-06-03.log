2024-06-03 03:16:01,391 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:16:01,691 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:16:01,733 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:16:02,042 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:16:02,063 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:16:02,395 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:16:02,470 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:16:04,056 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:16:04,148 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:16:04,226 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:16:04,304 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:16:04,305 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:16:04,307 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:16:04,307 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:16:04,307 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:16:04,320 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:16:04,321 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:16:04,324 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:16:04,325 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:16:04,326 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:16:04,326 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:16:04,327 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:16:04,424 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:16:04,426 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:16:05,058 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:16:05,059 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:16:05,060 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:16:05,061 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:16:05,062 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:16:05,062 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:16:05,062 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:16:05,062 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:16:05,062 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:16:05,062 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:16:05,062 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:16:05,062 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:16:05,063 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:16:05,064 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:16:05,064 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:16:05,064 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:16:05,064 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:16:05,064 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:16:05,064 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:16:05,064 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:16:05,064 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:16:05,065 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:16:05,065 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:16:05,065 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:16:05,065 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:16:05,065 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:16:05,065 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:16:05,065 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:16:05,065 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:16:05,066 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:16:05,066 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:16:05,066 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1db0ec27
2024-06-03 03:16:05,066 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d9fc57a
2024-06-03 03:16:05,066 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d9fc57a
2024-06-03 03:16:05,066 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@d4ab71a
2024-06-03 03:16:05,066 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b4ef7
2024-06-03 03:16:05,066 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1af05b03
2024-06-03 03:16:05,067 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5987e932
2024-06-03 03:16:05,067 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5987e932
2024-06-03 03:16:05,067 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ad777f
2024-06-03 03:16:05,067 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bbbdd4b
2024-06-03 03:16:05,067 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@438bad7c
2024-06-03 03:16:05,068 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@438bad7c
2024-06-03 03:16:05,068 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@25230246
2024-06-03 03:16:05,068 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@25230246
2024-06-03 03:16:05,068 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4fdf8f12
2024-06-03 03:16:05,069 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4fdf8f12
2024-06-03 03:16:05,069 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4fdf8f12
2024-06-03 03:16:05,069 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4a8b5227
2024-06-03 03:16:05,069 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4a8b5227
2024-06-03 03:16:05,069 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4a8b5227
2024-06-03 03:16:05,069 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54f5f647
2024-06-03 03:16:05,070 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6979efad
2024-06-03 03:16:05,070 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@5a6d5a8f
2024-06-03 03:16:05,070 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5a6d5a8f
2024-06-03 03:16:05,070 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4a67318f
2024-06-03 03:16:05,071 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4a67318f
2024-06-03 03:16:05,071 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4a67318f
2024-06-03 03:16:05,071 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@315ba14a
2024-06-03 03:16:05,071 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@17f9344b
2024-06-03 03:16:05,072 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@27f0ad19
2024-06-03 03:16:05,072 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@27f0ad19
2024-06-03 03:16:05,072 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@54e81b21
2024-06-03 03:16:05,072 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@54e81b21
2024-06-03 03:16:05,072 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@54e81b21
2024-06-03 03:16:05,072 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@38d5b107
2024-06-03 03:16:05,073 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@38d5b107
2024-06-03 03:16:05,073 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6650813a
2024-06-03 03:16:05,073 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6650813a
2024-06-03 03:16:05,073 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@44ea608c
2024-06-03 03:16:05,073 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@44ea608c
2024-06-03 03:16:05,073 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@50cf5a23
2024-06-03 03:16:05,074 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@50cf5a23
2024-06-03 03:16:05,074 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@450794b4
2024-06-03 03:16:05,074 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@450794b4
2024-06-03 03:16:05,074 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@273c947f
2024-06-03 03:16:05,074 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@30457e14
2024-06-03 03:16:05,109 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@420745d7
2024-06-03 03:16:05,109 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@420745d7
2024-06-03 03:16:05,131 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@30f4b1a6
2024-06-03 03:16:05,131 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@405325cf
2024-06-03 03:16:05,131 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3e1162e7
2024-06-03 03:16:05,132 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@79c3f01f
2024-06-03 03:16:05,132 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6c2f1700
2024-06-03 03:16:05,132 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@350b3a17
2024-06-03 03:16:05,132 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38600b
2024-06-03 03:16:05,132 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@669d2b1b
2024-06-03 03:16:05,132 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@721eb7df
2024-06-03 03:16:05,438 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:16:05,473 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:16:05,473 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:16:05,473 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:16:05,473 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:16:05,507 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:16:05,508 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:16:07,306 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:16:07,307 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:16:07,309 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:16:07,861 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:16:07,911 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:16:07,953 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:16:07,978 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@42fcc7e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@9255c05)
2024-06-03 03:16:07,979 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5da7cee2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78830d9a)
2024-06-03 03:16:07,997 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:16:07,997 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:16:08,074 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4e92466a
2024-06-03 03:16:08,074 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e92466a
2024-06-03 03:16:08,074 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@420745d7`
2024-06-03 03:16:08,082 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:16:08,082 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:16:08,082 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:16:08,094 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:16:08,094 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:16:08,094 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:16:08,094 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:16:08,094 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:16:08,094 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:16:08,096 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:16:08,096 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:16:08,096 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:16:08,099 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bead518] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14bf57b2]
2024-06-03 03:16:08,278 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:16:08,486 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:16:08,499 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:16:08,513 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:16:08,529 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:16:08,577 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,578 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:16:08,578 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:16:08,587 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:16:08,595 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:16:08,600 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:16:08,622 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:16:08,624 DEBUG PropertyBinder: Building property id
2024-06-03 03:16:08,628 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:16:08,629 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,630 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:16:08,630 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:16:08,630 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:16:08,630 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:16:08,630 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:16:08,631 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,631 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:16:08,631 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:16:08,631 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:16:08,632 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:16:08,632 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:16:08,633 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,633 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:16:08,633 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:16:08,633 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:16:08,633 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:16:08,633 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:16:08,634 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,634 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:16:08,634 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:16:08,634 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:16:08,635 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:16:08,635 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:16:08,636 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,636 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:16:08,637 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:16:08,637 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:16:08,637 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:16:08,637 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:16:08,640 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:16:08,659 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:16:08,659 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:16:08,659 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:16:08,660 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:16:08,662 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,662 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:16:08,662 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:16:08,688 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:16:08,688 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:16:08,689 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:16:08,689 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:16:08,689 DEBUG PropertyBinder: Building property id
2024-06-03 03:16:08,689 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:16:08,689 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,689 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:16:08,690 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:16:08,690 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:16:08,690 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:16:08,690 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:16:08,690 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,690 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:16:08,690 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:16:08,691 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:16:08,691 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:16:08,691 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:16:08,691 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,691 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:16:08,691 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:16:08,691 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:16:08,692 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:16:08,692 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:16:08,692 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,692 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:16:08,692 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:16:08,692 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:16:08,692 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:16:08,692 DEBUG PropertyBinder: Building property questId
2024-06-03 03:16:08,692 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,693 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:16:08,693 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:16:08,693 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:16:08,693 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:16:08,693 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:16:08,693 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:16:08,694 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:16:08,709 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:16:08,710 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:16:08,710 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:16:08,710 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:16:08,739 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,739 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:16:08,739 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:16:08,739 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:16:08,739 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:16:08,739 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:16:08,740 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:16:08,740 DEBUG PropertyBinder: Building property id
2024-06-03 03:16:08,740 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:16:08,740 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,740 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:16:08,740 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:16:08,740 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:16:08,741 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:16:08,741 DEBUG PropertyBinder: Building property description
2024-06-03 03:16:08,741 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:16:08,741 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:16:08,742 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:16:08,742 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:16:08,742 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:16:08,742 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:16:08,742 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,742 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:16:08,742 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:16:08,742 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:16:08,743 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:16:08,743 DEBUG PropertyBinder: Building property name
2024-06-03 03:16:08,743 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:16:08,743 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:16:08,743 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:16:08,743 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:16:08,743 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:16:08,743 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:16:08,744 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:16:08,745 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:16:08,746 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:16:08,746 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:16:08,746 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:16:08,759 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,759 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:16:08,759 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:16:08,759 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:16:08,759 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:16:08,760 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:16:08,760 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:16:08,760 DEBUG PropertyBinder: Building property id
2024-06-03 03:16:08,760 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:16:08,760 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,761 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:16:08,761 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:16:08,761 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:16:08,761 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:16:08,761 DEBUG PropertyBinder: Building property questId
2024-06-03 03:16:08,761 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,761 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:16:08,762 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:16:08,762 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:16:08,762 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:16:08,762 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:16:08,762 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:16:08,763 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:16:08,764 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:16:08,764 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:16:08,764 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:16:08,775 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,775 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:16:08,775 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:16:08,775 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:16:08,775 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:16:08,775 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:16:08,776 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:16:08,776 DEBUG PropertyBinder: Building property id
2024-06-03 03:16:08,776 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:16:08,776 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,776 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:16:08,776 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:16:08,776 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:16:08,776 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:16:08,777 DEBUG PropertyBinder: Building property login
2024-06-03 03:16:08,777 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,777 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:16:08,777 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:16:08,777 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:16:08,777 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:16:08,777 DEBUG PropertyBinder: Building property name
2024-06-03 03:16:08,778 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,778 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:16:08,778 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:16:08,778 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:16:08,778 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:16:08,778 DEBUG PropertyBinder: Building property password
2024-06-03 03:16:08,779 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:16:08,779 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:16:08,779 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:16:08,779 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:16:08,780 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:16:08,780 DEBUG PropertyBinder: Building property role
2024-06-03 03:16:08,780 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:16:08,784 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:16:08,789 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:16:08,789 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:16:08,790 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:16:08,808 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:16:08,808 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:16:08,808 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:16:08,808 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:16:08,808 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:16:08,809 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:16:08,810 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:16:08,810 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:16:08,810 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:16:08,810 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:16:08,814 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:16:08,814 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:16:08,814 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:16:08,814 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:16:08,815 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:16:08,962 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:16:09,644 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:16:09,778 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:16:09,779 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@f1f7db2, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:16:09,789 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:16:09,828 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:16:09,946 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:16:09,946 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:16:09,946 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:16:09,948 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:16:09,949 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3df1a1ac] under count; prior registration was null
2024-06-03 03:16:09,954 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7d979d34] under every; prior registration was null
2024-06-03 03:16:09,954 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@350ec690] under any; prior registration was null
2024-06-03 03:16:09,954 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:16:09,954 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:16:09,954 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:16:09,954 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:16:09,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:16:09,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:16:09,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:16:09,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:16:09,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:16:09,956 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:16:09,956 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:16:09,956 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:16:09,956 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:16:09,956 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:16:09,956 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:16:09,956 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:16:09,957 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:16:09,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76130a29] under sinh; prior registration was null
2024-06-03 03:16:09,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@124d02b2] under cosh; prior registration was null
2024-06-03 03:16:09,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3451f01d] under tanh; prior registration was null
2024-06-03 03:16:09,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72503b19] under pi; prior registration was null
2024-06-03 03:16:09,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cfc2538] under log; prior registration was null
2024-06-03 03:16:09,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:16:09,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:16:09,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:16:09,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:16:09,961 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:16:09,961 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:16:09,961 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:16:09,961 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:16:09,961 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:16:09,961 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:16:09,961 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:16:09,961 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:16:09,962 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6aa7b67f] under position; prior registration was null
2024-06-03 03:16:09,965 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2e86807a] under overlay; prior registration was null
2024-06-03 03:16:09,965 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3a90c13c] under trim; prior registration was null
2024-06-03 03:16:09,977 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6badba10] under cast; prior registration was null
2024-06-03 03:16:09,977 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b7e8044] under collate; prior registration was null
2024-06-03 03:16:09,978 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@63cf9de0] under extract; prior registration was null
2024-06-03 03:16:09,978 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:16:09,978 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:16:09,978 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1a565afb] under ifnull; prior registration was null
2024-06-03 03:16:09,978 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:16:09,979 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:16:09,979 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6bfaa0a6] under pad; prior registration was null
2024-06-03 03:16:09,983 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@51dae791] under str; prior registration was null
2024-06-03 03:16:09,988 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7eb200ce] under format; prior registration was null
2024-06-03 03:16:09,988 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6587305a] under timestampadd; prior registration was null
2024-06-03 03:16:09,989 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@19a20bb2] under timestampdiff; prior registration was null
2024-06-03 03:16:09,989 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:16:09,989 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60bb7995] under current_date; prior registration was null
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40fa8766] under current_time; prior registration was null
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67774e29] under current_timestamp; prior registration was null
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@663f237a] under local_date; prior registration was null
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d7399f9] under local_time; prior registration was null
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49a6f486] under local_datetime; prior registration was null
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@14fded9d] under offset_datetime; prior registration was null
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:16:09,990 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:16:09,991 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:16:09,991 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:16:09,991 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@bc6288b] under instant; prior registration was null
2024-06-03 03:16:09,991 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@75156240] under sql; prior registration was null
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cfc2538
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6198e9b5] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3451f01d
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76130a29
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@124d02b2
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:16:09,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72503b19
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:16:09,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:16:09,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:16:09,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:16:09,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:16:09,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:16:09,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:16:09,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:16:09,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@3667faa8] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:16:09,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:16:09,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:16:09,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5d7399f9
2024-06-03 03:16:09,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@49a6f486
2024-06-03 03:16:09,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@b46e103] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:16:09,996 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:16:09,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2b0e9f30] under bit_length; prior registration was null
2024-06-03 03:16:09,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5eea5627] under octet_length; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3330f3ad] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6aa7b67f
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f425231] under bitand; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@506aabf6] under bitor; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5cbd94b2] under bitxor; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6824b913] under bitnot; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:16:09,997 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@756aadfc] under median; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:16:09,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:16:10,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40729f01] under insert; prior registration was null
2024-06-03 03:16:10,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5dbb50f3] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2e86807a
2024-06-03 03:16:10,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:16:10,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4a2e7bcb] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:16:10,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:16:10,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:16:10,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:16:10,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:16:10,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:16:10,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:16:10,003 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@24a2e565] under listagg; prior registration was null
2024-06-03 03:16:10,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6e0e5dec] under array; prior registration was null
2024-06-03 03:16:10,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@48a663e9] under array_list; prior registration was null
2024-06-03 03:16:10,006 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@56476c16] under array_agg; prior registration was null
2024-06-03 03:16:10,008 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1b13467c] under array_position; prior registration was null
2024-06-03 03:16:10,013 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@72b43104] under array_positions; prior registration was null
2024-06-03 03:16:10,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@4eb9f2af] under array_positions_list; prior registration was null
2024-06-03 03:16:10,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a481728] under array_length; prior registration was null
2024-06-03 03:16:10,018 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@3f5156a6] under array_concat; prior registration was null
2024-06-03 03:16:10,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6c479fdf] under array_prepend; prior registration was null
2024-06-03 03:16:10,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@79d82f66] under array_append; prior registration was null
2024-06-03 03:16:10,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@54089484] under array_contains; prior registration was null
2024-06-03 03:16:10,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@45adc393] under array_contains_nullable; prior registration was null
2024-06-03 03:16:10,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@adcfad9] under array_overlaps; prior registration was null
2024-06-03 03:16:10,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@fb49fdf] under array_overlaps_nullable; prior registration was null
2024-06-03 03:16:10,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b2553d9] under array_get; prior registration was null
2024-06-03 03:16:10,024 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3b95a6db] under array_set; prior registration was null
2024-06-03 03:16:10,024 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:16:10,025 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@6d091cad] under array_remove_index; prior registration was null
2024-06-03 03:16:10,025 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c663eaf] under array_slice; prior registration was null
2024-06-03 03:16:10,025 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:16:10,025 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bb5ceb] under array_trim; prior registration was null
2024-06-03 03:16:10,026 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@682af059] under array_fill; prior registration was null
2024-06-03 03:16:10,026 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5f36c8e3] under array_fill_list; prior registration was null
2024-06-03 03:16:10,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3c9c6245] under array_to_string; prior registration was null
2024-06-03 03:16:10,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:16:10,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:16:10,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:16:10,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:16:10,029 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@631cb129] under mode; prior registration was null
2024-06-03 03:16:10,029 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3d20e575] under percentile_cont; prior registration was null
2024-06-03 03:16:10,029 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3252747e] under percentile_disc; prior registration was null
2024-06-03 03:16:10,029 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@36b9cb99] under rank; prior registration was null
2024-06-03 03:16:10,029 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4130955c] under dense_rank; prior registration was null
2024-06-03 03:16:10,030 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2bfaba70] under percent_rank; prior registration was null
2024-06-03 03:16:10,030 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@71adfedd] under cume_dist; prior registration was null
2024-06-03 03:16:10,030 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2c7db926] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:16:10,030 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2577a95d] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:16:10,031 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3a6045c6] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:16:10,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@7209ffb5] under trunc; prior registration was null
2024-06-03 03:16:10,033 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:16:10,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e99b9c] under date_trunc; prior registration was null
2024-06-03 03:16:10,048 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:16:10,048 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:16:10,048 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:16:10,048 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:16:10,048 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:16:10,049 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:16:10,050 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:16:10,050 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:16:10,050 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:16:10,050 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:16:10,050 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:16:10,050 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:16:10,050 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:16:10,050 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:16:10,051 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:16:10,052 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:16:10,053 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:16:10,054 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:16:10,055 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:16:10,056 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,057 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:16:10,058 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:16:10,059 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:16:10,060 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:16:10,060 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:16:10,060 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:16:10,060 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:16:10,060 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:16:10,060 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:16:10,060 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:16:10,060 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:16:10,088 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:16:10,208 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:16:10,214 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:16:10,403 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:16:10,403 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:16:10,924 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:16:11,002 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:16:11,002 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:16:11,036 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:16:11,037 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:16:11,037 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:16:11,085 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:16:11,088 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:16:11,088 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:16:11,113 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:16:11,114 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:16:11,114 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:16:11,142 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:16:11,215 DEBUG creation: Starting post-init callbacks
2024-06-03 03:16:11,215 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:16:11,216 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:16:11,216 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:16:11,216 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:16:11,216 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:16:11,441 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:16:11,446 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:16:11,481 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:16:11,486 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:16:11,506 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:16:11,506 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:16:11,506 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:16:11,507 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:16:11,507 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:16:11,507 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:16:11,507 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:16:11,507 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:16:11,507 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:16:11,508 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:16:11,508 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:16:11,508 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:16:11,508 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:16:11,508 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:16:11,508 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:16:11,508 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:16:11,508 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:16:11,508 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:16:11,508 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:16:11,508 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:16:11,509 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:16:11,509 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:16:11,509 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:16:11,509 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:16:11,509 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:16:11,509 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:16:11,509 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:16:11,509 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:16:11,509 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:16:11,509 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:16:11,509 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:16:11,509 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:16:11,509 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:16:11,510 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:16:11,510 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:16:11,510 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:16:11,510 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:16:11,510 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:16:11,510 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:16:11,510 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:16:11,510 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:16:11,554 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:16:11,554 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:16:11,573 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:16:11,573 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:16:11,574 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bead518] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@47a3d56a]
2024-06-03 03:16:11,590 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:16:11,591 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:16:11,613 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:16:11,662 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:16:12,043 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:16:12,044 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:16:12,160 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:16:12,193 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:16:12,207 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:16:12,251 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:16:12,252 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:16:12,252 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:16:12,280 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4a0c3aa8
2024-06-03 03:16:12,280 DEBUG SessionFactoryRegistry: Registering SessionFactory: 8c5c04a4-3a78-4e05-a5e4-a224c60c80cc (<unnamed>)
2024-06-03 03:16:12,280 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:16:12,280 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:16:12,369 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:16:12,369 DEBUG TransactionImpl: begin
2024-06-03 03:16:12,440 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:16:12,476 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1590075830 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:16:12,495 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:16:12,537 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:16:12,540 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 110044003
2024-06-03 03:16:12,541 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:16:12,541 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:16:12,541 DEBUG results: Extracted JDBC value [3] - [111]
2024-06-03 03:16:12,541 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:16:12,557 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:16:12,557 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c2cdc67
2024-06-03 03:16:12,559 DEBUG TransactionImpl: committing
2024-06-03 03:16:12,560 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:16:12,569 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:16:12,575 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:16:12,576 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:16:12,577 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:16:12,578 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=111, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:16:12,582 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:16:12,583 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:17:53,521 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:17:53,545 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:17:53,552 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:17:53,662 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:17:53,664 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:17:53,731 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:17:53,742 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:17:54,132 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:17:54,141 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:17:54,164 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:17:54,173 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:17:54,174 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:17:54,176 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:17:54,176 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:17:54,178 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:17:54,181 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:17:54,183 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:17:54,186 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:17:54,188 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:17:54,189 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:17:54,189 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:17:54,192 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:17:54,218 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:17:54,220 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:17:54,503 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:17:54,503 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:17:54,503 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:17:54,503 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:17:54,503 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:17:54,504 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:17:54,505 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:17:54,505 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:17:54,505 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:17:54,505 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:17:54,505 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:17:54,505 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:17:54,505 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:17:54,505 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:17:54,506 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:17:54,506 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:17:54,506 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:17:54,506 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:17:54,506 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:17:54,506 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:17:54,506 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:17:54,507 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:17:54,507 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:17:54,507 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:17:54,507 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:17:54,507 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:17:54,507 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:17:54,507 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:17:54,508 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:17:54,508 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:17:54,508 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:17:54,508 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:17:54,508 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:17:54,509 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:17:54,509 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:17:54,509 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:17:54,509 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:17:54,509 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:17:54,509 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:17:54,510 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:17:54,510 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:17:54,510 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:17:54,510 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:17:54,510 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:17:54,511 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:17:54,511 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:17:54,512 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:17:54,512 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:17:54,512 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:17:54,512 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:17:54,513 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:17:54,513 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:17:54,513 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:17:54,513 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:17:54,513 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:17:54,513 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:17:54,514 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:17:54,514 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:17:54,514 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:17:54,514 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:17:54,514 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:17:54,515 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:17:54,515 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:17:54,515 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:17:54,515 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:17:54,515 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:17:54,515 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:17:54,516 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:17:54,516 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:17:54,516 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:17:54,516 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:17:54,516 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:17:54,516 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:17:54,517 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:17:54,517 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:17:54,517 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:17:54,517 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:17:54,517 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:17:54,519 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:17:54,520 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:17:54,520 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:17:54,520 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:17:54,520 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:17:54,520 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:17:54,521 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:17:54,521 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:17:54,521 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:17:54,521 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:17:54,521 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:17:54,522 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:17:54,522 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:17:54,522 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:17:54,522 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:17:54,522 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:17:54,522 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:17:54,522 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:17:54,523 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:17:54,523 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:17:54,523 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:17:54,523 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:17:54,523 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:17:54,523 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:17:54,535 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:17:54,535 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:17:54,538 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@3773862a
2024-06-03 03:17:54,538 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2472c7d8
2024-06-03 03:17:54,538 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:17:54,538 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:17:54,539 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:17:54,539 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:17:54,539 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:17:54,539 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:17:54,539 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:17:54,604 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:17:54,611 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:17:54,611 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:17:54,612 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:17:54,612 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:17:54,617 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:17:54,617 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:17:54,971 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:17:54,971 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:17:54,972 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:17:55,080 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:17:55,093 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:17:55,114 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:17:55,136 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5a67e962) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7)
2024-06-03 03:17:55,137 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc9a775) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27b000f7)
2024-06-03 03:17:55,141 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:17:55,142 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:17:55,156 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:17:55,156 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:17:55,156 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@515f4131`
2024-06-03 03:17:55,167 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:17:55,168 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:17:55,168 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:17:55,174 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:17:55,174 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:17:55,174 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:17:55,174 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:17:55,174 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:17:55,174 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:17:55,176 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:17:55,177 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:17:55,177 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:17:55,180 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f387978]
2024-06-03 03:17:55,242 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:17:55,296 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:17:55,309 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:17:55,323 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:17:55,340 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:17:55,392 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,394 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:17:55,394 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:17:55,402 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:17:55,418 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:17:55,426 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:17:55,435 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:17:55,437 DEBUG PropertyBinder: Building property id
2024-06-03 03:17:55,449 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:17:55,451 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,451 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:17:55,452 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:17:55,452 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:17:55,452 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:17:55,452 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:17:55,454 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,455 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:17:55,455 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:17:55,455 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:17:55,456 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:17:55,456 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:17:55,459 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,460 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:17:55,461 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:17:55,461 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:17:55,461 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:17:55,461 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:17:55,462 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,462 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:17:55,462 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:17:55,462 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:17:55,462 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:17:55,463 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:17:55,464 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,464 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:17:55,465 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:17:55,465 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:17:55,465 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:17:55,465 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:17:55,466 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:17:55,479 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:17:55,481 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:17:55,482 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:17:55,483 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:17:55,489 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,489 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:17:55,490 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:17:55,524 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:17:55,526 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:17:55,529 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:17:55,532 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:17:55,532 DEBUG PropertyBinder: Building property id
2024-06-03 03:17:55,532 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:17:55,533 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,533 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:17:55,533 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:17:55,534 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:17:55,534 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:17:55,535 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:17:55,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,537 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:17:55,538 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:17:55,539 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:17:55,539 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:17:55,539 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:17:55,540 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,540 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:17:55,540 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:17:55,540 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:17:55,542 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:17:55,542 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:17:55,543 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,543 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:17:55,543 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:17:55,543 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:17:55,544 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:17:55,544 DEBUG PropertyBinder: Building property questId
2024-06-03 03:17:55,544 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,544 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:17:55,545 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:17:55,545 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:17:55,545 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:17:55,546 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:17:55,547 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:17:55,548 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:17:55,562 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:17:55,563 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:17:55,564 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:17:55,564 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:17:55,574 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,574 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:17:55,575 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:17:55,576 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:17:55,576 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:17:55,577 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:17:55,577 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:17:55,578 DEBUG PropertyBinder: Building property id
2024-06-03 03:17:55,578 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:17:55,580 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,581 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:17:55,581 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:17:55,581 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:17:55,582 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:17:55,582 DEBUG PropertyBinder: Building property description
2024-06-03 03:17:55,583 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:17:55,583 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:17:55,583 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:17:55,583 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:17:55,583 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:17:55,584 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:17:55,584 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,584 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:17:55,584 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:17:55,584 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:17:55,584 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:17:55,585 DEBUG PropertyBinder: Building property name
2024-06-03 03:17:55,585 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:17:55,585 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:17:55,585 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:17:55,585 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:17:55,586 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:17:55,586 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:17:55,587 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:17:55,588 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:17:55,590 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:17:55,590 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:17:55,591 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:17:55,598 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,598 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:17:55,598 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:17:55,599 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:17:55,599 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:17:55,599 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:17:55,599 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:17:55,599 DEBUG PropertyBinder: Building property id
2024-06-03 03:17:55,599 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:17:55,600 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,600 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:17:55,600 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:17:55,600 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:17:55,600 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:17:55,600 DEBUG PropertyBinder: Building property questId
2024-06-03 03:17:55,601 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,601 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:17:55,601 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:17:55,601 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:17:55,601 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:17:55,601 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:17:55,602 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:17:55,603 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:17:55,603 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:17:55,604 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:17:55,604 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:17:55,607 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,607 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:17:55,607 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:17:55,607 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:17:55,607 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:17:55,607 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:17:55,612 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:17:55,613 DEBUG PropertyBinder: Building property id
2024-06-03 03:17:55,614 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:17:55,615 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,615 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:17:55,616 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:17:55,616 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:17:55,617 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:17:55,617 DEBUG PropertyBinder: Building property login
2024-06-03 03:17:55,617 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,617 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:17:55,617 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:17:55,618 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:17:55,618 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:17:55,618 DEBUG PropertyBinder: Building property name
2024-06-03 03:17:55,619 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,619 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:17:55,619 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:17:55,619 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:17:55,619 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:17:55,619 DEBUG PropertyBinder: Building property password
2024-06-03 03:17:55,620 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:17:55,620 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:17:55,620 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:17:55,620 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:17:55,620 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:17:55,621 DEBUG PropertyBinder: Building property role
2024-06-03 03:17:55,621 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:17:55,624 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:17:55,632 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:17:55,632 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:17:55,633 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:17:55,636 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:17:55,637 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:17:55,637 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:17:55,637 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:17:55,637 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:17:55,638 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:17:55,639 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:17:55,639 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:17:55,639 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:17:55,639 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:17:55,639 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:17:55,639 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:17:55,639 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:17:55,650 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:17:55,650 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:17:55,650 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:17:55,650 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:17:55,650 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:17:55,761 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:17:56,103 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:17:56,202 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:17:56,203 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7426a448, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:17:56,214 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:17:56,228 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:17:56,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:17:56,325 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:17:56,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:17:56,330 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:17:56,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@24eeac69] under count; prior registration was null
2024-06-03 03:17:56,338 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1084f78c] under every; prior registration was null
2024-06-03 03:17:56,338 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under any; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:17:56,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:17:56,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:17:56,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:17:56,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:17:56,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:17:56,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:17:56,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:17:56,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:17:56,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:17:56,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021] under sinh; prior registration was null
2024-06-03 03:17:56,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under cosh; prior registration was null
2024-06-03 03:17:56,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under tanh; prior registration was null
2024-06-03 03:17:56,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under pi; prior registration was null
2024-06-03 03:17:56,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under log; prior registration was null
2024-06-03 03:17:56,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:17:56,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:17:56,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:17:56,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:17:56,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:17:56,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:17:56,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:17:56,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:17:56,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:17:56,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:17:56,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:17:56,349 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:17:56,351 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0] under position; prior registration was null
2024-06-03 03:17:56,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac] under overlay; prior registration was null
2024-06-03 03:17:56,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3451f01d] under trim; prior registration was null
2024-06-03 03:17:56,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@42cc183e] under cast; prior registration was null
2024-06-03 03:17:56,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e4e8fdf] under collate; prior registration was null
2024-06-03 03:17:56,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6aa7b67f] under extract; prior registration was null
2024-06-03 03:17:56,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:17:56,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:17:56,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@61514735] under ifnull; prior registration was null
2024-06-03 03:17:56,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:17:56,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:17:56,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@28369db0] under pad; prior registration was null
2024-06-03 03:17:56,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590f0c50] under str; prior registration was null
2024-06-03 03:17:56,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7cf78c85] under format; prior registration was null
2024-06-03 03:17:56,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2b7e8044] under timestampadd; prior registration was null
2024-06-03 03:17:56,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5e9f73b] under timestampdiff; prior registration was null
2024-06-03 03:17:56,371 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:17:56,371 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43d3aba5] under current_date; prior registration was null
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_time; prior registration was null
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_timestamp; prior registration was null
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under local_date; prior registration was null
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_time; prior registration was null
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_datetime; prior registration was null
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under offset_datetime; prior registration was null
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under instant; prior registration was null
2024-06-03 03:17:56,372 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:17:56,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7eb200ce] under sql; prior registration was null
2024-06-03 03:17:56,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:17:56,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:17:56,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:17:56,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:17:56,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:17:56,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:17:56,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:17:56,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021
2024-06-03 03:17:56,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:17:56,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:17:56,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:17:56,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:17:56,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:17:56,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:17:56,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:17:56,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:17:56,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:17:56,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:17:56,376 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:17:56,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:17:56,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:17:56,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:17:56,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:17:56,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:17:56,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:17:56,378 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:17:56,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@abbe000] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:17:56,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:17:56,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:17:56,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6f1b8544
2024-06-03 03:17:56,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:17:56,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52a33c3f] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:17:56,383 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:17:56,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under bit_length; prior registration was null
2024-06-03 03:17:56,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under octet_length; prior registration was null
2024-06-03 03:17:56,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:17:56,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:17:56,383 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:17:56,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75babb67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under bitand; prior registration was null
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitor; prior registration was null
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitxor; prior registration was null
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitnot; prior registration was null
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:17:56,384 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under median; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:17:56,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:17:56,386 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:17:56,386 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:17:56,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:17:56,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:17:56,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:17:56,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:17:56,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:17:56,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:17:56,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:17:56,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d7399f9] under insert; prior registration was null
2024-06-03 03:17:56,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4a3bd45b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac
2024-06-03 03:17:56,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:17:56,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:17:56,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:17:56,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:17:56,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:17:56,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:17:56,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:17:56,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:17:56,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3667faa8] under listagg; prior registration was null
2024-06-03 03:17:56,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@705a8dbc] under array; prior registration was null
2024-06-03 03:17:56,396 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array_list; prior registration was null
2024-06-03 03:17:56,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5dbb50f3] under array_agg; prior registration was null
2024-06-03 03:17:56,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@518ddd3b] under array_position; prior registration was null
2024-06-03 03:17:56,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions; prior registration was null
2024-06-03 03:17:56,418 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@a83495d] under array_positions_list; prior registration was null
2024-06-03 03:17:56,419 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e83992] under array_length; prior registration was null
2024-06-03 03:17:56,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75b6dd5b] under array_concat; prior registration was null
2024-06-03 03:17:56,422 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@72eb6200] under array_prepend; prior registration was null
2024-06-03 03:17:56,422 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_append; prior registration was null
2024-06-03 03:17:56,426 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@72bdd7c7] under array_contains; prior registration was null
2024-06-03 03:17:56,426 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains_nullable; prior registration was null
2024-06-03 03:17:56,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@19b206ee] under array_overlaps; prior registration was null
2024-06-03 03:17:56,431 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps_nullable; prior registration was null
2024-06-03 03:17:56,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bfec2f9] under array_get; prior registration was null
2024-06-03 03:17:56,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6690b9fa] under array_set; prior registration was null
2024-06-03 03:17:56,435 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:17:56,436 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55fee662] under array_remove_index; prior registration was null
2024-06-03 03:17:56,437 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54089484] under array_slice; prior registration was null
2024-06-03 03:17:56,437 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:17:56,437 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_trim; prior registration was null
2024-06-03 03:17:56,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@adcfad9] under array_fill; prior registration was null
2024-06-03 03:17:56,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill_list; prior registration was null
2024-06-03 03:17:56,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3b2553d9] under array_to_string; prior registration was null
2024-06-03 03:17:56,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:17:56,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:17:56,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:17:56,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:17:56,442 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3bf54172] under mode; prior registration was null
2024-06-03 03:17:56,442 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under percentile_cont; prior registration was null
2024-06-03 03:17:56,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_disc; prior registration was null
2024-06-03 03:17:56,445 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e692555] under rank; prior registration was null
2024-06-03 03:17:56,445 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under dense_rank; prior registration was null
2024-06-03 03:17:56,445 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under percent_rank; prior registration was null
2024-06-03 03:17:56,445 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under cume_dist; prior registration was null
2024-06-03 03:17:56,448 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@35c4e864] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:17:56,449 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:17:56,451 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@6a9344f5] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:17:56,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2bfaba70] under trunc; prior registration was null
2024-06-03 03:17:56,454 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:17:56,455 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71adfedd] under date_trunc; prior registration was null
2024-06-03 03:17:56,466 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:17:56,467 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:17:56,467 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:17:56,467 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:17:56,467 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:17:56,467 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:17:56,468 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:17:56,469 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:17:56,470 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:17:56,470 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:17:56,470 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:17:56,470 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:17:56,470 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:17:56,470 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:17:56,471 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,481 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:17:56,481 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:17:56,481 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:17:56,481 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:17:56,481 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:17:56,482 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:17:56,483 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:17:56,484 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:17:56,484 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:17:56,484 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:17:56,484 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:17:56,484 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:17:56,485 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:17:56,486 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:17:56,487 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:17:56,487 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:17:56,488 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:17:56,489 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:17:56,489 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:17:56,489 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:17:56,489 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:17:56,490 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:17:56,491 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:17:56,492 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:17:56,493 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:17:56,494 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:17:56,495 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:17:56,496 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:17:56,496 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:17:56,496 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:17:56,496 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:17:56,496 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:17:56,496 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:17:56,496 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:17:56,497 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:17:56,497 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:17:56,498 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:17:56,498 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:17:56,498 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:17:56,498 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:17:56,515 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:17:56,755 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:17:56,759 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:17:56,951 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:17:56,952 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:17:57,678 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:17:57,767 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:17:57,767 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:17:57,839 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:17:57,840 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:17:57,840 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:17:57,903 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:17:57,904 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:17:57,904 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:17:57,953 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:17:57,955 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:17:57,955 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:17:57,985 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:17:58,037 DEBUG creation: Starting post-init callbacks
2024-06-03 03:17:58,037 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:17:58,038 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:17:58,038 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:17:58,038 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:17:58,038 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:17:58,238 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:17:58,249 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:17:58,284 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:17:58,290 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:17:58,315 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:17:58,315 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:17:58,315 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:17:58,315 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:17:58,315 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:17:58,316 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:17:58,316 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:17:58,316 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:17:58,317 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:17:58,317 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:17:58,317 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:17:58,317 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:17:58,317 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:17:58,317 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:17:58,317 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:17:58,318 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:17:58,318 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:17:58,318 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:17:58,319 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:17:58,319 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:17:58,319 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:17:58,319 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:17:58,319 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:17:58,319 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:17:58,319 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:17:58,320 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:17:58,320 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:17:58,320 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:17:58,320 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:17:58,320 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:17:58,320 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:17:58,320 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:17:58,320 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:17:58,320 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:17:58,321 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:17:58,321 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:17:58,321 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:17:58,321 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:17:58,321 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:17:58,321 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:17:58,321 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:17:58,394 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:17:58,396 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:17:58,403 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:17:58,404 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:17:58,406 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:17:58,438 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:17:58,438 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:17:58,451 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:17:58,465 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:17:59,107 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:17:59,110 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:17:59,323 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:17:59,354 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:17:59,400 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:17:59,434 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:17:59,436 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:17:59,437 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:17:59,447 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6adcf059
2024-06-03 03:17:59,448 DEBUG SessionFactoryRegistry: Registering SessionFactory: 7a9e5f1c-d72f-4ca1-8f5a-a412659d07b5 (<unnamed>)
2024-06-03 03:17:59,448 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:17:59,448 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:17:59,548 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:17:59,548 DEBUG TransactionImpl: begin
2024-06-03 03:17:59,624 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:17:59,684 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@316863915 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:17:59,724 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:17:59,754 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:17:59,761 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 748807322
2024-06-03 03:17:59,766 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:17:59,766 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:17:59,767 DEBUG results: Extracted JDBC value [3] - [111]
2024-06-03 03:17:59,767 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:17:59,779 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:17:59,780 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391dfe7c
2024-06-03 03:17:59,787 DEBUG TransactionImpl: committing
2024-06-03 03:17:59,789 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:17:59,795 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:17:59,824 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:17:59,825 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:17:59,829 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:17:59,834 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=321, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:17:59,873 DEBUG SQL: 
    update
        users 
    set
        login=?,
        name=?,
        password=?,
        role=? 
    where
        id=?
2024-06-03 03:18:00,117 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:18:00,119 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:22:40,531 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:22:40,551 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:22:40,561 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:22:40,638 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:22:40,640 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:22:40,697 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:22:40,708 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:22:41,032 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:22:41,040 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:22:41,053 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:22:41,059 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:22:41,059 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:22:41,060 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:22:41,060 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:22:41,061 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:22:41,063 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:22:41,063 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:22:41,065 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:22:41,066 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:22:41,067 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:22:41,068 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:22:41,069 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:22:41,085 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:22:41,086 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:22:41,328 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:22:41,329 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:22:41,330 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:22:41,331 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:22:41,331 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:22:41,331 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:22:41,331 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:22:41,331 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:22:41,332 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:22:41,332 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:22:41,332 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:22:41,332 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:22:41,332 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:22:41,332 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:22:41,333 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:22:41,333 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:22:41,333 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:22:41,333 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:22:41,333 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:22:41,333 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:22:41,334 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:22:41,334 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:22:41,334 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:22:41,334 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:22:41,334 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:22:41,334 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:22:41,334 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:22:41,334 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:22:41,335 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:22:41,335 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:22:41,335 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:22:41,335 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:22:41,335 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:22:41,335 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:22:41,335 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:22:41,335 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:22:41,336 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:22:41,336 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:22:41,336 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:22:41,336 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:22:41,336 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:22:41,336 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:22:41,337 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:22:41,337 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:22:41,337 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:22:41,337 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:22:41,337 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:22:41,337 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:22:41,338 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:22:41,338 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:22:41,338 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:22:41,338 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:22:41,338 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:22:41,339 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:22:41,339 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:22:41,339 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:22:41,339 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:22:41,339 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:22:41,339 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:22:41,339 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:22:41,340 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:22:41,340 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:22:41,340 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:22:41,340 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:22:41,340 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:22:41,341 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:22:41,341 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:22:41,341 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:22:41,342 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:22:41,342 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:22:41,342 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:22:41,342 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:22:41,342 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:22:41,342 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:22:41,342 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:22:41,343 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:22:41,343 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:22:41,343 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:22:41,343 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:22:41,343 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:22:41,343 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:22:41,343 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:22:41,344 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:22:41,344 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:22:41,344 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:22:41,344 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:22:41,344 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:22:41,344 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:22:41,345 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:22:41,345 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:22:41,345 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:22:41,345 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:22:41,345 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:22:41,345 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:22:41,346 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:22:41,346 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:22:41,346 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:22:41,346 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:22:41,346 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:22:41,346 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:22:41,347 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:22:41,347 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:22:41,347 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:22:41,347 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:22:41,347 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1db0ec27
2024-06-03 03:22:41,359 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@74518890
2024-06-03 03:22:41,359 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@74518890
2024-06-03 03:22:41,362 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@2472c7d8
2024-06-03 03:22:41,362 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:22:41,363 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:22:41,363 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:22:41,363 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:22:41,363 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:22:41,363 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:22:41,364 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:22:41,364 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@63034ed1
2024-06-03 03:22:41,425 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:22:41,433 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:22:41,434 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:22:41,434 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:22:41,434 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:22:41,441 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:22:41,441 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:22:41,742 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:22:41,742 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:22:41,743 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:22:41,826 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:22:41,836 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:22:41,852 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:22:41,866 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2bc9a775)
2024-06-03 03:22:41,867 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27b000f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42f9c19a)
2024-06-03 03:22:41,869 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:22:41,870 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:22:41,881 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5b4d25e7
2024-06-03 03:22:41,881 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b4d25e7
2024-06-03 03:22:41,881 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@74518890`
2024-06-03 03:22:41,889 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:22:41,889 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:22:41,889 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:22:41,895 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:22:41,895 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:22:41,895 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:22:41,895 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:22:41,895 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:22:41,895 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:22:41,897 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:22:41,897 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:22:41,897 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:22:41,899 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f387978] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cb2651f]
2024-06-03 03:22:41,960 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:22:42,010 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:22:42,026 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:22:42,039 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:22:42,057 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:22:42,087 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,088 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:22:42,088 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:22:42,093 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:22:42,103 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:22:42,111 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:22:42,117 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:22:42,119 DEBUG PropertyBinder: Building property id
2024-06-03 03:22:42,125 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:22:42,126 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,127 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:22:42,127 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:22:42,127 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:22:42,127 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:22:42,127 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:22:42,128 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,129 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:22:42,129 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:22:42,129 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:22:42,129 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:22:42,129 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:22:42,129 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,130 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:22:42,130 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:22:42,130 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:22:42,130 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:22:42,130 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:22:42,130 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,130 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:22:42,130 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:22:42,131 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:22:42,131 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:22:42,131 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:22:42,131 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,131 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:22:42,131 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:22:42,131 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:22:42,132 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:22:42,132 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:22:42,133 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:22:42,140 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:22:42,141 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:22:42,141 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:22:42,141 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:22:42,144 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,144 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:22:42,144 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:22:42,165 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:22:42,165 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:22:42,165 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:22:42,165 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:22:42,165 DEBUG PropertyBinder: Building property id
2024-06-03 03:22:42,166 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:22:42,166 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,166 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:22:42,166 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:22:42,166 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:22:42,166 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:22:42,166 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:22:42,167 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,167 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:22:42,167 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:22:42,167 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:22:42,167 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:22:42,167 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:22:42,167 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,168 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:22:42,168 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:22:42,168 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:22:42,168 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:22:42,168 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:22:42,168 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,169 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:22:42,169 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:22:42,169 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:22:42,169 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:22:42,169 DEBUG PropertyBinder: Building property questId
2024-06-03 03:22:42,169 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,169 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:22:42,169 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:22:42,169 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:22:42,171 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:22:42,171 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:22:42,171 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:22:42,172 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:22:42,180 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:22:42,180 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:22:42,180 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:22:42,181 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:22:42,188 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,188 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:22:42,188 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:22:42,188 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:22:42,188 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:22:42,188 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:22:42,189 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:22:42,189 DEBUG PropertyBinder: Building property id
2024-06-03 03:22:42,189 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:22:42,189 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,189 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:22:42,189 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:22:42,189 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:22:42,189 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:22:42,190 DEBUG PropertyBinder: Building property description
2024-06-03 03:22:42,190 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:22:42,190 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:22:42,190 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:22:42,190 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:22:42,191 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:22:42,191 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:22:42,191 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,191 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:22:42,191 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:22:42,191 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:22:42,191 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:22:42,191 DEBUG PropertyBinder: Building property name
2024-06-03 03:22:42,192 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:22:42,192 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:22:42,192 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:22:42,192 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:22:42,192 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:22:42,192 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:22:42,193 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:22:42,194 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:22:42,194 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:22:42,194 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:22:42,195 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:22:42,197 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,197 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:22:42,197 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:22:42,197 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:22:42,197 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:22:42,197 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:22:42,197 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:22:42,197 DEBUG PropertyBinder: Building property id
2024-06-03 03:22:42,198 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:22:42,198 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,198 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:22:42,198 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:22:42,198 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:22:42,198 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:22:42,198 DEBUG PropertyBinder: Building property questId
2024-06-03 03:22:42,199 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,199 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:22:42,199 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:22:42,199 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:22:42,199 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:22:42,199 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:22:42,199 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:22:42,200 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:22:42,201 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:22:42,201 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:22:42,201 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:22:42,203 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,203 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:22:42,203 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:22:42,204 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:22:42,204 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:22:42,204 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:22:42,204 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:22:42,204 DEBUG PropertyBinder: Building property id
2024-06-03 03:22:42,204 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:22:42,205 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,205 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:22:42,205 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:22:42,205 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:22:42,205 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:22:42,205 DEBUG PropertyBinder: Building property login
2024-06-03 03:22:42,205 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,205 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:22:42,205 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:22:42,205 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:22:42,206 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:22:42,206 DEBUG PropertyBinder: Building property name
2024-06-03 03:22:42,206 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,206 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:22:42,206 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:22:42,206 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:22:42,206 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:22:42,206 DEBUG PropertyBinder: Building property password
2024-06-03 03:22:42,207 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:22:42,207 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:22:42,207 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:22:42,207 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:22:42,207 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:22:42,207 DEBUG PropertyBinder: Building property role
2024-06-03 03:22:42,208 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:22:42,209 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:22:42,212 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:22:42,212 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:22:42,212 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:22:42,214 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:22:42,215 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:22:42,216 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:22:42,220 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:22:42,220 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:22:42,220 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:22:42,220 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:22:42,220 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:22:42,271 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:22:42,490 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:22:42,543 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:22:42,544 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@516462cc, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:22:42,552 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:22:42,564 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:22:42,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:22:42,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:22:42,619 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:22:42,619 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:22:42,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@18539cb1] under count; prior registration was null
2024-06-03 03:22:42,623 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under every; prior registration was null
2024-06-03 03:22:42,623 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4aa11206] under any; prior registration was null
2024-06-03 03:22:42,623 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:22:42,623 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:22:42,623 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:22:42,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:22:42,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:22:42,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:22:42,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:22:42,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:22:42,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under sinh; prior registration was null
2024-06-03 03:22:42,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under cosh; prior registration was null
2024-06-03 03:22:42,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under tanh; prior registration was null
2024-06-03 03:22:42,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under pi; prior registration was null
2024-06-03 03:22:42,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7be2f29a] under log; prior registration was null
2024-06-03 03:22:42,628 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:22:42,628 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:22:42,628 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:22:42,628 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:22:42,628 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:22:42,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:22:42,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:22:42,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:22:42,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:22:42,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:22:42,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:22:42,629 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:22:42,631 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2525a5b8] under position; prior registration was null
2024-06-03 03:22:42,633 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f973a14] under overlay; prior registration was null
2024-06-03 03:22:42,633 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@72503b19] under trim; prior registration was null
2024-06-03 03:22:42,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3e4e8fdf] under cast; prior registration was null
2024-06-03 03:22:42,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d6ef2] under collate; prior registration was null
2024-06-03 03:22:42,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6bcc3f27] under extract; prior registration was null
2024-06-03 03:22:42,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:22:42,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:22:42,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6bee793f] under ifnull; prior registration was null
2024-06-03 03:22:42,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:22:42,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:22:42,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@30893e08] under pad; prior registration was null
2024-06-03 03:22:42,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@208f0007] under str; prior registration was null
2024-06-03 03:22:42,638 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@ebe067d] under format; prior registration was null
2024-06-03 03:22:42,639 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@550de6b8] under timestampadd; prior registration was null
2024-06-03 03:22:42,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1a565afb] under timestampdiff; prior registration was null
2024-06-03 03:22:42,640 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:22:42,640 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:22:42,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_date; prior registration was null
2024-06-03 03:22:42,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_time; prior registration was null
2024-06-03 03:22:42,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under current_timestamp; prior registration was null
2024-06-03 03:22:42,640 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_date; prior registration was null
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_time; prior registration was null
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under local_datetime; prior registration was null
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under offset_datetime; prior registration was null
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@365cdacf] under instant; prior registration was null
2024-06-03 03:22:42,641 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2ee83775] under sql; prior registration was null
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7be2f29a
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c2924d7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:22:42,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:22:42,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:22:42,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:22:42,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:22:42,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:22:42,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:22:42,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:22:42,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:22:42,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@3f81621c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:22:42,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:22:42,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:22:42,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:22:42,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@688a2c09
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under bit_length; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@75babb67] under octet_length; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2525a5b8
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitand; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitor; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitxor; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under bitnot; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:22:42,646 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:22:42,647 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:22:42,647 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:22:42,647 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:22:42,647 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:22:42,647 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@663f237a] under median; prior registration was null
2024-06-03 03:22:42,647 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:22:42,647 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:22:42,647 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:22:42,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:22:42,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:22:42,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:22:42,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:22:42,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:22:42,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:22:42,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:22:42,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:22:42,649 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:22:42,649 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:22:42,649 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:22:42,649 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:22:42,649 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:22:42,649 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:22:42,649 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:22:42,649 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49a6f486] under insert; prior registration was null
2024-06-03 03:22:42,650 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f973a14
2024-06-03 03:22:42,650 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:22:42,650 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4f2d995e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:22:42,650 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:22:42,650 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:22:42,650 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:22:42,651 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:22:42,651 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:22:42,651 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:22:42,651 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1756f7cc] under listagg; prior registration was null
2024-06-03 03:22:42,653 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array; prior registration was null
2024-06-03 03:22:42,653 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@d535a3d] under array_list; prior registration was null
2024-06-03 03:22:42,654 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4a2e7bcb] under array_agg; prior registration was null
2024-06-03 03:22:42,656 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@939ff41] under array_position; prior registration was null
2024-06-03 03:22:42,661 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@539a138b] under array_positions; prior registration was null
2024-06-03 03:22:42,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7e83992] under array_positions_list; prior registration was null
2024-06-03 03:22:42,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4364863] under array_length; prior registration was null
2024-06-03 03:22:42,664 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@b3e86d5] under array_concat; prior registration was null
2024-06-03 03:22:42,665 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_prepend; prior registration was null
2024-06-03 03:22:42,665 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7affc159] under array_append; prior registration was null
2024-06-03 03:22:42,667 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains; prior registration was null
2024-06-03 03:22:42,667 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@44fdce3c] under array_contains_nullable; prior registration was null
2024-06-03 03:22:42,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps; prior registration was null
2024-06-03 03:22:42,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5f1483fd] under array_overlaps_nullable; prior registration was null
2024-06-03 03:22:42,669 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@708eb310] under array_get; prior registration was null
2024-06-03 03:22:42,669 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6c8dbf56] under array_set; prior registration was null
2024-06-03 03:22:42,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:22:42,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@54089484] under array_remove_index; prior registration was null
2024-06-03 03:22:42,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_slice; prior registration was null
2024-06-03 03:22:42,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:22:42,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65fe2691] under array_trim; prior registration was null
2024-06-03 03:22:42,671 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill; prior registration was null
2024-06-03 03:22:42,671 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3a2e9f5b] under array_fill_list; prior registration was null
2024-06-03 03:22:42,672 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@753fd7a1] under array_to_string; prior registration was null
2024-06-03 03:22:42,672 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:22:42,672 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:22:42,672 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:22:42,672 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:22:42,673 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under mode; prior registration was null
2024-06-03 03:22:42,673 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_cont; prior registration was null
2024-06-03 03:22:42,673 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6d091cad] under percentile_disc; prior registration was null
2024-06-03 03:22:42,674 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under rank; prior registration was null
2024-06-03 03:22:42,674 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under dense_rank; prior registration was null
2024-06-03 03:22:42,674 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under percent_rank; prior registration was null
2024-06-03 03:22:42,674 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@786ff1cb] under cume_dist; prior registration was null
2024-06-03 03:22:42,675 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:22:42,675 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@682af059] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:22:42,675 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@5584d9c6] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:22:42,677 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@71adfedd] under trunc; prior registration was null
2024-06-03 03:22:42,677 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:22:42,677 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9301672] under date_trunc; prior registration was null
2024-06-03 03:22:42,685 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:22:42,685 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:22:42,685 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:22:42,685 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:22:42,685 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:22:42,685 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:22:42,685 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:22:42,685 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:22:42,686 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:22:42,687 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:22:42,688 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:22:42,689 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:22:42,690 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:22:42,691 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:22:42,692 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,693 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:22:42,694 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:22:42,695 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:22:42,696 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:22:42,696 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:22:42,696 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:22:42,696 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:22:42,696 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:22:42,696 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:22:42,696 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:22:42,696 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:22:42,706 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:22:42,818 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:22:42,820 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:22:42,907 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:22:42,907 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:22:43,191 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:22:43,225 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:22:43,225 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:22:43,251 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:22:43,252 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:22:43,252 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:22:43,284 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:22:43,285 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:22:43,285 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:22:43,301 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:22:43,302 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:22:43,302 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:22:43,317 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:22:43,352 DEBUG creation: Starting post-init callbacks
2024-06-03 03:22:43,353 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:22:43,353 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:22:43,353 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:22:43,353 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:22:43,353 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:22:43,460 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:22:43,464 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:22:43,483 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:22:43,488 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:22:43,503 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:22:43,503 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:22:43,503 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:22:43,503 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:22:43,503 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:22:43,504 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:22:43,504 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:22:43,504 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:22:43,504 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:22:43,504 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:22:43,504 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:22:43,504 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:22:43,504 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:22:43,504 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:22:43,505 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:22:43,505 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:22:43,505 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:22:43,505 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:22:43,505 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:22:43,505 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:22:43,505 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:22:43,505 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:22:43,505 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:22:43,505 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:22:43,505 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:22:43,506 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:22:43,506 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:22:43,506 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:22:43,506 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:22:43,506 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:22:43,506 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:22:43,506 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:22:43,506 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:22:43,506 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:22:43,506 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:22:43,507 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:22:43,507 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:22:43,507 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:22:43,507 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:22:43,507 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:22:43,507 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:22:43,549 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:22:43,550 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:22:43,553 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:22:43,553 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:22:43,554 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f387978] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@539fc5d1]
2024-06-03 03:22:43,564 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:22:43,564 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:22:43,570 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:22:43,576 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:22:43,861 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:22:43,863 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:22:43,956 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:22:43,969 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:22:43,994 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:22:44,012 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:22:44,013 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:22:44,013 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:22:44,018 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38ebc866
2024-06-03 03:22:44,018 DEBUG SessionFactoryRegistry: Registering SessionFactory: 2988ec30-1838-49d5-bb7b-e54719911936 (<unnamed>)
2024-06-03 03:22:44,019 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:22:44,019 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:22:44,075 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:22:44,075 DEBUG TransactionImpl: begin
2024-06-03 03:22:44,076 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:22:44,077 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:22:44,077 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:22:44,082 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 0 objects
2024-06-03 03:22:44,083 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:22:44,084 DEBUG TransactionImpl: rolling back
2024-06-03 03:22:44,085 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:22:44,086 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:24:19,087 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:24:19,104 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:24:19,108 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:24:19,200 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:24:19,203 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:24:19,277 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:24:19,292 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:24:19,720 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:24:19,730 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:24:19,747 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:24:19,754 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:24:19,755 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:24:19,756 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:24:19,757 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:24:19,757 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:24:19,759 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:24:19,759 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:24:19,762 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:24:19,763 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:24:19,764 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:24:19,764 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:24:19,766 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:24:19,786 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:24:19,787 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:24:20,004 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:24:20,004 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:24:20,004 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:24:20,004 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:24:20,005 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:24:20,006 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:24:20,007 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:24:20,007 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:24:20,007 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:24:20,007 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:24:20,007 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:24:20,007 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:24:20,007 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:24:20,007 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:24:20,008 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:24:20,008 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:24:20,008 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:24:20,008 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:24:20,008 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:24:20,008 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:24:20,008 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:24:20,008 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:24:20,009 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:24:20,009 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:24:20,009 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:24:20,009 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:24:20,009 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:24:20,009 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:24:20,009 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:24:20,009 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:24:20,010 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:24:20,011 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:24:20,011 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:24:20,011 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:24:20,011 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:24:20,011 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:24:20,011 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:24:20,011 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:24:20,011 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:24:20,012 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:24:20,013 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:24:20,014 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:24:20,014 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:24:20,014 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:24:20,014 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:24:20,014 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:24:20,015 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:24:20,015 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:24:20,015 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:24:20,015 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:24:20,015 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:24:20,015 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:24:20,016 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:24:20,016 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:24:20,016 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:24:20,016 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:24:20,016 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:24:20,016 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:24:20,016 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:24:20,017 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:24:20,017 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:24:20,017 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:24:20,018 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:24:20,018 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:24:20,019 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:24:20,019 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:24:20,019 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:24:20,019 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:24:20,019 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:24:20,019 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:24:20,020 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:24:20,020 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:24:20,020 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:24:20,020 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:24:20,020 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:24:20,020 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:24:20,020 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:24:20,020 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:24:20,021 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:24:20,021 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:24:20,031 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:24:20,031 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:24:20,033 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@3773862a
2024-06-03 03:24:20,034 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2472c7d8
2024-06-03 03:24:20,034 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:24:20,034 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:24:20,034 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:24:20,034 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:24:20,034 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:24:20,034 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:24:20,034 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:24:20,069 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:24:20,073 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:24:20,073 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:24:20,073 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:24:20,073 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:24:20,076 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:24:20,077 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:24:20,371 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:24:20,372 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:24:20,372 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:24:20,454 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:24:20,464 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:24:20,479 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:24:20,494 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5a67e962) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7)
2024-06-03 03:24:20,494 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc9a775) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27b000f7)
2024-06-03 03:24:20,497 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:24:20,498 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:24:20,509 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:24:20,510 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:24:20,510 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@515f4131`
2024-06-03 03:24:20,519 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:24:20,519 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:24:20,519 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:24:20,524 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:24:20,524 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:24:20,524 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:24:20,524 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:24:20,525 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:24:20,525 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:24:20,527 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:24:20,527 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:24:20,527 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:24:20,529 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f387978]
2024-06-03 03:24:20,593 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:24:20,642 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:24:20,655 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:24:20,667 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:24:20,682 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:24:20,722 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,723 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:24:20,723 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:24:20,728 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:24:20,734 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:24:20,740 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:24:20,745 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:24:20,747 DEBUG PropertyBinder: Building property id
2024-06-03 03:24:20,752 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:24:20,753 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,753 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:24:20,754 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:24:20,754 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:24:20,754 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:24:20,754 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:24:20,755 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,755 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:24:20,755 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:24:20,755 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:24:20,755 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:24:20,755 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:24:20,756 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,756 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:24:20,756 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:24:20,756 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:24:20,756 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:24:20,756 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:24:20,757 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,757 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:24:20,757 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:24:20,757 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:24:20,757 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:24:20,757 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:24:20,757 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,757 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:24:20,758 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:24:20,758 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:24:20,758 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:24:20,758 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:24:20,759 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:24:20,765 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:24:20,766 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:24:20,766 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:24:20,767 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:24:20,770 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,770 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:24:20,770 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:24:20,788 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:24:20,788 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:24:20,788 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:24:20,788 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:24:20,789 DEBUG PropertyBinder: Building property id
2024-06-03 03:24:20,789 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:24:20,789 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,789 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:24:20,789 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:24:20,789 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:24:20,789 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:24:20,790 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:24:20,790 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,790 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:24:20,790 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:24:20,790 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:24:20,790 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:24:20,790 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:24:20,791 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,791 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:24:20,791 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:24:20,791 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:24:20,791 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:24:20,792 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:24:20,792 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,792 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:24:20,793 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:24:20,793 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:24:20,793 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:24:20,793 DEBUG PropertyBinder: Building property questId
2024-06-03 03:24:20,794 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,795 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:24:20,795 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:24:20,795 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:24:20,795 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:24:20,795 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:24:20,795 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:24:20,797 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:24:20,810 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:24:20,811 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:24:20,812 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:24:20,812 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:24:20,822 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,822 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:24:20,822 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:24:20,822 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:24:20,823 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:24:20,823 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:24:20,823 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:24:20,823 DEBUG PropertyBinder: Building property id
2024-06-03 03:24:20,823 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:24:20,824 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,824 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:24:20,824 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:24:20,824 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:24:20,824 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:24:20,824 DEBUG PropertyBinder: Building property description
2024-06-03 03:24:20,825 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:24:20,825 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:24:20,825 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:24:20,826 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:24:20,826 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:24:20,826 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:24:20,826 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,826 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:24:20,827 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:24:20,827 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:24:20,827 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:24:20,827 DEBUG PropertyBinder: Building property name
2024-06-03 03:24:20,828 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:24:20,828 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:24:20,828 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:24:20,828 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:24:20,828 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:24:20,828 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:24:20,829 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:24:20,830 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:24:20,830 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:24:20,831 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:24:20,831 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:24:20,833 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,833 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:24:20,833 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:24:20,833 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:24:20,834 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:24:20,834 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:24:20,834 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:24:20,834 DEBUG PropertyBinder: Building property id
2024-06-03 03:24:20,834 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:24:20,835 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,835 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:24:20,835 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:24:20,835 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:24:20,835 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:24:20,835 DEBUG PropertyBinder: Building property questId
2024-06-03 03:24:20,835 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,836 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:24:20,836 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:24:20,836 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:24:20,836 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:24:20,836 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:24:20,837 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:24:20,838 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:24:20,838 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:24:20,838 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:24:20,839 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:24:20,841 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,841 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:24:20,841 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:24:20,841 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:24:20,841 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:24:20,841 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:24:20,841 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:24:20,842 DEBUG PropertyBinder: Building property id
2024-06-03 03:24:20,842 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:24:20,842 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,842 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:24:20,842 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:24:20,842 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:24:20,842 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:24:20,842 DEBUG PropertyBinder: Building property login
2024-06-03 03:24:20,843 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,843 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:24:20,843 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:24:20,843 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:24:20,843 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:24:20,843 DEBUG PropertyBinder: Building property name
2024-06-03 03:24:20,843 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,844 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:24:20,844 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:24:20,844 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:24:20,844 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:24:20,844 DEBUG PropertyBinder: Building property password
2024-06-03 03:24:20,844 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:24:20,844 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:24:20,844 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:24:20,844 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:24:20,845 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:24:20,845 DEBUG PropertyBinder: Building property role
2024-06-03 03:24:20,845 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:24:20,847 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:24:20,850 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:24:20,850 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:24:20,850 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:24:20,853 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:24:20,853 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:24:20,854 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:24:20,855 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:24:20,855 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:24:20,855 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:24:20,855 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:24:20,855 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:24:20,855 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:24:20,855 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:24:20,855 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:24:20,860 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:24:20,860 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:24:20,860 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:24:20,860 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:24:20,860 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:24:20,918 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:24:21,164 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:24:21,216 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:24:21,216 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7426a448, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:24:21,222 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:24:21,234 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:24:21,291 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:24:21,292 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:24:21,292 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:24:21,293 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:24:21,295 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@24eeac69] under count; prior registration was null
2024-06-03 03:24:21,296 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1084f78c] under every; prior registration was null
2024-06-03 03:24:21,296 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under any; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:24:21,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:24:21,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:24:21,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:24:21,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:24:21,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:24:21,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:24:21,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:24:21,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:24:21,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:24:21,300 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021] under sinh; prior registration was null
2024-06-03 03:24:21,300 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under cosh; prior registration was null
2024-06-03 03:24:21,300 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under tanh; prior registration was null
2024-06-03 03:24:21,300 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under pi; prior registration was null
2024-06-03 03:24:21,300 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under log; prior registration was null
2024-06-03 03:24:21,301 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:24:21,301 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:24:21,301 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:24:21,301 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:24:21,301 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:24:21,302 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:24:21,302 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:24:21,302 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:24:21,302 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:24:21,302 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:24:21,302 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:24:21,302 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:24:21,303 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0] under position; prior registration was null
2024-06-03 03:24:21,307 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac] under overlay; prior registration was null
2024-06-03 03:24:21,307 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3451f01d] under trim; prior registration was null
2024-06-03 03:24:21,308 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@42cc183e] under cast; prior registration was null
2024-06-03 03:24:21,308 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e4e8fdf] under collate; prior registration was null
2024-06-03 03:24:21,310 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6aa7b67f] under extract; prior registration was null
2024-06-03 03:24:21,310 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:24:21,310 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:24:21,310 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@61514735] under ifnull; prior registration was null
2024-06-03 03:24:21,310 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:24:21,310 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:24:21,311 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@28369db0] under pad; prior registration was null
2024-06-03 03:24:21,311 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590f0c50] under str; prior registration was null
2024-06-03 03:24:21,313 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7cf78c85] under format; prior registration was null
2024-06-03 03:24:21,313 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2b7e8044] under timestampadd; prior registration was null
2024-06-03 03:24:21,314 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5e9f73b] under timestampdiff; prior registration was null
2024-06-03 03:24:21,314 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:24:21,314 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43d3aba5] under current_date; prior registration was null
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_time; prior registration was null
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_timestamp; prior registration was null
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under local_date; prior registration was null
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_time; prior registration was null
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_datetime; prior registration was null
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under offset_datetime; prior registration was null
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under instant; prior registration was null
2024-06-03 03:24:21,315 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:24:21,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7eb200ce] under sql; prior registration was null
2024-06-03 03:24:21,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:24:21,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:24:21,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:24:21,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:24:21,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:24:21,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:24:21,318 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:24:21,318 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:24:21,318 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:24:21,319 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:24:21,319 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:24:21,319 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:24:21,319 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:24:21,319 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:24:21,319 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:24:21,319 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:24:21,320 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:24:21,321 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@abbe000] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:24:21,321 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:24:21,321 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:24:21,321 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6f1b8544
2024-06-03 03:24:21,321 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:24:21,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52a33c3f] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:24:21,323 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:24:21,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under bit_length; prior registration was null
2024-06-03 03:24:21,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under octet_length; prior registration was null
2024-06-03 03:24:21,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:24:21,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:24:21,323 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:24:21,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75babb67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under bitand; prior registration was null
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitor; prior registration was null
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitxor; prior registration was null
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitnot; prior registration was null
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:24:21,324 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:24:21,325 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under median; prior registration was null
2024-06-03 03:24:21,325 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:24:21,325 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:24:21,325 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:24:21,325 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:24:21,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:24:21,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:24:21,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:24:21,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:24:21,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:24:21,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:24:21,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:24:21,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:24:21,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:24:21,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:24:21,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:24:21,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:24:21,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:24:21,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:24:21,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d7399f9] under insert; prior registration was null
2024-06-03 03:24:21,329 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4a3bd45b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac
2024-06-03 03:24:21,329 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:24:21,329 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:24:21,329 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:24:21,330 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:24:21,330 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:24:21,330 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:24:21,330 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:24:21,330 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:24:21,330 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3667faa8] under listagg; prior registration was null
2024-06-03 03:24:21,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@705a8dbc] under array; prior registration was null
2024-06-03 03:24:21,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array_list; prior registration was null
2024-06-03 03:24:21,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5dbb50f3] under array_agg; prior registration was null
2024-06-03 03:24:21,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@518ddd3b] under array_position; prior registration was null
2024-06-03 03:24:21,341 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions; prior registration was null
2024-06-03 03:24:21,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@a83495d] under array_positions_list; prior registration was null
2024-06-03 03:24:21,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e83992] under array_length; prior registration was null
2024-06-03 03:24:21,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75b6dd5b] under array_concat; prior registration was null
2024-06-03 03:24:21,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@72eb6200] under array_prepend; prior registration was null
2024-06-03 03:24:21,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_append; prior registration was null
2024-06-03 03:24:21,350 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@72bdd7c7] under array_contains; prior registration was null
2024-06-03 03:24:21,350 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains_nullable; prior registration was null
2024-06-03 03:24:21,351 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@19b206ee] under array_overlaps; prior registration was null
2024-06-03 03:24:21,351 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps_nullable; prior registration was null
2024-06-03 03:24:21,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bfec2f9] under array_get; prior registration was null
2024-06-03 03:24:21,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6690b9fa] under array_set; prior registration was null
2024-06-03 03:24:21,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:24:21,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55fee662] under array_remove_index; prior registration was null
2024-06-03 03:24:21,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54089484] under array_slice; prior registration was null
2024-06-03 03:24:21,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:24:21,354 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_trim; prior registration was null
2024-06-03 03:24:21,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@adcfad9] under array_fill; prior registration was null
2024-06-03 03:24:21,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill_list; prior registration was null
2024-06-03 03:24:21,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3b2553d9] under array_to_string; prior registration was null
2024-06-03 03:24:21,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:24:21,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:24:21,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:24:21,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:24:21,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3bf54172] under mode; prior registration was null
2024-06-03 03:24:21,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under percentile_cont; prior registration was null
2024-06-03 03:24:21,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_disc; prior registration was null
2024-06-03 03:24:21,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e692555] under rank; prior registration was null
2024-06-03 03:24:21,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under dense_rank; prior registration was null
2024-06-03 03:24:21,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under percent_rank; prior registration was null
2024-06-03 03:24:21,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under cume_dist; prior registration was null
2024-06-03 03:24:21,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@35c4e864] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:24:21,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:24:21,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@6a9344f5] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:24:21,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2bfaba70] under trunc; prior registration was null
2024-06-03 03:24:21,363 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:24:21,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71adfedd] under date_trunc; prior registration was null
2024-06-03 03:24:21,371 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:24:21,371 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:24:21,371 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:24:21,371 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:24:21,371 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:24:21,371 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:24:21,372 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,373 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:24:21,374 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:24:21,375 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:24:21,376 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:24:21,376 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:24:21,376 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:24:21,376 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:24:21,376 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:24:21,376 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:24:21,376 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:24:21,377 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:24:21,377 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:24:21,377 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:24:21,377 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:24:21,377 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:24:21,377 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:24:21,378 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:24:21,379 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:24:21,380 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:24:21,380 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:24:21,380 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:24:21,380 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:24:21,380 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:24:21,380 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:24:21,380 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:24:21,380 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:24:21,381 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,382 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:24:21,383 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:24:21,384 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:24:21,384 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:24:21,384 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:24:21,384 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:24:21,384 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:24:21,384 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:24:21,384 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:24:21,384 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:24:21,385 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:24:21,386 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:24:21,386 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:24:21,386 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:24:21,386 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:24:21,386 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:24:21,386 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:24:21,386 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:24:21,386 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:24:21,387 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:24:21,397 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:24:21,530 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:24:21,531 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:24:21,633 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:24:21,633 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:24:21,907 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:24:21,935 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:24:21,935 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:24:21,960 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:24:21,961 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:24:21,961 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:24:21,989 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:24:21,990 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:24:21,990 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:24:22,006 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:24:22,007 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:24:22,007 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:24:22,021 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:24:22,054 DEBUG creation: Starting post-init callbacks
2024-06-03 03:24:22,054 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:24:22,055 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:24:22,055 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:24:22,055 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:24:22,055 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:24:22,157 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:24:22,161 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:24:22,183 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:24:22,189 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:24:22,203 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:24:22,203 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:24:22,203 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:24:22,203 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:24:22,203 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:24:22,203 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:24:22,204 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:24:22,204 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:24:22,204 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:24:22,204 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:24:22,204 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:24:22,204 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:24:22,205 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:24:22,205 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:24:22,205 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:24:22,205 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:24:22,205 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:24:22,205 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:24:22,205 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:24:22,205 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:24:22,205 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:24:22,205 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:24:22,205 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:24:22,206 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:24:22,206 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:24:22,206 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:24:22,206 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:24:22,206 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:24:22,206 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:24:22,206 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:24:22,206 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:24:22,206 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:24:22,206 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:24:22,206 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:24:22,207 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:24:22,207 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:24:22,207 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:24:22,207 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:24:22,207 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:24:22,207 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:24:22,207 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:24:22,245 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:24:22,246 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:24:22,250 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:24:22,250 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:24:22,251 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:24:22,260 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:24:22,260 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:24:22,266 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:24:22,272 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:24:22,574 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:24:22,576 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:24:22,691 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:24:22,704 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:24:22,731 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:24:22,744 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:24:22,745 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:24:22,745 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:24:22,749 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6adcf059
2024-06-03 03:24:22,749 DEBUG SessionFactoryRegistry: Registering SessionFactory: b9af9650-d19f-4846-b79b-5a0aabf4b92c (<unnamed>)
2024-06-03 03:24:22,749 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:24:22,749 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:24:22,797 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:24:22,797 DEBUG TransactionImpl: begin
2024-06-03 03:24:22,797 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:24:22,798 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:24:22,798 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:24:22,804 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 0 objects
2024-06-03 03:24:22,804 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:24:22,805 DEBUG TransactionImpl: rolling back
2024-06-03 03:24:22,806 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:24:22,806 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:25:34,921 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:25:34,953 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:25:34,962 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:25:35,074 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:25:35,077 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:25:35,154 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:25:35,166 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:25:35,565 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:25:35,578 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:25:35,599 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:25:35,609 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:25:35,610 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:25:35,612 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:25:35,613 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:25:35,614 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:25:35,618 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:25:35,618 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:25:35,621 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:25:35,622 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:25:35,623 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:25:35,623 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:25:35,626 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:25:35,654 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:25:35,658 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:25:35,975 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:25:35,976 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:25:35,976 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:25:35,976 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:25:35,976 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:25:35,977 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:25:35,977 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:25:35,977 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:25:35,977 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:25:35,977 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:25:35,978 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:25:35,978 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:25:35,978 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:25:35,978 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:25:35,978 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:25:35,978 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:25:35,979 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:25:35,979 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@bae47a0
2024-06-03 03:25:35,979 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:25:35,979 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:25:35,979 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@85ec632
2024-06-03 03:25:35,980 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c05a54d
2024-06-03 03:25:35,980 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:25:35,980 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:25:35,980 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:25:35,980 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:25:35,981 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:25:35,981 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:25:35,981 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:25:35,981 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:25:35,981 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:25:35,982 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:25:35,982 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:25:35,982 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:25:35,982 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:25:35,982 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:25:35,983 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:25:35,983 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:25:35,983 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:25:35,983 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:25:35,983 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:25:35,983 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:25:35,983 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:25:35,983 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:25:35,984 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:25:35,985 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:25:35,985 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:25:35,985 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:25:35,985 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:25:35,985 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:25:35,985 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:25:35,985 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:25:35,985 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:25:35,986 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:25:35,986 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:25:35,986 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:25:35,986 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:25:35,986 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:25:35,987 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:25:35,988 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:25:35,989 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:25:35,989 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:25:35,989 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:25:35,989 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:25:35,989 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:25:35,989 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:25:35,990 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:25:35,990 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:25:35,990 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:25:35,990 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:25:35,990 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:25:35,990 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:25:35,990 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:25:35,991 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:25:35,991 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:25:35,991 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:25:35,991 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:25:35,991 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:25:35,991 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:25:35,992 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:25:35,993 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:25:35,993 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:25:35,993 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:25:35,993 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:25:35,993 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:25:36,006 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@4e7095ac
2024-06-03 03:25:36,006 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e7095ac
2024-06-03 03:25:36,008 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26f3d90c
2024-06-03 03:25:36,008 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3c49fab6
2024-06-03 03:25:36,008 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@515f4131
2024-06-03 03:25:36,008 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@74518890
2024-06-03 03:25:36,009 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c5204af
2024-06-03 03:25:36,009 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3f3ddbd9
2024-06-03 03:25:36,009 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@14c053c6
2024-06-03 03:25:36,009 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6c2d4cc6
2024-06-03 03:25:36,009 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@30865a90
2024-06-03 03:25:36,066 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:25:36,071 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:25:36,072 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:25:36,072 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:25:36,072 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:25:36,075 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:25:36,075 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:25:36,431 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:25:36,431 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:25:36,432 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:25:36,529 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:25:36,540 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:25:36,563 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:25:36,583 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2d2acd89) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7baf6acf)
2024-06-03 03:25:36,583 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e6dad8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b3315a5)
2024-06-03 03:25:36,587 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:25:36,587 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:25:36,601 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4f63e3c7
2024-06-03 03:25:36,602 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4f63e3c7
2024-06-03 03:25:36,602 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4e7095ac`
2024-06-03 03:25:36,609 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:25:36,609 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:25:36,610 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:25:36,616 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:25:36,617 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:25:36,617 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:25:36,617 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:25:36,617 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:25:36,617 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:25:36,619 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:25:36,619 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:25:36,619 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:25:36,621 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bacdbc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c6ee758]
2024-06-03 03:25:36,693 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:25:36,743 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:25:36,760 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:25:36,772 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:25:36,795 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:25:36,845 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,847 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:25:36,847 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:25:36,855 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:25:36,870 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:25:36,882 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:25:36,889 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:25:36,891 DEBUG PropertyBinder: Building property id
2024-06-03 03:25:36,897 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:25:36,898 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,899 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:25:36,899 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:25:36,899 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:25:36,899 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:25:36,899 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:25:36,900 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,900 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:25:36,900 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:25:36,900 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:25:36,900 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:25:36,900 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:25:36,901 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,901 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:25:36,901 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:25:36,901 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:25:36,901 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:25:36,901 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:25:36,902 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,902 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:25:36,902 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:25:36,902 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:25:36,902 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:25:36,902 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:25:36,903 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,903 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:25:36,903 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:25:36,903 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:25:36,903 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:25:36,903 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:25:36,904 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:25:36,916 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:25:36,918 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:25:36,918 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:25:36,919 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:25:36,922 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,922 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:25:36,922 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:25:36,942 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:25:36,942 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:25:36,942 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:25:36,942 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:25:36,943 DEBUG PropertyBinder: Building property id
2024-06-03 03:25:36,943 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:25:36,943 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,943 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:25:36,943 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:25:36,944 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:25:36,944 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:25:36,944 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:25:36,945 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,945 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:25:36,945 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:25:36,946 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:25:36,946 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:25:36,947 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:25:36,948 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,949 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:25:36,949 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:25:36,949 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:25:36,949 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:25:36,950 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:25:36,950 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,950 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:25:36,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:25:36,951 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:25:36,951 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:25:36,951 DEBUG PropertyBinder: Building property questId
2024-06-03 03:25:36,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,952 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:25:36,952 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:25:36,952 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:25:36,952 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:25:36,952 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:25:36,953 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:25:36,955 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:25:36,965 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:25:36,967 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:25:36,967 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:25:36,968 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:25:36,974 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,974 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:25:36,974 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:25:36,974 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:25:36,974 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:25:36,975 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:25:36,975 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:25:36,975 DEBUG PropertyBinder: Building property id
2024-06-03 03:25:36,975 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:25:36,976 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,976 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:25:36,976 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:25:36,976 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:25:36,977 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:25:36,977 DEBUG PropertyBinder: Building property description
2024-06-03 03:25:36,978 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:25:36,979 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:25:36,979 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:25:36,980 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:25:36,980 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:25:36,980 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:25:36,981 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,981 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:25:36,981 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:25:36,981 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:25:36,981 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:25:36,981 DEBUG PropertyBinder: Building property name
2024-06-03 03:25:36,982 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:25:36,982 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:25:36,982 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:25:36,982 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:25:36,982 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:25:36,982 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:25:36,983 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:25:36,984 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:25:36,985 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:25:36,985 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:25:36,985 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:25:36,988 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,988 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:25:36,988 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:25:36,989 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:25:36,989 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:25:36,989 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:25:36,989 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:25:36,989 DEBUG PropertyBinder: Building property id
2024-06-03 03:25:36,989 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:25:36,990 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,990 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:25:36,990 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:25:36,990 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:25:36,990 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:25:36,991 DEBUG PropertyBinder: Building property questId
2024-06-03 03:25:36,991 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:36,991 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:25:36,991 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:25:36,991 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:25:36,991 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:25:36,992 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:25:36,992 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:25:36,993 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:25:36,995 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:25:36,995 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:25:36,997 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:25:37,000 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:37,000 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:25:37,000 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:25:37,000 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:25:37,001 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:25:37,001 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:25:37,001 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:25:37,001 DEBUG PropertyBinder: Building property id
2024-06-03 03:25:37,001 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:25:37,001 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:37,002 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:25:37,002 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:25:37,002 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:25:37,002 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:25:37,003 DEBUG PropertyBinder: Building property login
2024-06-03 03:25:37,003 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:37,003 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:25:37,003 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:25:37,003 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:25:37,003 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:25:37,003 DEBUG PropertyBinder: Building property name
2024-06-03 03:25:37,004 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:37,004 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:25:37,004 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:25:37,004 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:25:37,004 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:25:37,004 DEBUG PropertyBinder: Building property password
2024-06-03 03:25:37,005 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:25:37,005 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:25:37,005 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:25:37,005 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:25:37,005 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:25:37,005 DEBUG PropertyBinder: Building property role
2024-06-03 03:25:37,005 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:25:37,008 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:25:37,011 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:25:37,012 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:25:37,012 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:25:37,016 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:25:37,017 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:25:37,017 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:25:37,017 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:25:37,017 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:25:37,018 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:25:37,019 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:25:37,019 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:25:37,019 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:25:37,019 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:25:37,019 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:25:37,019 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:25:37,023 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:25:37,023 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:25:37,023 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:25:37,024 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:25:37,024 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:25:37,124 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:25:37,403 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:25:37,459 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:25:37,459 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6419a0e1, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:25:37,469 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:25:37,482 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:25:37,557 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:25:37,557 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:25:37,558 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:25:37,559 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:25:37,562 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6bc24e72] under count; prior registration was null
2024-06-03 03:25:37,563 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a916402] under every; prior registration was null
2024-06-03 03:25:37,563 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1a47a1e8] under any; prior registration was null
2024-06-03 03:25:37,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:25:37,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:25:37,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:25:37,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:25:37,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:25:37,565 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:25:37,565 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:25:37,565 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:25:37,565 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:25:37,566 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:25:37,566 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:25:37,566 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:25:37,566 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:25:37,566 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:25:37,566 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:25:37,567 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:25:37,567 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:25:37,570 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3382cf68] under sinh; prior registration was null
2024-06-03 03:25:37,570 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b] under cosh; prior registration was null
2024-06-03 03:25:37,570 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1] under tanh; prior registration was null
2024-06-03 03:25:37,570 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173] under pi; prior registration was null
2024-06-03 03:25:37,570 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8] under log; prior registration was null
2024-06-03 03:25:37,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:25:37,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:25:37,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:25:37,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:25:37,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:25:37,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:25:37,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:25:37,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:25:37,572 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:25:37,572 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:25:37,572 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:25:37,572 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:25:37,573 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3df1a1ac] under position; prior registration was null
2024-06-03 03:25:37,575 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@49cb1baf] under overlay; prior registration was null
2024-06-03 03:25:37,576 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2525a5b8] under trim; prior registration was null
2024-06-03 03:25:37,577 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5b5a4aed] under cast; prior registration was null
2024-06-03 03:25:37,578 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c991465] under collate; prior registration was null
2024-06-03 03:25:37,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@124d02b2] under extract; prior registration was null
2024-06-03 03:25:37,581 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:25:37,581 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:25:37,581 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@66deec87] under ifnull; prior registration was null
2024-06-03 03:25:37,582 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:25:37,582 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:25:37,582 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@42cc183e] under pad; prior registration was null
2024-06-03 03:25:37,583 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@205df5dc] under str; prior registration was null
2024-06-03 03:25:37,584 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6bee793f] under format; prior registration was null
2024-06-03 03:25:37,585 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@30893e08] under timestampadd; prior registration was null
2024-06-03 03:25:37,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@188598ad] under timestampdiff; prior registration was null
2024-06-03 03:25:37,586 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:25:37,586 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a4ab7f7] under current_date; prior registration was null
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6badba10] under current_time; prior registration was null
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b7e8044] under current_timestamp; prior registration was null
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550de6b8] under local_date; prior registration was null
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a1706e1] under local_time; prior registration was null
2024-06-03 03:25:37,587 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c6c4689] under local_datetime; prior registration was null
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63cf9de0] under offset_datetime; prior registration was null
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@594d9f07] under instant; prior registration was null
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2fd64b11] under sql; prior registration was null
2024-06-03 03:25:37,588 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@949c598] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3382cf68
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:25:37,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:25:37,590 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:25:37,590 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173
2024-06-03 03:25:37,590 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:25:37,590 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:25:37,590 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:25:37,590 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:25:37,590 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:25:37,591 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:25:37,591 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:25:37,591 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:25:37,591 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:25:37,591 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:25:37,591 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:25:37,591 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:25:37,592 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@314b9e4b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:25:37,592 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:25:37,592 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:25:37,592 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3a1706e1
2024-06-03 03:25:37,592 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3c6c4689
2024-06-03 03:25:37,593 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5de5e95] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:25:37,593 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:25:37,593 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@365cdacf] under bit_length; prior registration was null
2024-06-03 03:25:37,593 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@303c55fa] under octet_length; prior registration was null
2024-06-03 03:25:37,593 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9efcd90] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3df1a1ac
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7eb200ce] under bitand; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under bitor; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c2924d7] under bitxor; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5de58f] under bitnot; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:25:37,594 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:25:37,595 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:25:37,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6587305a] under median; prior registration was null
2024-06-03 03:25:37,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:25:37,597 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:25:37,597 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:25:37,597 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:25:37,597 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:25:37,597 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:25:37,597 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:25:37,597 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:25:37,597 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:25:37,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f81621c] under insert; prior registration was null
2024-06-03 03:25:37,599 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@668625f5] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@49cb1baf
2024-06-03 03:25:37,599 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:25:37,600 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@19a20bb2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:25:37,600 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:25:37,601 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:25:37,601 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:25:37,601 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:25:37,601 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:25:37,601 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:25:37,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@663f237a] under listagg; prior registration was null
2024-06-03 03:25:37,604 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3667faa8] under array; prior registration was null
2024-06-03 03:25:37,605 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1756f7cc] under array_list; prior registration was null
2024-06-03 03:25:37,605 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2b0e9f30] under array_agg; prior registration was null
2024-06-03 03:25:37,607 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@7c1447b5] under array_position; prior registration was null
2024-06-03 03:25:37,614 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@4b960b5b] under array_positions; prior registration was null
2024-06-03 03:25:37,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions_list; prior registration was null
2024-06-03 03:25:37,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@539a138b] under array_length; prior registration was null
2024-06-03 03:25:37,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@42383cb0] under array_concat; prior registration was null
2024-06-03 03:25:37,620 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@d2e6b0b] under array_prepend; prior registration was null
2024-06-03 03:25:37,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1f1cddf3] under array_append; prior registration was null
2024-06-03 03:25:37,623 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3fd05b3e] under array_contains; prior registration was null
2024-06-03 03:25:37,623 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4eb9f2af] under array_contains_nullable; prior registration was null
2024-06-03 03:25:37,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2e32fc22] under array_overlaps; prior registration was null
2024-06-03 03:25:37,624 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3f5156a6] under array_overlaps_nullable; prior registration was null
2024-06-03 03:25:37,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@712c5463] under array_get; prior registration was null
2024-06-03 03:25:37,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@66de00f2] under array_set; prior registration was null
2024-06-03 03:25:37,626 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:25:37,626 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@ffd4cba] under array_remove_index; prior registration was null
2024-06-03 03:25:37,626 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f1483fd] under array_slice; prior registration was null
2024-06-03 03:25:37,626 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:25:37,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@670f2466] under array_trim; prior registration was null
2024-06-03 03:25:37,631 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@36c2d629] under array_fill; prior registration was null
2024-06-03 03:25:37,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55fee662] under array_fill_list; prior registration was null
2024-06-03 03:25:37,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@479111ba] under array_to_string; prior registration was null
2024-06-03 03:25:37,633 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:25:37,633 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:25:37,633 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:25:37,633 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:25:37,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5b5dce5c] under mode; prior registration was null
2024-06-03 03:25:37,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7f4701b1] under percentile_cont; prior registration was null
2024-06-03 03:25:37,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@adcfad9] under percentile_disc; prior registration was null
2024-06-03 03:25:37,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10c47c79] under rank; prior registration was null
2024-06-03 03:25:37,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b2553d9] under dense_rank; prior registration was null
2024-06-03 03:25:37,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@753fd7a1] under percent_rank; prior registration was null
2024-06-03 03:25:37,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@12a2585b] under cume_dist; prior registration was null
2024-06-03 03:25:37,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3bf54172] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:25:37,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2c9a6717] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:25:37,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3bb5ceb] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:25:37,639 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6d0be7ab] under trunc; prior registration was null
2024-06-03 03:25:37,640 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:25:37,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d4fb213] under date_trunc; prior registration was null
2024-06-03 03:25:37,648 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:25:37,649 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:25:37,650 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:25:37,650 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:25:37,650 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:25:37,650 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:25:37,650 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:25:37,650 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:25:37,650 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:25:37,651 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:25:37,652 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:25:37,653 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,654 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:25:37,654 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:25:37,654 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:25:37,654 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:25:37,654 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:25:37,655 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:25:37,656 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:25:37,656 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:25:37,656 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:25:37,656 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:25:37,656 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:25:37,657 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:25:37,658 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:25:37,659 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:25:37,660 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:25:37,660 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:25:37,661 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:25:37,661 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:25:37,661 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:25:37,661 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:25:37,661 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:25:37,661 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:25:37,661 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:25:37,662 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:25:37,662 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:25:37,662 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:25:37,662 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:25:37,662 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:25:37,662 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:25:37,662 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:25:37,662 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:25:37,663 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:25:37,663 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:25:37,663 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:25:37,663 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:25:37,663 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,664 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,665 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,665 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:25:37,665 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:25:37,665 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:25:37,665 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:25:37,665 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:25:37,665 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:25:37,665 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:25:37,666 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:25:37,667 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:25:37,668 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:25:37,669 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:25:37,669 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:25:37,681 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:25:37,806 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:25:37,808 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:25:37,952 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:25:37,952 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:25:38,427 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:25:38,466 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:25:38,466 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:25:38,502 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:25:38,503 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:25:38,503 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:25:38,552 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:25:38,554 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:25:38,554 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:25:38,586 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:25:38,588 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:25:38,588 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:25:38,616 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:25:38,652 DEBUG creation: Starting post-init callbacks
2024-06-03 03:25:38,652 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:25:38,652 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:25:38,652 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:25:38,652 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:25:38,652 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:25:38,805 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:25:38,809 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:25:38,846 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:25:38,853 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:25:38,871 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:25:38,871 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:25:38,871 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:25:38,871 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:25:38,871 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:25:38,871 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:25:38,871 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:25:38,872 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:25:38,872 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:25:38,872 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:25:38,872 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:25:38,872 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:25:38,872 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:25:38,872 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:25:38,872 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:25:38,872 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:25:38,873 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:25:38,873 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:25:38,873 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:25:38,873 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:25:38,873 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:25:38,873 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:25:38,873 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:25:38,873 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:25:38,873 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:25:38,874 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:25:38,874 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:25:38,874 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:25:38,874 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:25:38,874 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:25:38,874 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:25:38,874 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:25:38,874 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:25:38,874 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:25:38,875 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:25:38,875 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:25:38,875 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:25:38,875 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:25:38,875 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:25:38,875 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:25:38,875 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:25:38,949 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:25:38,950 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:25:38,955 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:25:38,955 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:25:38,956 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bacdbc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b01c689]
2024-06-03 03:25:38,973 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:25:38,973 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:25:38,984 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:25:38,991 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:25:39,683 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:25:39,685 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:25:40,048 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:25:40,073 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:25:40,113 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:25:40,142 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:25:40,145 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:25:40,145 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:25:40,151 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66314fee
2024-06-03 03:25:40,151 DEBUG SessionFactoryRegistry: Registering SessionFactory: 027ad231-83ea-4354-9f41-319e07803fab (<unnamed>)
2024-06-03 03:25:40,152 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:25:40,152 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:25:40,239 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:25:40,239 DEBUG TransactionImpl: begin
2024-06-03 03:25:40,240 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:25:40,241 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:25:40,241 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:25:40,251 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 0 objects
2024-06-03 03:25:40,251 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:25:40,253 DEBUG TransactionImpl: rolling back
2024-06-03 03:25:40,254 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:25:40,255 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:26:03,068 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:26:03,127 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:26:03,137 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:26:03,319 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:26:03,322 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:26:03,426 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:26:03,448 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:26:03,998 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:26:04,016 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:26:04,042 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:26:04,051 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:26:04,052 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:26:04,054 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:26:04,055 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:26:04,056 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:26:04,059 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:26:04,060 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:26:04,063 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:26:04,064 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:26:04,065 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:26:04,065 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:26:04,067 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:26:04,102 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:26:04,103 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:26:04,395 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:26:04,395 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:26:04,396 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@bae47a0
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@85ec632
2024-06-03 03:26:04,397 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c05a54d
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:26:04,398 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:26:04,399 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:26:04,400 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:26:04,401 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:26:04,402 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:26:04,403 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:26:04,404 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:26:04,404 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:26:04,404 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:26:04,404 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:26:04,404 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:26:04,405 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:26:04,406 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:26:04,406 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:26:04,406 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:26:04,406 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:26:04,406 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:26:04,406 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:26:04,406 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:26:04,407 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:26:04,407 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:26:04,408 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:26:04,409 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:26:04,409 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:26:04,423 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@4e7095ac
2024-06-03 03:26:04,423 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e7095ac
2024-06-03 03:26:04,425 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26f3d90c
2024-06-03 03:26:04,428 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3c49fab6
2024-06-03 03:26:04,428 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@515f4131
2024-06-03 03:26:04,428 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@74518890
2024-06-03 03:26:04,428 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c5204af
2024-06-03 03:26:04,428 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3f3ddbd9
2024-06-03 03:26:04,428 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@14c053c6
2024-06-03 03:26:04,429 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6c2d4cc6
2024-06-03 03:26:04,429 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@30865a90
2024-06-03 03:26:04,483 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:26:04,489 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:26:04,489 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:26:04,490 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:26:04,490 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:26:04,496 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:26:04,496 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:26:04,906 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:26:04,906 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:26:04,907 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:26:05,015 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:26:05,025 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:26:05,043 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:26:05,060 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2d2acd89) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7baf6acf)
2024-06-03 03:26:05,061 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e6dad8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b3315a5)
2024-06-03 03:26:05,066 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:26:05,066 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:26:05,079 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4f63e3c7
2024-06-03 03:26:05,079 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4f63e3c7
2024-06-03 03:26:05,079 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4e7095ac`
2024-06-03 03:26:05,085 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:26:05,085 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:26:05,085 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:26:05,093 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:26:05,094 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:26:05,094 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:26:05,094 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:26:05,094 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:26:05,094 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:26:05,097 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:26:05,097 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:26:05,097 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:26:05,099 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bacdbc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c6ee758]
2024-06-03 03:26:05,174 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:26:05,240 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:26:05,257 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:26:05,277 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:26:05,295 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:26:05,339 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,340 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:26:05,340 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:26:05,350 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:26:05,357 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:26:05,365 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:26:05,372 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:26:05,375 DEBUG PropertyBinder: Building property id
2024-06-03 03:26:05,387 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:26:05,390 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,390 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:26:05,390 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:26:05,390 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:26:05,390 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:26:05,390 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:26:05,392 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,392 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:26:05,393 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:26:05,393 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:26:05,393 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:26:05,393 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:26:05,393 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,394 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:26:05,394 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:26:05,394 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:26:05,394 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:26:05,394 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:26:05,394 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,394 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:26:05,394 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:26:05,395 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:26:05,395 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:26:05,395 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:26:05,395 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,395 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:26:05,395 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:26:05,395 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:26:05,395 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:26:05,396 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:26:05,397 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:26:05,407 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:26:05,408 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:26:05,408 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:26:05,409 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:26:05,413 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,414 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:26:05,414 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:26:05,437 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:26:05,437 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:26:05,438 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:26:05,438 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:26:05,438 DEBUG PropertyBinder: Building property id
2024-06-03 03:26:05,438 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:26:05,438 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,439 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:26:05,439 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:26:05,439 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:26:05,439 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:26:05,439 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:26:05,439 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,440 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:26:05,440 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:26:05,440 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:26:05,440 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:26:05,440 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:26:05,440 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,440 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:26:05,441 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:26:05,441 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:26:05,441 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:26:05,441 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:26:05,441 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,441 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:26:05,441 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:26:05,442 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:26:05,442 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:26:05,442 DEBUG PropertyBinder: Building property questId
2024-06-03 03:26:05,443 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,443 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:26:05,443 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:26:05,443 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:26:05,443 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:26:05,444 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:26:05,445 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:26:05,445 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:26:05,458 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:26:05,462 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:26:05,464 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:26:05,464 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:26:05,473 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,473 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:26:05,473 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:26:05,473 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:26:05,473 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:26:05,474 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:26:05,474 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:26:05,474 DEBUG PropertyBinder: Building property id
2024-06-03 03:26:05,475 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:26:05,477 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,477 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:26:05,477 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:26:05,478 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:26:05,478 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:26:05,478 DEBUG PropertyBinder: Building property description
2024-06-03 03:26:05,479 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:26:05,479 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:26:05,479 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:26:05,480 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:26:05,480 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:26:05,480 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:26:05,481 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,481 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:26:05,481 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:26:05,481 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:26:05,481 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:26:05,481 DEBUG PropertyBinder: Building property name
2024-06-03 03:26:05,482 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:26:05,482 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:26:05,482 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:26:05,482 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:26:05,483 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:26:05,483 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:26:05,483 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:26:05,484 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:26:05,485 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:26:05,485 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:26:05,485 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:26:05,487 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,487 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:26:05,487 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:26:05,488 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:26:05,488 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:26:05,488 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:26:05,488 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:26:05,488 DEBUG PropertyBinder: Building property id
2024-06-03 03:26:05,488 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:26:05,489 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,489 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:26:05,489 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:26:05,489 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:26:05,489 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:26:05,489 DEBUG PropertyBinder: Building property questId
2024-06-03 03:26:05,489 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,489 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:26:05,489 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:26:05,490 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:26:05,490 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:26:05,490 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:26:05,490 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:26:05,492 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:26:05,493 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:26:05,494 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:26:05,495 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:26:05,499 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,499 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:26:05,499 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:26:05,500 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:26:05,500 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:26:05,500 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:26:05,500 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:26:05,501 DEBUG PropertyBinder: Building property id
2024-06-03 03:26:05,501 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:26:05,501 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,501 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:26:05,502 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:26:05,502 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:26:05,502 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:26:05,502 DEBUG PropertyBinder: Building property login
2024-06-03 03:26:05,502 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,502 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:26:05,503 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:26:05,503 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:26:05,503 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:26:05,503 DEBUG PropertyBinder: Building property name
2024-06-03 03:26:05,503 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,503 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:26:05,504 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:26:05,504 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:26:05,504 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:26:05,504 DEBUG PropertyBinder: Building property password
2024-06-03 03:26:05,504 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:26:05,505 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:26:05,505 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:26:05,505 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:26:05,505 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:26:05,505 DEBUG PropertyBinder: Building property role
2024-06-03 03:26:05,506 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:26:05,508 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:26:05,513 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:26:05,514 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:26:05,514 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:26:05,518 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:26:05,519 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:26:05,519 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:26:05,519 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:26:05,519 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:26:05,520 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:26:05,520 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:26:05,520 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:26:05,520 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:26:05,520 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:26:05,520 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:26:05,520 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:26:05,521 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:26:05,527 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:26:05,527 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:26:05,528 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:26:05,528 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:26:05,528 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:26:05,609 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:26:05,906 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:26:05,969 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:26:05,969 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6419a0e1, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:26:05,982 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:26:05,990 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:26:06,050 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:26:06,050 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:26:06,051 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:26:06,052 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:26:06,053 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6bc24e72] under count; prior registration was null
2024-06-03 03:26:06,055 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a916402] under every; prior registration was null
2024-06-03 03:26:06,055 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1a47a1e8] under any; prior registration was null
2024-06-03 03:26:06,055 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:26:06,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:26:06,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:26:06,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:26:06,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:26:06,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:26:06,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:26:06,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:26:06,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:26:06,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:26:06,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:26:06,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:26:06,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:26:06,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:26:06,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:26:06,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:26:06,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:26:06,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3382cf68] under sinh; prior registration was null
2024-06-03 03:26:06,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b] under cosh; prior registration was null
2024-06-03 03:26:06,062 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1] under tanh; prior registration was null
2024-06-03 03:26:06,062 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173] under pi; prior registration was null
2024-06-03 03:26:06,062 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8] under log; prior registration was null
2024-06-03 03:26:06,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:26:06,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:26:06,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:26:06,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:26:06,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:26:06,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:26:06,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:26:06,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:26:06,064 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:26:06,064 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:26:06,064 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:26:06,064 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:26:06,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3df1a1ac] under position; prior registration was null
2024-06-03 03:26:06,067 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@49cb1baf] under overlay; prior registration was null
2024-06-03 03:26:06,067 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2525a5b8] under trim; prior registration was null
2024-06-03 03:26:06,068 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5b5a4aed] under cast; prior registration was null
2024-06-03 03:26:06,069 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c991465] under collate; prior registration was null
2024-06-03 03:26:06,070 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@124d02b2] under extract; prior registration was null
2024-06-03 03:26:06,070 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:26:06,070 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:26:06,070 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@66deec87] under ifnull; prior registration was null
2024-06-03 03:26:06,070 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:26:06,070 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:26:06,071 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@42cc183e] under pad; prior registration was null
2024-06-03 03:26:06,071 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@205df5dc] under str; prior registration was null
2024-06-03 03:26:06,072 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6bee793f] under format; prior registration was null
2024-06-03 03:26:06,073 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@30893e08] under timestampadd; prior registration was null
2024-06-03 03:26:06,074 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@188598ad] under timestampdiff; prior registration was null
2024-06-03 03:26:06,074 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:26:06,074 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:26:06,074 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a4ab7f7] under current_date; prior registration was null
2024-06-03 03:26:06,074 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6badba10] under current_time; prior registration was null
2024-06-03 03:26:06,074 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b7e8044] under current_timestamp; prior registration was null
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550de6b8] under local_date; prior registration was null
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a1706e1] under local_time; prior registration was null
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c6c4689] under local_datetime; prior registration was null
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63cf9de0] under offset_datetime; prior registration was null
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@594d9f07] under instant; prior registration was null
2024-06-03 03:26:06,075 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:26:06,076 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2fd64b11] under sql; prior registration was null
2024-06-03 03:26:06,076 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:26:06,076 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:26:06,076 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:26:06,076 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8
2024-06-03 03:26:06,076 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@949c598] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3382cf68
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:26:06,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:26:06,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:26:06,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:26:06,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:26:06,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:26:06,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:26:06,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:26:06,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:26:06,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:26:06,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@314b9e4b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:26:06,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:26:06,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:26:06,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3a1706e1
2024-06-03 03:26:06,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3c6c4689
2024-06-03 03:26:06,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5de5e95] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:26:06,080 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@365cdacf] under bit_length; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@303c55fa] under octet_length; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9efcd90] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3df1a1ac
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7eb200ce] under bitand; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under bitor; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c2924d7] under bitxor; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5de58f] under bitnot; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:26:06,081 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6587305a] under median; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:26:06,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:26:06,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:26:06,084 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:26:06,084 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f81621c] under insert; prior registration was null
2024-06-03 03:26:06,084 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@668625f5] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@49cb1baf
2024-06-03 03:26:06,084 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:26:06,084 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@19a20bb2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:26:06,084 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:26:06,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:26:06,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:26:06,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:26:06,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:26:06,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:26:06,086 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@663f237a] under listagg; prior registration was null
2024-06-03 03:26:06,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3667faa8] under array; prior registration was null
2024-06-03 03:26:06,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1756f7cc] under array_list; prior registration was null
2024-06-03 03:26:06,089 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2b0e9f30] under array_agg; prior registration was null
2024-06-03 03:26:06,091 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@7c1447b5] under array_position; prior registration was null
2024-06-03 03:26:06,098 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@4b960b5b] under array_positions; prior registration was null
2024-06-03 03:26:06,100 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions_list; prior registration was null
2024-06-03 03:26:06,100 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@539a138b] under array_length; prior registration was null
2024-06-03 03:26:06,101 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@42383cb0] under array_concat; prior registration was null
2024-06-03 03:26:06,103 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@d2e6b0b] under array_prepend; prior registration was null
2024-06-03 03:26:06,103 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1f1cddf3] under array_append; prior registration was null
2024-06-03 03:26:06,104 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3fd05b3e] under array_contains; prior registration was null
2024-06-03 03:26:06,104 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4eb9f2af] under array_contains_nullable; prior registration was null
2024-06-03 03:26:06,105 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2e32fc22] under array_overlaps; prior registration was null
2024-06-03 03:26:06,105 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3f5156a6] under array_overlaps_nullable; prior registration was null
2024-06-03 03:26:06,106 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@712c5463] under array_get; prior registration was null
2024-06-03 03:26:06,107 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@66de00f2] under array_set; prior registration was null
2024-06-03 03:26:06,107 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:26:06,107 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@ffd4cba] under array_remove_index; prior registration was null
2024-06-03 03:26:06,107 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f1483fd] under array_slice; prior registration was null
2024-06-03 03:26:06,107 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:26:06,108 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@670f2466] under array_trim; prior registration was null
2024-06-03 03:26:06,110 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@36c2d629] under array_fill; prior registration was null
2024-06-03 03:26:06,110 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55fee662] under array_fill_list; prior registration was null
2024-06-03 03:26:06,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@479111ba] under array_to_string; prior registration was null
2024-06-03 03:26:06,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:26:06,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:26:06,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:26:06,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:26:06,112 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5b5dce5c] under mode; prior registration was null
2024-06-03 03:26:06,112 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7f4701b1] under percentile_cont; prior registration was null
2024-06-03 03:26:06,112 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@adcfad9] under percentile_disc; prior registration was null
2024-06-03 03:26:06,113 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10c47c79] under rank; prior registration was null
2024-06-03 03:26:06,113 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b2553d9] under dense_rank; prior registration was null
2024-06-03 03:26:06,113 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@753fd7a1] under percent_rank; prior registration was null
2024-06-03 03:26:06,113 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@12a2585b] under cume_dist; prior registration was null
2024-06-03 03:26:06,114 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3bf54172] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:26:06,114 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2c9a6717] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:26:06,114 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3bb5ceb] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:26:06,116 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6d0be7ab] under trunc; prior registration was null
2024-06-03 03:26:06,116 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:26:06,117 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d4fb213] under date_trunc; prior registration was null
2024-06-03 03:26:06,123 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:26:06,123 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:26:06,123 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:26:06,123 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:26:06,123 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:26:06,123 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:26:06,123 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:26:06,124 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:26:06,125 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:26:06,126 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:26:06,127 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:26:06,128 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:26:06,129 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:26:06,130 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:26:06,131 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:26:06,132 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:26:06,133 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:26:06,134 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:26:06,135 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:26:06,136 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:26:06,136 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:26:06,150 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:26:06,279 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:26:06,281 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:26:06,377 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:26:06,377 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:26:06,679 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:26:06,711 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:26:06,711 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:26:06,741 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:26:06,746 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:26:06,746 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:26:06,780 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:26:06,781 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:26:06,781 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:26:06,799 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:26:06,800 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:26:06,800 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:26:06,819 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:26:06,856 DEBUG creation: Starting post-init callbacks
2024-06-03 03:26:06,856 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:26:06,857 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:26:06,857 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:26:06,857 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:26:06,857 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:26:06,982 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:26:06,986 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:26:07,006 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:26:07,010 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:26:07,025 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:26:07,026 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:26:07,026 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:26:07,026 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:26:07,026 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:26:07,027 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:26:07,027 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:26:07,028 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:26:07,028 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:26:07,028 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:26:07,028 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:26:07,028 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:26:07,028 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:26:07,028 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:26:07,029 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:26:07,029 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:26:07,029 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:26:07,029 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:26:07,030 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:26:07,030 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:26:07,030 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:26:07,030 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:26:07,030 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:26:07,031 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:26:07,031 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:26:07,031 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:26:07,031 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:26:07,031 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:26:07,032 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:26:07,032 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:26:07,032 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:26:07,032 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:26:07,081 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:26:07,082 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:26:07,086 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:26:07,087 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:26:07,088 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bacdbc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b01c689]
2024-06-03 03:26:07,103 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:26:07,103 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:26:07,113 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:26:07,120 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:26:07,488 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:26:07,489 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:26:07,620 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:26:07,639 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:26:07,669 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:26:07,687 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:26:07,689 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:26:07,689 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:26:07,697 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66314fee
2024-06-03 03:26:07,697 DEBUG SessionFactoryRegistry: Registering SessionFactory: 2fd6770b-c9d1-4db0-8264-43bb318e6101 (<unnamed>)
2024-06-03 03:26:07,697 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:26:07,698 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:26:07,794 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:26:07,794 DEBUG TransactionImpl: begin
2024-06-03 03:26:07,794 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:26:07,795 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:26:07,795 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:26:07,800 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 0 objects
2024-06-03 03:26:07,800 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:26:07,802 DEBUG TransactionImpl: rolling back
2024-06-03 03:26:07,802 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:26:07,803 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:27:30,978 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:27:31,021 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:27:31,036 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:27:31,195 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:27:31,198 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:27:31,300 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:27:31,320 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:27:32,043 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:27:32,059 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:27:32,084 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:27:32,099 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:27:32,100 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:27:32,101 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:27:32,101 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:27:32,104 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:27:32,107 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:27:32,108 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:27:32,111 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:27:32,113 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:27:32,116 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:27:32,117 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:27:32,120 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:27:32,149 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:27:32,150 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:27:32,591 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:27:32,592 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:27:32,592 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:27:32,592 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@bae47a0
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@bae47a0
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@85ec632
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@85ec632
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@1c05a54d
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@1c05a54d
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1c05a54d
2024-06-03 03:27:32,593 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:27:32,594 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:27:32,594 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:27:32,594 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:27:32,594 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:27:32,594 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:27:32,594 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:27:32,594 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:27:32,595 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:27:32,595 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:27:32,595 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:27:32,595 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:27:32,595 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:27:32,595 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:27:32,595 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:27:32,595 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:27:32,596 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:27:32,596 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:27:32,596 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:27:32,596 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:27:32,596 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:27:32,596 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:27:32,597 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:27:32,597 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:27:32,597 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:27:32,597 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:27:32,597 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:27:32,597 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:27:32,598 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:27:32,598 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:27:32,598 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:27:32,598 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:27:32,598 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:27:32,599 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:27:32,599 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:27:32,599 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:27:32,599 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:27:32,599 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:27:32,599 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:27:32,600 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:27:32,600 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:27:32,600 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:27:32,600 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:27:32,600 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:27:32,600 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:27:32,601 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:27:32,601 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:27:32,601 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:27:32,601 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:27:32,602 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:27:32,602 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:27:32,602 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:27:32,603 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:27:32,603 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:27:32,603 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:27:32,603 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:27:32,604 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:27:32,604 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:27:32,604 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:27:32,604 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:27:32,604 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:27:32,605 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:27:32,605 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:27:32,605 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:27:32,605 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:27:32,606 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:27:32,608 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:27:32,609 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:27:32,610 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:27:32,610 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:27:32,610 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:27:32,610 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:27:32,611 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:27:32,611 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:27:32,611 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:27:32,611 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:27:32,611 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:27:32,612 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:27:32,612 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:27:32,612 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:27:32,612 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:27:32,612 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:27:32,612 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:27:32,613 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:27:32,613 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:27:32,613 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:27:32,613 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:27:32,613 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:27:32,613 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:27:32,613 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:27:32,614 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:27:32,614 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:27:32,614 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:27:32,614 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:27:32,615 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:27:32,615 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:27:32,615 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:27:32,615 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:27:32,615 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:27:32,615 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:27:32,616 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:27:32,616 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:27:32,616 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:27:32,616 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:27:32,616 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:27:32,616 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:27:32,617 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:27:32,617 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:27:32,617 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:27:32,630 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@1162410a
2024-06-03 03:27:32,630 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1162410a
2024-06-03 03:27:32,632 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@14c053c6
2024-06-03 03:27:32,633 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6c2d4cc6
2024-06-03 03:27:32,633 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@30865a90
2024-06-03 03:27:32,633 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6134ac4a
2024-06-03 03:27:32,633 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@777c9dc9
2024-06-03 03:27:32,633 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71b1a49c
2024-06-03 03:27:32,633 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@73e132e0
2024-06-03 03:27:32,633 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3773862a
2024-06-03 03:27:32,633 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2472c7d8
2024-06-03 03:27:32,721 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:27:32,730 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:27:32,730 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:27:32,730 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:27:32,731 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:27:32,734 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:27:32,735 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:27:33,382 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:27:33,383 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:27:33,384 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:27:33,565 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:27:33,588 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:27:33,627 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:27:33,670 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@377008df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@540dbda9)
2024-06-03 03:27:33,671 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22bb5646) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1be59f28)
2024-06-03 03:27:33,688 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:27:33,690 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:27:33,728 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@ea9e141
2024-06-03 03:27:33,728 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@ea9e141
2024-06-03 03:27:33,729 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1162410a`
2024-06-03 03:27:33,746 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:27:33,746 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:27:33,746 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:27:33,760 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:27:33,760 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:27:33,760 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:27:33,760 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:27:33,760 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:27:33,761 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:27:33,762 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:27:33,763 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:27:33,763 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:27:33,765 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a1debfa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44de94c3]
2024-06-03 03:27:33,917 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:27:34,028 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:27:34,052 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:27:34,078 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:27:34,103 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:27:34,179 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,181 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:27:34,181 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:27:34,196 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:27:34,213 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:27:34,228 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:27:34,243 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:27:34,245 DEBUG PropertyBinder: Building property id
2024-06-03 03:27:34,261 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:27:34,264 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,264 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:27:34,265 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:27:34,265 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:27:34,265 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:27:34,265 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:27:34,267 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,267 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:27:34,267 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:27:34,267 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:27:34,268 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:27:34,268 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:27:34,269 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,270 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:27:34,270 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:27:34,270 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:27:34,271 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:27:34,271 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:27:34,272 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,272 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:27:34,273 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:27:34,273 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:27:34,274 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:27:34,274 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:27:34,277 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,279 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:27:34,279 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:27:34,279 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:27:34,279 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:27:34,280 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:27:34,284 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:27:34,302 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:27:34,305 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:27:34,305 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:27:34,307 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:27:34,313 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,313 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:27:34,313 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:27:34,357 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:27:34,357 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:27:34,358 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:27:34,358 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:27:34,358 DEBUG PropertyBinder: Building property id
2024-06-03 03:27:34,358 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:27:34,360 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,361 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:27:34,361 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:27:34,362 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:27:34,362 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:27:34,363 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:27:34,364 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,364 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:27:34,364 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:27:34,368 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:27:34,369 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:27:34,370 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:27:34,372 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,372 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:27:34,373 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:27:34,373 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:27:34,373 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:27:34,374 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:27:34,376 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,377 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:27:34,377 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:27:34,377 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:27:34,377 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:27:34,377 DEBUG PropertyBinder: Building property questId
2024-06-03 03:27:34,377 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,378 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:27:34,378 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:27:34,378 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:27:34,378 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:27:34,378 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:27:34,379 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:27:34,380 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:27:34,400 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:27:34,402 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:27:34,405 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:27:34,406 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:27:34,416 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,416 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:27:34,416 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:27:34,416 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:27:34,416 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:27:34,417 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:27:34,417 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:27:34,417 DEBUG PropertyBinder: Building property id
2024-06-03 03:27:34,417 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:27:34,418 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,418 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:27:34,418 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:27:34,418 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:27:34,418 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:27:34,419 DEBUG PropertyBinder: Building property description
2024-06-03 03:27:34,420 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:27:34,421 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:27:34,421 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:27:34,422 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:27:34,422 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:27:34,423 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:27:34,424 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,424 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:27:34,424 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:27:34,424 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:27:34,424 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:27:34,425 DEBUG PropertyBinder: Building property name
2024-06-03 03:27:34,425 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:27:34,426 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:27:34,426 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:27:34,426 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:27:34,426 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:27:34,426 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:27:34,427 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:27:34,429 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:27:34,429 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:27:34,430 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:27:34,430 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:27:34,433 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,433 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:27:34,433 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:27:34,434 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:27:34,434 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:27:34,434 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:27:34,434 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:27:34,434 DEBUG PropertyBinder: Building property id
2024-06-03 03:27:34,435 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:27:34,436 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,436 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:27:34,436 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:27:34,437 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:27:34,437 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:27:34,437 DEBUG PropertyBinder: Building property questId
2024-06-03 03:27:34,437 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,437 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:27:34,438 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:27:34,438 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:27:34,438 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:27:34,438 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:27:34,439 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:27:34,440 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:27:34,441 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:27:34,441 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:27:34,442 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:27:34,446 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,447 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:27:34,447 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:27:34,447 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:27:34,447 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:27:34,448 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:27:34,448 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:27:34,448 DEBUG PropertyBinder: Building property id
2024-06-03 03:27:34,448 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:27:34,449 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,449 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:27:34,449 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:27:34,449 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:27:34,449 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:27:34,449 DEBUG PropertyBinder: Building property login
2024-06-03 03:27:34,449 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,450 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:27:34,450 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:27:34,450 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:27:34,450 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:27:34,450 DEBUG PropertyBinder: Building property name
2024-06-03 03:27:34,450 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,451 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:27:34,451 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:27:34,451 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:27:34,451 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:27:34,451 DEBUG PropertyBinder: Building property password
2024-06-03 03:27:34,452 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:27:34,453 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:27:34,453 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:27:34,453 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:27:34,454 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:27:34,454 DEBUG PropertyBinder: Building property role
2024-06-03 03:27:34,454 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:27:34,458 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:27:34,462 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:27:34,464 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:27:34,464 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:27:34,470 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:27:34,470 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:27:34,470 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:27:34,470 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:27:34,471 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:27:34,471 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:27:34,471 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:27:34,471 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:27:34,471 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:27:34,471 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:27:34,471 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:27:34,471 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:27:34,472 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:27:34,472 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:27:34,472 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:27:34,472 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:27:34,472 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:27:34,472 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:27:34,473 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:27:34,473 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:27:34,473 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:27:34,480 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:27:34,480 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:27:34,480 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:27:34,480 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:27:34,480 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:27:34,592 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:27:35,005 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:27:35,141 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:27:35,142 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@56b859a6, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:27:35,162 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:27:35,183 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:27:35,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:27:35,315 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:27:35,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:27:35,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:27:35,329 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5034f5dd] under count; prior registration was null
2024-06-03 03:27:35,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@18539cb1] under every; prior registration was null
2024-06-03 03:27:35,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@748f93bb] under any; prior registration was null
2024-06-03 03:27:35,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:27:35,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:27:35,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:27:35,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:27:35,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:27:35,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:27:35,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:27:35,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:27:35,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:27:35,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:27:35,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:27:35,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:27:35,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:27:35,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:27:35,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:27:35,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:27:35,333 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:27:35,338 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d21852b] under sinh; prior registration was null
2024-06-03 03:27:35,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd98a05] under cosh; prior registration was null
2024-06-03 03:27:35,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b8ec001] under tanh; prior registration was null
2024-06-03 03:27:35,341 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e95b653] under pi; prior registration was null
2024-06-03 03:27:35,341 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f6c6077] under log; prior registration was null
2024-06-03 03:27:35,343 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:27:35,343 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:27:35,343 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:27:35,343 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:27:35,343 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:27:35,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:27:35,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:27:35,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:27:35,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:27:35,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:27:35,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:27:35,344 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:27:35,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2c2a027c] under position; prior registration was null
2024-06-03 03:27:35,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1e0fdb2f] under overlay; prior registration was null
2024-06-03 03:27:35,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2740e316] under trim; prior registration was null
2024-06-03 03:27:35,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3451f01d] under cast; prior registration was null
2024-06-03 03:27:35,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72503b19] under collate; prior registration was null
2024-06-03 03:27:35,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2ecf5915] under extract; prior registration was null
2024-06-03 03:27:35,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:27:35,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:27:35,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6a1d6ef2] under ifnull; prior registration was null
2024-06-03 03:27:35,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:27:35,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:27:35,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6bcc3f27] under pad; prior registration was null
2024-06-03 03:27:35,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6bee793f] under str; prior registration was null
2024-06-03 03:27:35,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4548d254] under format; prior registration was null
2024-06-03 03:27:35,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@39c96e48] under timestampadd; prior registration was null
2024-06-03 03:27:35,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2b7e8044] under timestampdiff; prior registration was null
2024-06-03 03:27:35,364 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:27:35,364 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:27:35,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63cf9de0] under current_date; prior registration was null
2024-06-03 03:27:35,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@594d9f07] under current_time; prior registration was null
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5befbac1] under current_timestamp; prior registration was null
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e9f73b] under local_date; prior registration was null
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a565afb] under local_time; prior registration was null
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2fd64b11] under local_datetime; prior registration was null
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@949c598] under offset_datetime; prior registration was null
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43d3aba5] under instant; prior registration was null
2024-06-03 03:27:35,365 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:27:35,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6f1b8544] under sql; prior registration was null
2024-06-03 03:27:35,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:27:35,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:27:35,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:27:35,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f6c6077
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51dae791] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b8ec001
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d21852b
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd98a05
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:27:35,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:27:35,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e95b653
2024-06-03 03:27:35,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:27:35,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:27:35,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:27:35,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:27:35,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:27:35,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:27:35,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:27:35,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:27:35,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:27:35,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:27:35,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:27:35,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:27:35,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@303c55fa] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:27:35,376 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:27:35,376 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:27:35,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1a565afb
2024-06-03 03:27:35,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2fd64b11
2024-06-03 03:27:35,378 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7c2924d7] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@b5de58f] under bit_length; prior registration was null
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6587305a] under octet_length; prior registration was null
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@abbe000] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2c2a027c
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f81621c] under bitand; prior registration was null
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b9499fe] under bitor; prior registration was null
2024-06-03 03:27:35,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74d6736] under bitxor; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52a33c3f] under bitnot; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@668625f5] under median; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:27:35,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:27:35,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:27:35,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:27:35,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:27:35,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:27:35,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:27:35,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:27:35,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:27:35,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:27:35,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:27:35,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:27:35,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:27:35,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:27:35,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:27:35,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:27:35,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:27:35,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75babb67] under insert; prior registration was null
2024-06-03 03:27:35,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@40fa8766] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1e0fdb2f
2024-06-03 03:27:35,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:27:35,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@67774e29] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:27:35,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:27:35,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:27:35,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:27:35,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:27:35,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:27:35,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:27:35,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@34c70b5e] under listagg; prior registration was null
2024-06-03 03:27:35,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5eea5627] under array; prior registration was null
2024-06-03 03:27:35,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3330f3ad] under array_list; prior registration was null
2024-06-03 03:27:35,396 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@6824b913] under array_agg; prior registration was null
2024-06-03 03:27:35,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@3c66b7d8] under array_position; prior registration was null
2024-06-03 03:27:35,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@2ee48610] under array_positions; prior registration was null
2024-06-03 03:27:35,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7316523a] under array_positions_list; prior registration was null
2024-06-03 03:27:35,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33a55bd8] under array_length; prior registration was null
2024-06-03 03:27:35,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@267cde2e] under array_concat; prior registration was null
2024-06-03 03:27:35,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@e111c7c] under array_prepend; prior registration was null
2024-06-03 03:27:35,425 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@4d0e54e0] under array_append; prior registration was null
2024-06-03 03:27:35,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7cac93fe] under array_contains; prior registration was null
2024-06-03 03:27:35,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@479b5066] under array_contains_nullable; prior registration was null
2024-06-03 03:27:35,431 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6d33a66e] under array_overlaps; prior registration was null
2024-06-03 03:27:35,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2f14b0f6] under array_overlaps_nullable; prior registration was null
2024-06-03 03:27:35,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c479fdf] under array_get; prior registration was null
2024-06-03 03:27:35,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@670f2466] under array_set; prior registration was null
2024-06-03 03:27:35,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:27:35,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@6ebc9573] under array_remove_index; prior registration was null
2024-06-03 03:27:35,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e977098] under array_slice; prior registration was null
2024-06-03 03:27:35,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:27:35,435 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@630390b9] under array_trim; prior registration was null
2024-06-03 03:27:35,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@57ad1178] under array_fill; prior registration was null
2024-06-03 03:27:35,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@7c37f145] under array_fill_list; prior registration was null
2024-06-03 03:27:35,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5b5dce5c] under array_to_string; prior registration was null
2024-06-03 03:27:35,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:27:35,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:27:35,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:27:35,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:27:35,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@10c47c79] under mode; prior registration was null
2024-06-03 03:27:35,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3b2553d9] under percentile_cont; prior registration was null
2024-06-03 03:27:35,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@753fd7a1] under percentile_disc; prior registration was null
2024-06-03 03:27:35,444 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b95a6db] under rank; prior registration was null
2024-06-03 03:27:35,444 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3bf54172] under dense_rank; prior registration was null
2024-06-03 03:27:35,444 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2c9a6717] under percent_rank; prior registration was null
2024-06-03 03:27:35,444 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7b3cde6f] under cume_dist; prior registration was null
2024-06-03 03:27:35,445 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@1e692555] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:27:35,445 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3ba0ae41] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:27:35,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@46039a21] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:27:35,448 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3d20e575] under trunc; prior registration was null
2024-06-03 03:27:35,448 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:27:35,449 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3252747e] under date_trunc; prior registration was null
2024-06-03 03:27:35,460 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:27:35,461 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:27:35,461 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:27:35,461 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:27:35,461 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:27:35,461 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:27:35,461 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:27:35,462 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:27:35,463 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:27:35,464 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:27:35,464 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:27:35,464 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:27:35,464 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:27:35,464 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:27:35,464 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,464 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:27:35,465 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:27:35,466 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:27:35,467 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:27:35,467 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:27:35,467 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:27:35,467 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:27:35,467 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:27:35,467 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:27:35,467 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:27:35,468 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:27:35,468 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:27:35,468 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:27:35,469 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:27:35,469 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:27:35,470 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:27:35,470 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:27:35,470 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:27:35,470 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:27:35,470 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:27:35,470 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:27:35,470 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:27:35,471 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:27:35,472 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:27:35,473 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:27:35,473 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:27:35,473 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:27:35,473 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:27:35,473 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:27:35,474 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:27:35,474 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:27:35,474 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:27:35,474 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:27:35,474 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:27:35,474 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:27:35,474 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,475 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:27:35,476 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:27:35,477 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:27:35,478 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:27:35,478 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:27:35,478 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:27:35,478 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:27:35,478 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:27:35,479 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:27:35,479 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:27:35,479 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:27:35,479 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:27:35,480 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:27:35,481 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:27:35,481 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:27:35,481 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:27:35,493 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:27:35,681 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:27:35,684 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:27:35,888 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:27:35,888 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:27:36,306 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:27:36,348 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:27:36,349 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:27:36,383 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:27:36,384 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:27:36,384 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:27:36,429 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:27:36,431 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:27:36,431 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:27:36,452 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:27:36,454 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:27:36,455 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:27:36,479 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:27:36,530 DEBUG creation: Starting post-init callbacks
2024-06-03 03:27:36,530 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:27:36,531 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:27:36,531 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:27:36,531 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:27:36,531 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:27:36,657 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:27:36,660 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:27:36,685 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:27:36,691 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:27:36,708 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:27:36,708 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:27:36,708 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:27:36,708 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:27:36,708 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:27:36,708 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:27:36,708 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:27:36,709 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:27:36,709 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:27:36,709 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:27:36,709 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:27:36,709 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:27:36,709 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:27:36,709 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:27:36,709 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:27:36,709 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:27:36,710 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:27:36,710 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:27:36,710 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:27:36,710 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:27:36,710 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:27:36,710 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:27:36,710 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:27:36,710 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:27:36,710 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:27:36,711 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:27:36,711 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:27:36,711 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:27:36,711 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:27:36,711 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:27:36,711 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:27:36,711 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:27:36,711 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:27:36,711 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:27:36,712 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:27:36,712 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:27:36,712 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:27:36,712 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:27:36,712 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:27:36,712 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:27:36,712 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:27:36,754 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:27:36,754 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:27:36,759 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:27:36,759 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:27:36,760 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a1debfa] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@550c973e]
2024-06-03 03:27:36,770 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:27:36,770 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:27:36,776 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:27:36,782 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:27:37,160 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:27:37,162 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:27:37,275 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:27:37,289 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:27:37,315 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:27:37,333 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:27:37,334 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:27:37,334 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:27:37,340 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6b6fd0
2024-06-03 03:27:37,340 DEBUG SessionFactoryRegistry: Registering SessionFactory: e9106f20-0ab1-42e3-b9c4-0cac5fe10ff0 (<unnamed>)
2024-06-03 03:27:37,340 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:27:37,340 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:27:37,405 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:27:37,405 DEBUG TransactionImpl: begin
2024-06-03 03:27:37,405 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:27:37,407 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:27:37,407 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:27:37,412 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 0 objects
2024-06-03 03:27:37,412 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:27:37,414 DEBUG TransactionImpl: rolling back
2024-06-03 03:27:37,414 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:27:37,415 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:30:44,548 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:30:44,567 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:30:44,573 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:30:44,667 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:30:44,669 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:30:44,718 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:30:44,726 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:30:45,048 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:30:45,056 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:30:45,070 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:30:45,078 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:30:45,079 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:30:45,080 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:30:45,080 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:30:45,080 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:30:45,082 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:30:45,082 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:30:45,084 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:30:45,085 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:30:45,086 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:30:45,087 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:30:45,088 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:30:45,100 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:30:45,101 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:30:45,290 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:30:45,290 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:30:45,290 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:30:45,290 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:30:45,291 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:30:45,292 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:30:45,293 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:30:45,294 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:30:45,295 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:30:45,296 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:30:45,297 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:30:45,298 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:30:45,298 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:30:45,298 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:30:45,298 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:30:45,298 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:30:45,298 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:30:45,298 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:30:45,299 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:30:45,299 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:30:45,299 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:30:45,299 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:30:45,299 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:30:45,299 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:30:45,299 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:30:45,300 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:30:45,300 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:30:45,300 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:30:45,300 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:30:45,300 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:30:45,301 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:30:45,301 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:30:45,301 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:30:45,301 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:30:45,301 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:30:45,301 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:30:45,301 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:30:45,302 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:30:45,302 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:30:45,302 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:30:45,302 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:30:45,302 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:30:45,302 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:30:45,303 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:30:45,303 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:30:45,303 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:30:45,303 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:30:45,303 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:30:45,303 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:30:45,303 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:30:45,303 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:30:45,304 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:30:45,312 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:30:45,312 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:30:45,314 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@3773862a
2024-06-03 03:30:45,314 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2472c7d8
2024-06-03 03:30:45,314 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:30:45,315 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:30:45,315 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:30:45,315 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:30:45,315 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:30:45,315 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:30:45,315 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:30:45,356 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:30:45,363 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:30:45,363 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:30:45,363 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:30:45,363 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:30:45,368 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:30:45,368 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:30:45,690 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:30:45,690 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:30:45,691 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:30:45,774 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:30:45,784 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:30:45,801 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:30:45,814 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5a67e962) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7)
2024-06-03 03:30:45,815 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc9a775) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27b000f7)
2024-06-03 03:30:45,818 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:30:45,819 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:30:45,831 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:30:45,831 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:30:45,831 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@515f4131`
2024-06-03 03:30:45,837 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:30:45,837 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:30:45,837 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:30:45,842 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:30:45,842 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:30:45,842 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:30:45,842 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:30:45,842 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:30:45,842 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:30:45,843 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:30:45,844 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:30:45,844 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:30:45,845 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f387978]
2024-06-03 03:30:45,905 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:30:45,949 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:30:45,961 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:30:45,972 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:30:45,987 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:30:46,017 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,018 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:30:46,018 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:30:46,024 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:30:46,031 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:30:46,037 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:30:46,043 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:30:46,046 DEBUG PropertyBinder: Building property id
2024-06-03 03:30:46,052 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:30:46,054 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,054 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:30:46,054 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:30:46,054 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:30:46,054 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:30:46,055 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:30:46,056 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,056 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:30:46,056 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:30:46,056 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:30:46,056 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:30:46,056 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:30:46,057 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,057 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:30:46,057 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:30:46,057 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:30:46,057 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:30:46,057 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:30:46,058 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,058 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:30:46,058 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:30:46,058 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:30:46,058 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:30:46,059 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:30:46,059 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,059 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:30:46,059 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:30:46,060 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:30:46,060 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:30:46,060 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:30:46,061 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:30:46,069 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:30:46,070 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:30:46,070 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:30:46,070 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:30:46,073 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,073 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:30:46,073 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:30:46,102 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:30:46,102 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:30:46,102 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:30:46,102 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:30:46,102 DEBUG PropertyBinder: Building property id
2024-06-03 03:30:46,102 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:30:46,103 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,103 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:30:46,103 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:30:46,103 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:30:46,103 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:30:46,103 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:30:46,103 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,104 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:30:46,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:30:46,104 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:30:46,104 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:30:46,104 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:30:46,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,104 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:30:46,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:30:46,104 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:30:46,105 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:30:46,105 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:30:46,105 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,105 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:30:46,105 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:30:46,105 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:30:46,105 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:30:46,105 DEBUG PropertyBinder: Building property questId
2024-06-03 03:30:46,106 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,106 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:30:46,106 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:30:46,106 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:30:46,106 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:30:46,106 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:30:46,107 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:30:46,108 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:30:46,117 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:30:46,118 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:30:46,119 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:30:46,119 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:30:46,126 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,126 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:30:46,126 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:30:46,126 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:30:46,126 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:30:46,126 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:30:46,126 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:30:46,127 DEBUG PropertyBinder: Building property id
2024-06-03 03:30:46,127 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:30:46,127 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,127 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:30:46,127 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:30:46,127 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:30:46,127 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:30:46,127 DEBUG PropertyBinder: Building property description
2024-06-03 03:30:46,128 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:30:46,128 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:30:46,128 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:30:46,128 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:30:46,128 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:30:46,128 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:30:46,129 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,129 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:30:46,129 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:30:46,129 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:30:46,129 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:30:46,129 DEBUG PropertyBinder: Building property name
2024-06-03 03:30:46,129 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:30:46,130 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:30:46,130 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:30:46,130 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:30:46,130 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:30:46,130 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:30:46,131 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:30:46,132 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:30:46,133 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:30:46,133 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:30:46,133 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:30:46,136 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,136 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:30:46,136 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:30:46,136 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:30:46,136 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:30:46,137 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:30:46,137 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:30:46,137 DEBUG PropertyBinder: Building property id
2024-06-03 03:30:46,137 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:30:46,138 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,138 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:30:46,138 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:30:46,138 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:30:46,139 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:30:46,139 DEBUG PropertyBinder: Building property questId
2024-06-03 03:30:46,139 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,139 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:30:46,139 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:30:46,140 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:30:46,140 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:30:46,140 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:30:46,141 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:30:46,141 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:30:46,142 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:30:46,142 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:30:46,142 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:30:46,144 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,145 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:30:46,145 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:30:46,145 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:30:46,145 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:30:46,145 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:30:46,145 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:30:46,145 DEBUG PropertyBinder: Building property id
2024-06-03 03:30:46,145 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:30:46,146 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,146 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:30:46,146 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:30:46,146 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:30:46,146 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:30:46,146 DEBUG PropertyBinder: Building property login
2024-06-03 03:30:46,146 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,147 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:30:46,147 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:30:46,147 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:30:46,147 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:30:46,148 DEBUG PropertyBinder: Building property name
2024-06-03 03:30:46,149 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,149 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:30:46,149 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:30:46,149 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:30:46,149 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:30:46,150 DEBUG PropertyBinder: Building property password
2024-06-03 03:30:46,150 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:30:46,150 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:30:46,150 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:30:46,151 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:30:46,151 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:30:46,151 DEBUG PropertyBinder: Building property role
2024-06-03 03:30:46,151 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:30:46,154 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:30:46,158 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:30:46,158 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:30:46,159 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:30:46,161 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:30:46,161 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:30:46,162 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:30:46,163 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:30:46,163 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:30:46,163 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:30:46,163 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:30:46,163 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:30:46,163 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:30:46,163 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:30:46,168 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:30:46,168 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:30:46,168 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:30:46,168 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:30:46,168 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:30:46,238 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:30:46,479 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:30:46,531 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:30:46,532 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7426a448, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:30:46,542 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:30:46,552 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:30:46,611 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:30:46,611 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:30:46,612 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:30:46,613 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:30:46,615 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@24eeac69] under count; prior registration was null
2024-06-03 03:30:46,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1084f78c] under every; prior registration was null
2024-06-03 03:30:46,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under any; prior registration was null
2024-06-03 03:30:46,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:30:46,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:30:46,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:30:46,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:30:46,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:30:46,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:30:46,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:30:46,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:30:46,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:30:46,620 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021] under sinh; prior registration was null
2024-06-03 03:30:46,620 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under cosh; prior registration was null
2024-06-03 03:30:46,620 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under tanh; prior registration was null
2024-06-03 03:30:46,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under pi; prior registration was null
2024-06-03 03:30:46,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under log; prior registration was null
2024-06-03 03:30:46,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:30:46,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:30:46,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:30:46,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:30:46,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:30:46,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:30:46,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:30:46,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:30:46,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:30:46,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:30:46,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:30:46,622 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:30:46,623 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0] under position; prior registration was null
2024-06-03 03:30:46,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac] under overlay; prior registration was null
2024-06-03 03:30:46,626 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3451f01d] under trim; prior registration was null
2024-06-03 03:30:46,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@42cc183e] under cast; prior registration was null
2024-06-03 03:30:46,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e4e8fdf] under collate; prior registration was null
2024-06-03 03:30:46,628 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6aa7b67f] under extract; prior registration was null
2024-06-03 03:30:46,628 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:30:46,628 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:30:46,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@61514735] under ifnull; prior registration was null
2024-06-03 03:30:46,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:30:46,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:30:46,630 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@28369db0] under pad; prior registration was null
2024-06-03 03:30:46,630 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590f0c50] under str; prior registration was null
2024-06-03 03:30:46,631 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7cf78c85] under format; prior registration was null
2024-06-03 03:30:46,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2b7e8044] under timestampadd; prior registration was null
2024-06-03 03:30:46,633 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5e9f73b] under timestampdiff; prior registration was null
2024-06-03 03:30:46,633 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:30:46,633 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43d3aba5] under current_date; prior registration was null
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_time; prior registration was null
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_timestamp; prior registration was null
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under local_date; prior registration was null
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_time; prior registration was null
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_datetime; prior registration was null
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under offset_datetime; prior registration was null
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under instant; prior registration was null
2024-06-03 03:30:46,634 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:30:46,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7eb200ce] under sql; prior registration was null
2024-06-03 03:30:46,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:30:46,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:30:46,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:30:46,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:30:46,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:30:46,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:30:46,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:30:46,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:30:46,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:30:46,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:30:46,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:30:46,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:30:46,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:30:46,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:30:46,638 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@abbe000] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:30:46,638 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:30:46,638 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:30:46,638 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6f1b8544
2024-06-03 03:30:46,638 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:30:46,639 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52a33c3f] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:30:46,639 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:30:46,639 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under bit_length; prior registration was null
2024-06-03 03:30:46,639 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under octet_length; prior registration was null
2024-06-03 03:30:46,639 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75babb67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under bitand; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitor; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitxor; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitnot; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:30:46,640 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under median; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:30:46,641 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:30:46,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:30:46,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:30:46,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:30:46,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:30:46,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:30:46,642 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:30:46,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:30:46,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:30:46,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:30:46,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d7399f9] under insert; prior registration was null
2024-06-03 03:30:46,643 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4a3bd45b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac
2024-06-03 03:30:46,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:30:46,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:30:46,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:30:46,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:30:46,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:30:46,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:30:46,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:30:46,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:30:46,645 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3667faa8] under listagg; prior registration was null
2024-06-03 03:30:46,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@705a8dbc] under array; prior registration was null
2024-06-03 03:30:46,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array_list; prior registration was null
2024-06-03 03:30:46,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5dbb50f3] under array_agg; prior registration was null
2024-06-03 03:30:46,651 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@518ddd3b] under array_position; prior registration was null
2024-06-03 03:30:46,656 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions; prior registration was null
2024-06-03 03:30:46,659 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@a83495d] under array_positions_list; prior registration was null
2024-06-03 03:30:46,659 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e83992] under array_length; prior registration was null
2024-06-03 03:30:46,660 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75b6dd5b] under array_concat; prior registration was null
2024-06-03 03:30:46,661 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@72eb6200] under array_prepend; prior registration was null
2024-06-03 03:30:46,661 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_append; prior registration was null
2024-06-03 03:30:46,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@72bdd7c7] under array_contains; prior registration was null
2024-06-03 03:30:46,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains_nullable; prior registration was null
2024-06-03 03:30:46,664 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@19b206ee] under array_overlaps; prior registration was null
2024-06-03 03:30:46,664 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps_nullable; prior registration was null
2024-06-03 03:30:46,665 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bfec2f9] under array_get; prior registration was null
2024-06-03 03:30:46,666 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6690b9fa] under array_set; prior registration was null
2024-06-03 03:30:46,666 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:30:46,666 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55fee662] under array_remove_index; prior registration was null
2024-06-03 03:30:46,666 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54089484] under array_slice; prior registration was null
2024-06-03 03:30:46,666 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:30:46,666 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_trim; prior registration was null
2024-06-03 03:30:46,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@adcfad9] under array_fill; prior registration was null
2024-06-03 03:30:46,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill_list; prior registration was null
2024-06-03 03:30:46,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3b2553d9] under array_to_string; prior registration was null
2024-06-03 03:30:46,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:30:46,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:30:46,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:30:46,668 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:30:46,669 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3bf54172] under mode; prior registration was null
2024-06-03 03:30:46,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under percentile_cont; prior registration was null
2024-06-03 03:30:46,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_disc; prior registration was null
2024-06-03 03:30:46,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e692555] under rank; prior registration was null
2024-06-03 03:30:46,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under dense_rank; prior registration was null
2024-06-03 03:30:46,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under percent_rank; prior registration was null
2024-06-03 03:30:46,670 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under cume_dist; prior registration was null
2024-06-03 03:30:46,671 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@35c4e864] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:30:46,671 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:30:46,672 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@6a9344f5] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:30:46,674 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2bfaba70] under trunc; prior registration was null
2024-06-03 03:30:46,674 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:30:46,674 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71adfedd] under date_trunc; prior registration was null
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:30:46,680 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:30:46,681 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:30:46,682 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:30:46,683 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:30:46,684 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:30:46,685 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:30:46,686 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:30:46,687 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:30:46,688 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:30:46,689 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:30:46,690 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:30:46,691 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:30:46,691 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:30:46,691 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:30:46,691 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:30:46,691 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:30:46,691 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:30:46,703 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:30:46,816 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:30:46,817 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:30:46,918 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:30:46,918 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:30:47,220 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:30:47,252 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:30:47,252 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:30:47,287 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:30:47,289 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:30:47,289 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:30:47,332 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:30:47,333 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:30:47,334 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:30:47,354 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:30:47,355 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:30:47,355 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:30:47,369 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:30:47,404 DEBUG creation: Starting post-init callbacks
2024-06-03 03:30:47,404 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:30:47,404 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:30:47,405 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:30:47,405 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:30:47,405 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:30:47,515 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:30:47,519 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:30:47,536 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:30:47,540 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:30:47,551 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:30:47,552 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:30:47,552 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:30:47,552 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:30:47,552 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:30:47,552 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:30:47,552 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:30:47,552 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:30:47,552 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:30:47,553 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:30:47,553 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:30:47,553 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:30:47,553 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:30:47,553 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:30:47,553 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:30:47,553 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:30:47,553 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:30:47,553 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:30:47,554 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:30:47,554 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:30:47,554 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:30:47,554 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:30:47,554 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:30:47,554 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:30:47,554 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:30:47,554 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:30:47,554 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:30:47,554 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:30:47,554 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:30:47,555 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:30:47,555 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:30:47,555 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:30:47,555 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:30:47,555 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:30:47,555 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:30:47,555 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:30:47,555 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:30:47,555 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:30:47,555 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:30:47,555 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:30:47,555 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:30:47,590 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:30:47,591 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:30:47,594 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:30:47,595 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:30:47,596 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:30:47,606 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:30:47,606 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:30:47,611 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:30:47,617 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:30:47,936 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:30:47,937 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:30:48,045 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:30:48,059 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:30:48,079 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:30:48,094 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:30:48,095 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:30:48,095 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:30:48,099 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6adcf059
2024-06-03 03:30:48,100 DEBUG SessionFactoryRegistry: Registering SessionFactory: 196d76cd-1048-44b2-958b-c83aad5e17fb (<unnamed>)
2024-06-03 03:30:48,100 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:30:48,100 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:30:48,156 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:30:48,156 DEBUG TransactionImpl: begin
2024-06-03 03:30:48,181 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:30:48,200 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@316863915 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:30:48,210 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:30:48,233 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:30:48,236 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 748807322
2024-06-03 03:30:48,237 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:30:48,237 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:30:48,237 DEBUG results: Extracted JDBC value [3] - [321]
2024-06-03 03:30:48,237 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:30:48,245 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:30:48,245 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391dfe7c
2024-06-03 03:30:48,248 DEBUG TransactionImpl: committing
2024-06-03 03:30:48,250 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:30:48,253 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:30:48,266 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:30:48,266 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:30:48,267 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:30:48,269 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=45, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:30:48,285 DEBUG SQL: 
    update
        users 
    set
        login=?,
        name=?,
        password=?,
        role=? 
    where
        id=?
2024-06-03 03:30:48,337 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:30:48,338 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:30:48,343 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-06-03 03:30:48,343 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@651cedfb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:30:48,344 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-06-03 03:30:48,344 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:30:48,346 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-06-03 03:31:13,011 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:31:13,029 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:31:13,035 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:31:13,122 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:31:13,124 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:31:13,177 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:31:13,186 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:31:13,505 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:31:13,513 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:31:13,525 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:31:13,530 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:31:13,531 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:31:13,532 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:31:13,532 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:31:13,532 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:31:13,534 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:31:13,534 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:31:13,537 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:31:13,538 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:31:13,539 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:31:13,539 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:31:13,541 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:31:13,558 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:31:13,559 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:31:13,764 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:31:13,764 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:31:13,764 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:31:13,764 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:31:13,765 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:31:13,766 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:31:13,767 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:31:13,768 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:31:13,769 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:31:13,770 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:31:13,771 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:31:13,772 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:31:13,773 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:31:13,774 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:31:13,775 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:31:13,784 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:31:13,784 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:31:13,786 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@3773862a
2024-06-03 03:31:13,786 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2472c7d8
2024-06-03 03:31:13,786 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:31:13,786 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:31:13,786 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:31:13,786 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:31:13,786 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:31:13,787 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:31:13,787 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:31:13,821 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:31:13,825 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:31:13,825 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:31:13,826 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:31:13,826 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:31:13,829 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:31:13,829 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:31:14,101 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:31:14,101 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:31:14,102 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:31:14,182 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:31:14,192 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:31:14,209 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:31:14,223 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5a67e962) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7)
2024-06-03 03:31:14,223 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc9a775) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27b000f7)
2024-06-03 03:31:14,226 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:31:14,226 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:31:14,238 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:31:14,239 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:31:14,239 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@515f4131`
2024-06-03 03:31:14,245 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:31:14,245 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:31:14,245 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:31:14,251 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:31:14,251 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:31:14,251 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:31:14,252 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:31:14,252 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:31:14,252 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:31:14,253 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:31:14,253 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:31:14,253 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:31:14,255 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f387978]
2024-06-03 03:31:14,313 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:31:14,352 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:31:14,364 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:31:14,374 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:31:14,387 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:14,418 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,420 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:31:14,420 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:31:14,425 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:14,432 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:31:14,439 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:14,444 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:31:14,446 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:14,452 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:14,454 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,454 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:31:14,454 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:31:14,454 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:31:14,454 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:31:14,454 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:31:14,455 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,455 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:31:14,455 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:31:14,456 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:31:14,456 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:31:14,456 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:31:14,456 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,456 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:31:14,456 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:31:14,457 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:31:14,457 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:31:14,457 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:31:14,457 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,457 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:31:14,457 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:31:14,457 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:31:14,457 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:31:14,458 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:31:14,458 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,458 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:31:14,458 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:31:14,458 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:31:14,458 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:31:14,458 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:31:14,460 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:14,467 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:31:14,467 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:31:14,468 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:31:14,468 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:14,471 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,471 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:31:14,471 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:31:14,489 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:14,489 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:31:14,489 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:14,490 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:31:14,490 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:14,490 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:14,490 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,490 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:31:14,490 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:31:14,490 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:31:14,491 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:31:14,491 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:31:14,491 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,491 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:31:14,491 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:31:14,491 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:31:14,491 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:31:14,491 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:31:14,492 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,492 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:31:14,492 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:31:14,492 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:31:14,492 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:31:14,492 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:31:14,493 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,493 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:31:14,493 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:31:14,493 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:31:14,493 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:31:14,493 DEBUG PropertyBinder: Building property questId
2024-06-03 03:31:14,494 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,494 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:31:14,494 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:31:14,494 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:31:14,494 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:31:14,494 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:31:14,495 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:14,495 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:31:14,502 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:31:14,503 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:31:14,504 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:31:14,504 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:14,511 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,511 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:31:14,512 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:31:14,512 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:14,512 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:31:14,512 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:14,512 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:31:14,512 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:14,512 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:14,513 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,513 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:31:14,513 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:31:14,513 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:31:14,513 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:31:14,513 DEBUG PropertyBinder: Building property description
2024-06-03 03:31:14,514 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:31:14,514 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:31:14,515 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:31:14,515 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:31:14,515 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:31:14,515 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:31:14,515 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,515 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:31:14,515 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:31:14,516 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:31:14,516 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:31:14,516 DEBUG PropertyBinder: Building property name
2024-06-03 03:31:14,516 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:31:14,516 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:31:14,516 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:31:14,517 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:31:14,517 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:31:14,517 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:31:14,517 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:14,518 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:31:14,518 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:31:14,519 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:31:14,519 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:14,521 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,521 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:31:14,521 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:31:14,521 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:14,521 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:31:14,521 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:14,521 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:31:14,522 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:14,522 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:14,522 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,522 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:31:14,522 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:31:14,522 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:31:14,522 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:31:14,522 DEBUG PropertyBinder: Building property questId
2024-06-03 03:31:14,523 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,523 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:31:14,523 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:31:14,523 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:31:14,523 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:31:14,523 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:31:14,524 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:14,524 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:31:14,525 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:31:14,525 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:31:14,525 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:14,527 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,527 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:31:14,527 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:31:14,528 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:14,528 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:31:14,528 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:14,528 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:31:14,528 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:14,528 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:14,528 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,528 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:31:14,528 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:31:14,529 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:31:14,529 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:31:14,529 DEBUG PropertyBinder: Building property login
2024-06-03 03:31:14,529 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,529 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:31:14,529 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:31:14,529 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:31:14,529 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:31:14,529 DEBUG PropertyBinder: Building property name
2024-06-03 03:31:14,530 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,530 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:31:14,530 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:31:14,530 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:31:14,530 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:31:14,530 DEBUG PropertyBinder: Building property password
2024-06-03 03:31:14,530 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:14,530 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:31:14,530 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:31:14,531 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:31:14,531 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:31:14,531 DEBUG PropertyBinder: Building property role
2024-06-03 03:31:14,531 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:14,533 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:14,535 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:31:14,535 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:31:14,535 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:31:14,538 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:31:14,538 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:31:14,538 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:14,538 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:31:14,538 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:31:14,538 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:31:14,538 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:31:14,539 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:14,540 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:31:14,540 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:31:14,540 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:31:14,540 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:31:14,544 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:31:14,544 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:31:14,544 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:31:14,544 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:31:14,544 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:31:14,613 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:31:14,861 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:31:14,912 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:31:14,912 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7426a448, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:31:14,919 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:31:14,927 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:31:14,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:31:14,987 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:31:14,987 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:31:14,988 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:31:14,990 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@24eeac69] under count; prior registration was null
2024-06-03 03:31:14,991 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1084f78c] under every; prior registration was null
2024-06-03 03:31:14,991 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under any; prior registration was null
2024-06-03 03:31:14,991 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:31:14,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:31:14,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:31:14,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:31:14,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:31:14,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:31:14,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:31:14,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:31:14,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:31:14,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:31:14,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:31:14,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:31:14,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:31:14,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:31:14,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:31:14,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:31:14,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:31:14,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021] under sinh; prior registration was null
2024-06-03 03:31:14,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under cosh; prior registration was null
2024-06-03 03:31:14,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under tanh; prior registration was null
2024-06-03 03:31:14,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under pi; prior registration was null
2024-06-03 03:31:14,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under log; prior registration was null
2024-06-03 03:31:14,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:31:14,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:31:14,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:31:14,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:31:14,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:31:14,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:31:14,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:31:14,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:31:14,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:31:14,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:31:14,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:31:14,998 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:31:14,999 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0] under position; prior registration was null
2024-06-03 03:31:15,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac] under overlay; prior registration was null
2024-06-03 03:31:15,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3451f01d] under trim; prior registration was null
2024-06-03 03:31:15,003 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@42cc183e] under cast; prior registration was null
2024-06-03 03:31:15,004 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e4e8fdf] under collate; prior registration was null
2024-06-03 03:31:15,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6aa7b67f] under extract; prior registration was null
2024-06-03 03:31:15,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:31:15,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:31:15,006 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@61514735] under ifnull; prior registration was null
2024-06-03 03:31:15,006 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:31:15,006 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:31:15,006 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@28369db0] under pad; prior registration was null
2024-06-03 03:31:15,007 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590f0c50] under str; prior registration was null
2024-06-03 03:31:15,008 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7cf78c85] under format; prior registration was null
2024-06-03 03:31:15,009 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2b7e8044] under timestampadd; prior registration was null
2024-06-03 03:31:15,010 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5e9f73b] under timestampdiff; prior registration was null
2024-06-03 03:31:15,010 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:31:15,010 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:31:15,011 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43d3aba5] under current_date; prior registration was null
2024-06-03 03:31:15,011 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_time; prior registration was null
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_timestamp; prior registration was null
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under local_date; prior registration was null
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_time; prior registration was null
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_datetime; prior registration was null
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under offset_datetime; prior registration was null
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under instant; prior registration was null
2024-06-03 03:31:15,012 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:31:15,013 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7eb200ce] under sql; prior registration was null
2024-06-03 03:31:15,013 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:31:15,013 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:31:15,013 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:31:15,013 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:31:15,013 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:31:15,013 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:31:15,014 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:31:15,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:31:15,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:31:15,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:31:15,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:31:15,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:31:15,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:31:15,015 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:31:15,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@abbe000] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:31:15,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:31:15,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:31:15,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6f1b8544
2024-06-03 03:31:15,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:31:15,018 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52a33c3f] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:31:15,018 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under bit_length; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under octet_length; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75babb67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under bitand; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitor; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitxor; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitnot; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:31:15,019 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under median; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:31:15,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:31:15,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:31:15,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:31:15,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d7399f9] under insert; prior registration was null
2024-06-03 03:31:15,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4a3bd45b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac
2024-06-03 03:31:15,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:31:15,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:31:15,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:31:15,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:31:15,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:31:15,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:31:15,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:31:15,024 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:31:15,024 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3667faa8] under listagg; prior registration was null
2024-06-03 03:31:15,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@705a8dbc] under array; prior registration was null
2024-06-03 03:31:15,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array_list; prior registration was null
2024-06-03 03:31:15,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5dbb50f3] under array_agg; prior registration was null
2024-06-03 03:31:15,029 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@518ddd3b] under array_position; prior registration was null
2024-06-03 03:31:15,034 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions; prior registration was null
2024-06-03 03:31:15,036 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@a83495d] under array_positions_list; prior registration was null
2024-06-03 03:31:15,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e83992] under array_length; prior registration was null
2024-06-03 03:31:15,038 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75b6dd5b] under array_concat; prior registration was null
2024-06-03 03:31:15,039 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@72eb6200] under array_prepend; prior registration was null
2024-06-03 03:31:15,039 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_append; prior registration was null
2024-06-03 03:31:15,041 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@72bdd7c7] under array_contains; prior registration was null
2024-06-03 03:31:15,041 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains_nullable; prior registration was null
2024-06-03 03:31:15,042 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@19b206ee] under array_overlaps; prior registration was null
2024-06-03 03:31:15,042 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps_nullable; prior registration was null
2024-06-03 03:31:15,042 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bfec2f9] under array_get; prior registration was null
2024-06-03 03:31:15,043 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6690b9fa] under array_set; prior registration was null
2024-06-03 03:31:15,043 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:31:15,043 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55fee662] under array_remove_index; prior registration was null
2024-06-03 03:31:15,044 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54089484] under array_slice; prior registration was null
2024-06-03 03:31:15,044 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:31:15,044 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_trim; prior registration was null
2024-06-03 03:31:15,045 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@adcfad9] under array_fill; prior registration was null
2024-06-03 03:31:15,045 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill_list; prior registration was null
2024-06-03 03:31:15,045 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3b2553d9] under array_to_string; prior registration was null
2024-06-03 03:31:15,045 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:31:15,046 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:31:15,046 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:31:15,046 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:31:15,047 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3bf54172] under mode; prior registration was null
2024-06-03 03:31:15,047 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under percentile_cont; prior registration was null
2024-06-03 03:31:15,047 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_disc; prior registration was null
2024-06-03 03:31:15,047 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e692555] under rank; prior registration was null
2024-06-03 03:31:15,047 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under dense_rank; prior registration was null
2024-06-03 03:31:15,048 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under percent_rank; prior registration was null
2024-06-03 03:31:15,048 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under cume_dist; prior registration was null
2024-06-03 03:31:15,048 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@35c4e864] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:31:15,048 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:31:15,049 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@6a9344f5] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:31:15,051 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2bfaba70] under trunc; prior registration was null
2024-06-03 03:31:15,051 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:31:15,051 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71adfedd] under date_trunc; prior registration was null
2024-06-03 03:31:15,056 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:31:15,056 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:31:15,056 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:31:15,056 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:31:15,056 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:31:15,056 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:31:15,056 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:31:15,056 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:31:15,057 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:31:15,058 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:31:15,059 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:31:15,060 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:31:15,061 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:31:15,061 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:31:15,061 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:31:15,061 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:31:15,061 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:31:15,061 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:31:15,061 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:31:15,062 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:31:15,063 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:31:15,064 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:31:15,065 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:31:15,066 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:31:15,067 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:31:15,073 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:31:15,168 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:31:15,169 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:31:15,256 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:31:15,256 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:31:15,528 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:31:15,557 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:31:15,558 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:31:15,582 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:31:15,584 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:31:15,584 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:31:15,610 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:31:15,611 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:31:15,611 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:31:15,632 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:31:15,633 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:31:15,633 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:31:15,646 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:31:15,671 DEBUG creation: Starting post-init callbacks
2024-06-03 03:31:15,671 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:31:15,671 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:31:15,671 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:31:15,671 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:31:15,671 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:31:15,783 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:31:15,787 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:31:15,807 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:31:15,812 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:31:15,825 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:31:15,825 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:31:15,825 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:31:15,825 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:31:15,825 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:31:15,825 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:31:15,825 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:31:15,826 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:31:15,826 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:31:15,826 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:31:15,826 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:31:15,826 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:31:15,826 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:31:15,826 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:31:15,827 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:31:15,827 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:31:15,827 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:31:15,827 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:31:15,827 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:31:15,827 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:31:15,827 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:31:15,827 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:31:15,827 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:31:15,827 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:31:15,828 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:31:15,828 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:31:15,828 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:31:15,828 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:31:15,828 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:31:15,828 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:31:15,828 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:31:15,828 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:31:15,829 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:31:15,829 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:31:15,829 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:31:15,829 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:31:15,829 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:31:15,829 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:31:15,829 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:31:15,829 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:31:15,829 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:31:15,870 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:31:15,870 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:31:15,875 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:31:15,876 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:31:15,877 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:31:15,888 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:31:15,888 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:31:15,894 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:31:15,900 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:31:16,200 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:31:16,201 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:31:16,294 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:31:16,305 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:31:16,322 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:31:16,342 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:31:16,343 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:31:16,343 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:31:16,347 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6adcf059
2024-06-03 03:31:16,348 DEBUG SessionFactoryRegistry: Registering SessionFactory: 4ffe21df-c08b-47a5-bdea-0cd6f05f818f (<unnamed>)
2024-06-03 03:31:16,348 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:31:16,348 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:31:16,407 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:31:16,407 DEBUG TransactionImpl: begin
2024-06-03 03:31:16,439 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:31:16,476 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@316863915 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:31:16,489 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:31:16,509 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:31:16,512 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 748807322
2024-06-03 03:31:16,513 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:31:16,513 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:31:16,514 DEBUG results: Extracted JDBC value [3] - [45]
2024-06-03 03:31:16,514 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:31:16,522 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:31:16,522 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391dfe7c
2024-06-03 03:31:16,525 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:31:16,526 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:31:16,529 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:31:16,541 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:31:16,542 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:31:16,544 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:31:16,545 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=45, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:31:16,546 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:31:16,548 DEBUG TransactionImpl: committing
2024-06-03 03:31:16,550 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:31:16,550 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:31:16,550 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:31:16,550 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:31:16,551 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:31:16,551 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=45, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:31:16,558 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:31:16,560 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:31:16,570 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-06-03 03:31:16,571 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5600a278] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:31:16,572 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-06-03 03:31:16,573 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:31:16,576 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-06-03 03:31:30,168 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:31:30,188 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:31:30,195 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:31:30,298 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:31:30,301 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:31:30,375 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:31:30,419 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:31:30,850 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:31:30,863 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:31:30,883 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:31:30,893 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:31:30,894 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:31:30,895 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:31:30,896 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:31:30,897 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:31:30,900 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:31:30,901 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:31:30,904 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:31:30,906 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:31:30,907 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:31:30,907 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:31:30,910 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:31:30,931 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:31:30,933 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:31:31,153 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:31:31,153 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:31:31,153 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:31:31,153 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:31:31,153 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:31:31,153 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:31:31,153 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:31:31,153 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:31:31,154 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:31:31,155 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:31:31,156 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:31:31,157 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:31:31,158 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:31:31,159 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:31:31,160 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:31:31,161 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:31:31,162 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:31:31,163 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:31:31,164 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:31:31,164 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:31:31,164 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:31:31,164 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:31:31,164 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:31:31,172 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:31:31,173 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:31:31,174 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@3773862a
2024-06-03 03:31:31,174 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2472c7d8
2024-06-03 03:31:31,174 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:31:31,174 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:31:31,174 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:31:31,175 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:31:31,175 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:31:31,175 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:31:31,175 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:31:31,208 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:31:31,213 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:31:31,213 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:31:31,213 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:31:31,213 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:31:31,216 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:31:31,216 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:31:31,486 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:31:31,486 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:31:31,487 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:31:31,581 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:31:31,595 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:31:31,617 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:31:31,634 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5a67e962) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7)
2024-06-03 03:31:31,635 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc9a775) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27b000f7)
2024-06-03 03:31:31,638 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:31:31,639 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:31:31,652 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:31:31,652 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:31:31,652 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@515f4131`
2024-06-03 03:31:31,659 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:31:31,659 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:31:31,659 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:31:31,664 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:31:31,665 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:31:31,665 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:31:31,665 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:31:31,665 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:31:31,665 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:31:31,669 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:31:31,669 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:31:31,669 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:31:31,673 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f387978]
2024-06-03 03:31:31,743 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:31:31,795 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:31:31,807 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:31:31,818 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:31:31,831 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:31,860 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,862 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:31:31,862 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:31:31,867 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:31,874 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:31:31,880 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:31,886 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:31:31,888 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:31,894 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:31,896 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,896 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:31:31,896 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:31:31,897 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:31:31,897 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:31:31,897 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:31:31,898 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,898 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:31:31,898 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:31:31,898 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:31:31,898 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:31:31,899 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:31:31,899 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,899 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:31:31,899 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:31:31,899 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:31:31,899 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:31:31,900 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:31:31,900 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,900 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:31:31,900 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:31:31,900 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:31:31,900 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:31:31,900 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:31:31,900 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,901 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:31:31,901 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:31:31,901 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:31:31,901 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:31:31,901 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:31:31,902 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:31,910 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:31:31,910 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:31:31,910 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:31:31,911 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:31,913 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,913 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:31:31,914 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:31:31,932 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:31,932 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:31:31,932 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:31,932 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:31:31,932 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:31,933 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:31,933 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,933 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:31:31,933 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:31:31,933 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:31:31,933 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:31:31,933 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:31:31,934 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,934 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:31:31,934 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:31:31,934 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:31:31,934 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:31:31,934 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:31:31,934 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,935 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:31:31,935 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:31:31,935 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:31:31,935 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:31:31,935 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:31:31,935 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,935 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:31:31,935 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:31:31,936 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:31:31,936 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:31:31,936 DEBUG PropertyBinder: Building property questId
2024-06-03 03:31:31,936 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,936 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:31:31,936 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:31:31,936 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:31:31,936 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:31:31,936 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:31:31,937 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:31,938 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:31:31,946 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:31:31,946 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:31:31,947 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:31:31,947 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:31,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,952 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:31:31,952 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:31:31,952 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:31,952 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:31:31,952 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:31,952 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:31:31,952 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:31,953 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:31,953 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,953 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:31:31,953 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:31:31,953 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:31:31,953 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:31:31,953 DEBUG PropertyBinder: Building property description
2024-06-03 03:31:31,954 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:31:31,954 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:31:31,954 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:31:31,954 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:31:31,954 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:31:31,955 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:31:31,955 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,955 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:31:31,955 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:31:31,955 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:31:31,955 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:31:31,955 DEBUG PropertyBinder: Building property name
2024-06-03 03:31:31,956 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:31:31,956 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:31:31,956 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:31:31,956 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:31:31,956 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:31:31,956 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:31:31,957 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:31,957 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:31:31,958 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:31:31,958 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:31:31,958 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:31,960 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,960 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:31:31,960 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:31:31,960 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:31,960 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:31:31,960 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:31,960 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:31:31,961 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:31,961 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:31,961 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,961 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:31:31,961 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:31:31,961 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:31:31,961 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:31:31,961 DEBUG PropertyBinder: Building property questId
2024-06-03 03:31:31,962 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,962 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:31:31,962 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:31:31,962 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:31:31,962 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:31:31,962 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:31:31,963 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:31,963 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:31:31,964 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:31:31,964 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:31:31,964 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:31:31,966 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,966 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:31:31,966 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:31:31,966 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:31:31,966 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:31:31,966 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:31:31,966 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:31:31,967 DEBUG PropertyBinder: Building property id
2024-06-03 03:31:31,967 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:31:31,967 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,967 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:31:31,967 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:31:31,967 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:31:31,967 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:31:31,967 DEBUG PropertyBinder: Building property login
2024-06-03 03:31:31,968 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,968 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:31:31,968 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:31:31,968 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:31:31,968 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:31:31,968 DEBUG PropertyBinder: Building property name
2024-06-03 03:31:31,968 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,968 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:31:31,968 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:31:31,969 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:31:31,969 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:31:31,969 DEBUG PropertyBinder: Building property password
2024-06-03 03:31:31,969 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:31:31,969 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:31:31,969 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:31:31,969 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:31:31,969 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:31:31,969 DEBUG PropertyBinder: Building property role
2024-06-03 03:31:31,970 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:31:31,971 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:31,973 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:31:31,973 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:31:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:31:31,976 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:31:31,976 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:31:31,976 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:31,976 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:31:31,976 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:31:31,976 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:31:31,976 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:31:31,977 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:31:31,978 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:31:31,978 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:31:31,978 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:31:31,982 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:31:31,982 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:31:31,983 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:31:31,983 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:31:31,983 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:31:32,049 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:31:32,255 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:31:32,312 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:31:32,312 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7426a448, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:31:32,321 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:31:32,331 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:31:32,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:31:32,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:31:32,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:31:32,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:31:32,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@24eeac69] under count; prior registration was null
2024-06-03 03:31:32,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1084f78c] under every; prior registration was null
2024-06-03 03:31:32,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under any; prior registration was null
2024-06-03 03:31:32,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:31:32,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:31:32,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:31:32,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:31:32,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:31:32,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:31:32,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:31:32,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021] under sinh; prior registration was null
2024-06-03 03:31:32,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under cosh; prior registration was null
2024-06-03 03:31:32,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under tanh; prior registration was null
2024-06-03 03:31:32,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under pi; prior registration was null
2024-06-03 03:31:32,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under log; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:31:32,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:31:32,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:31:32,404 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:31:32,405 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0] under position; prior registration was null
2024-06-03 03:31:32,406 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac] under overlay; prior registration was null
2024-06-03 03:31:32,407 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3451f01d] under trim; prior registration was null
2024-06-03 03:31:32,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@42cc183e] under cast; prior registration was null
2024-06-03 03:31:32,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e4e8fdf] under collate; prior registration was null
2024-06-03 03:31:32,409 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6aa7b67f] under extract; prior registration was null
2024-06-03 03:31:32,409 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:31:32,409 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:31:32,409 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@61514735] under ifnull; prior registration was null
2024-06-03 03:31:32,409 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:31:32,409 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:31:32,410 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@28369db0] under pad; prior registration was null
2024-06-03 03:31:32,410 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590f0c50] under str; prior registration was null
2024-06-03 03:31:32,411 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7cf78c85] under format; prior registration was null
2024-06-03 03:31:32,412 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2b7e8044] under timestampadd; prior registration was null
2024-06-03 03:31:32,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5e9f73b] under timestampdiff; prior registration was null
2024-06-03 03:31:32,413 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:31:32,413 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:31:32,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43d3aba5] under current_date; prior registration was null
2024-06-03 03:31:32,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_time; prior registration was null
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_timestamp; prior registration was null
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under local_date; prior registration was null
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_time; prior registration was null
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_datetime; prior registration was null
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under offset_datetime; prior registration was null
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under instant; prior registration was null
2024-06-03 03:31:32,414 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7eb200ce] under sql; prior registration was null
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021
2024-06-03 03:31:32,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:31:32,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:31:32,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:31:32,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:31:32,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:31:32,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:31:32,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:31:32,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:31:32,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:31:32,418 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@abbe000] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:31:32,418 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:31:32,418 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:31:32,418 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6f1b8544
2024-06-03 03:31:32,418 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:31:32,419 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52a33c3f] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:31:32,419 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:31:32,419 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under bit_length; prior registration was null
2024-06-03 03:31:32,419 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under octet_length; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75babb67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under bitand; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitor; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitxor; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitnot; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:31:32,420 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under median; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:31:32,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:31:32,422 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:31:32,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d7399f9] under insert; prior registration was null
2024-06-03 03:31:32,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4a3bd45b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac
2024-06-03 03:31:32,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:31:32,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:31:32,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:31:32,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:31:32,425 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:31:32,425 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:31:32,425 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:31:32,425 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:31:32,425 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3667faa8] under listagg; prior registration was null
2024-06-03 03:31:32,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@705a8dbc] under array; prior registration was null
2024-06-03 03:31:32,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array_list; prior registration was null
2024-06-03 03:31:32,428 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5dbb50f3] under array_agg; prior registration was null
2024-06-03 03:31:32,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@518ddd3b] under array_position; prior registration was null
2024-06-03 03:31:32,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions; prior registration was null
2024-06-03 03:31:32,437 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@a83495d] under array_positions_list; prior registration was null
2024-06-03 03:31:32,437 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e83992] under array_length; prior registration was null
2024-06-03 03:31:32,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75b6dd5b] under array_concat; prior registration was null
2024-06-03 03:31:32,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@72eb6200] under array_prepend; prior registration was null
2024-06-03 03:31:32,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_append; prior registration was null
2024-06-03 03:31:32,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@72bdd7c7] under array_contains; prior registration was null
2024-06-03 03:31:32,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains_nullable; prior registration was null
2024-06-03 03:31:32,442 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@19b206ee] under array_overlaps; prior registration was null
2024-06-03 03:31:32,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps_nullable; prior registration was null
2024-06-03 03:31:32,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bfec2f9] under array_get; prior registration was null
2024-06-03 03:31:32,444 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6690b9fa] under array_set; prior registration was null
2024-06-03 03:31:32,444 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:31:32,450 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55fee662] under array_remove_index; prior registration was null
2024-06-03 03:31:32,450 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54089484] under array_slice; prior registration was null
2024-06-03 03:31:32,450 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:31:32,450 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_trim; prior registration was null
2024-06-03 03:31:32,452 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@adcfad9] under array_fill; prior registration was null
2024-06-03 03:31:32,452 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill_list; prior registration was null
2024-06-03 03:31:32,452 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3b2553d9] under array_to_string; prior registration was null
2024-06-03 03:31:32,452 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:31:32,452 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:31:32,452 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:31:32,453 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:31:32,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3bf54172] under mode; prior registration was null
2024-06-03 03:31:32,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under percentile_cont; prior registration was null
2024-06-03 03:31:32,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_disc; prior registration was null
2024-06-03 03:31:32,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e692555] under rank; prior registration was null
2024-06-03 03:31:32,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under dense_rank; prior registration was null
2024-06-03 03:31:32,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under percent_rank; prior registration was null
2024-06-03 03:31:32,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under cume_dist; prior registration was null
2024-06-03 03:31:32,455 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@35c4e864] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:31:32,455 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:31:32,455 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@6a9344f5] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:31:32,457 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2bfaba70] under trunc; prior registration was null
2024-06-03 03:31:32,457 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:31:32,457 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71adfedd] under date_trunc; prior registration was null
2024-06-03 03:31:32,464 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:31:32,464 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:31:32,465 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:31:32,466 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:31:32,467 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:31:32,468 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:31:32,469 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:31:32,470 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:31:32,470 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:31:32,470 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:31:32,470 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:31:32,470 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:31:32,471 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:31:32,472 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:31:32,472 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:31:32,472 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:31:32,472 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:31:32,472 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:31:32,472 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:31:32,472 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:31:32,472 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:31:32,473 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:31:32,474 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:31:32,474 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:31:32,474 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:31:32,474 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:31:32,474 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:31:32,474 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:31:32,475 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,476 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,477 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,477 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,477 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,477 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,477 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,477 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:31:32,477 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:31:32,477 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:31:32,478 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:31:32,479 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:31:32,480 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:31:32,487 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:31:32,583 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:31:32,585 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:31:32,668 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:31:32,668 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:31:32,960 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:31:32,990 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:31:32,990 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:31:33,017 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:31:33,018 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:31:33,018 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:31:33,041 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:31:33,042 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:31:33,042 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:31:33,059 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:31:33,060 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:31:33,060 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:31:33,075 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:31:33,112 DEBUG creation: Starting post-init callbacks
2024-06-03 03:31:33,112 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:31:33,113 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:31:33,113 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:31:33,113 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:31:33,113 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:31:33,215 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:31:33,219 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:31:33,240 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:31:33,244 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:31:33,256 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:31:33,256 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:31:33,256 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:31:33,256 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:31:33,256 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:31:33,256 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:31:33,256 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:31:33,257 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:31:33,257 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:31:33,257 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:31:33,257 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:31:33,257 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:31:33,257 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:31:33,257 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:31:33,257 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:31:33,257 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:31:33,258 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:31:33,258 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:31:33,258 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:31:33,258 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:31:33,258 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:31:33,258 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:31:33,258 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:31:33,258 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:31:33,258 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:31:33,258 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:31:33,258 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:31:33,259 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:31:33,259 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:31:33,259 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:31:33,259 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:31:33,259 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:31:33,259 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:31:33,259 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:31:33,259 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:31:33,259 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:31:33,259 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:31:33,259 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:31:33,259 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:31:33,260 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:31:33,260 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:31:33,298 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:31:33,298 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:31:33,302 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:31:33,302 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:31:33,303 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:31:33,319 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:31:33,319 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:31:33,324 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:31:33,333 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:31:33,610 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:31:33,612 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:31:33,720 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:31:33,735 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:31:33,754 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:31:33,768 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:31:33,770 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:31:33,770 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:31:33,775 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6adcf059
2024-06-03 03:31:33,775 DEBUG SessionFactoryRegistry: Registering SessionFactory: c434d809-6c8f-45f1-a45f-8db03915cd2f (<unnamed>)
2024-06-03 03:31:33,775 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:31:33,776 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:31:33,829 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:31:33,829 DEBUG TransactionImpl: begin
2024-06-03 03:31:33,829 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:31:33,830 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:31:33,830 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:31:33,834 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 0 objects
2024-06-03 03:31:33,834 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:31:33,836 DEBUG TransactionImpl: rolling back
2024-06-03 03:31:33,836 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:31:33,837 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:32:40,929 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:32:40,958 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:32:40,985 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:32:41,106 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:32:41,109 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:32:41,176 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:32:41,189 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:32:41,780 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:32:41,800 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:32:41,828 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:32:41,850 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:32:41,851 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:32:41,853 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:32:41,853 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:32:41,854 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:32:41,857 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:32:41,877 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:32:41,880 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:32:41,883 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:32:41,885 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:32:41,886 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:32:41,888 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:32:41,929 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:32:41,932 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:32:42,228 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:32:42,229 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:32:42,229 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:32:42,229 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:32:42,229 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:32:42,229 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:32:42,229 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:32:42,229 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:32:42,230 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:32:42,230 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:32:42,230 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:32:42,230 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:32:42,230 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:32:42,231 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:32:42,231 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:32:42,231 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:32:42,231 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:32:42,231 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:32:42,232 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:32:42,232 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:32:42,232 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:32:42,232 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:32:42,232 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:32:42,233 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:32:42,233 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:32:42,234 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:32:42,234 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:32:42,234 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:32:42,234 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:32:42,235 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:32:42,235 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:32:42,235 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:32:42,235 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:32:42,235 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:32:42,236 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:32:42,236 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:32:42,236 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:32:42,236 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:32:42,236 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:32:42,236 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:32:42,237 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:32:42,237 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:32:42,237 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:32:42,237 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:32:42,237 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:32:42,237 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:32:42,237 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:32:42,238 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:32:42,238 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:32:42,238 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:32:42,238 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:32:42,238 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:32:42,238 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:32:42,239 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:32:42,239 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:32:42,239 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:32:42,239 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:32:42,239 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:32:42,239 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:32:42,240 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:32:42,240 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:32:42,240 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:32:42,240 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:32:42,240 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:32:42,241 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:32:42,241 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:32:42,241 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:32:42,241 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:32:42,242 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:32:42,243 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:32:42,243 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:32:42,243 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:32:42,243 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:32:42,243 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:32:42,243 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:32:42,243 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:32:42,244 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:32:42,245 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:32:42,245 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:32:42,245 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:32:42,245 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:32:42,245 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:32:42,246 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:32:42,246 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:32:42,246 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:32:42,246 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:32:42,247 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:32:42,248 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:32:42,248 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:32:42,248 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:32:42,248 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:32:42,249 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:32:42,250 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:32:42,250 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:32:42,250 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:32:42,250 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:32:42,260 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:32:42,261 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@515f4131
2024-06-03 03:32:42,263 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@3773862a
2024-06-03 03:32:42,264 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2472c7d8
2024-06-03 03:32:42,264 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:32:42,265 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:32:42,265 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:32:42,265 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:32:42,265 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:32:42,265 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:32:42,266 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:32:42,322 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:32:42,328 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:32:42,329 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:32:42,329 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:32:42,329 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:32:42,334 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:32:42,335 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:32:42,666 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:32:42,667 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:32:42,669 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:32:42,769 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:32:42,780 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:32:42,802 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:32:42,821 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5a67e962) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7)
2024-06-03 03:32:42,821 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc9a775) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27b000f7)
2024-06-03 03:32:42,825 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:32:42,825 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:32:42,841 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:32:42,841 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@234a8f27
2024-06-03 03:32:42,841 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@515f4131`
2024-06-03 03:32:42,848 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:32:42,848 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:32:42,848 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:32:42,854 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:32:42,855 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:32:42,855 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:32:42,855 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:32:42,855 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:32:42,855 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:32:42,857 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:32:42,857 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:32:42,857 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:32:42,859 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f387978]
2024-06-03 03:32:42,931 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:32:42,992 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:32:43,008 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:32:43,025 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:32:43,045 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:32:43,086 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,088 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:32:43,088 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:32:43,094 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:32:43,107 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:32:43,113 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:32:43,121 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:32:43,123 DEBUG PropertyBinder: Building property id
2024-06-03 03:32:43,135 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:32:43,139 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,139 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:32:43,139 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:32:43,140 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:32:43,141 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:32:43,141 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:32:43,143 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,143 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:32:43,143 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:32:43,143 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:32:43,143 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:32:43,143 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:32:43,144 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,144 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:32:43,144 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:32:43,145 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:32:43,145 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:32:43,145 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:32:43,145 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,146 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:32:43,146 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:32:43,146 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:32:43,146 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:32:43,146 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:32:43,147 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,147 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:32:43,147 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:32:43,147 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:32:43,147 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:32:43,147 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:32:43,152 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:32:43,163 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:32:43,163 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:32:43,163 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:32:43,165 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:32:43,170 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,170 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:32:43,170 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:32:43,197 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:32:43,198 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:32:43,198 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:32:43,198 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:32:43,198 DEBUG PropertyBinder: Building property id
2024-06-03 03:32:43,198 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:32:43,199 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,199 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:32:43,199 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:32:43,199 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:32:43,200 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:32:43,200 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:32:43,201 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,201 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:32:43,201 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:32:43,201 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:32:43,202 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:32:43,202 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:32:43,202 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,203 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:32:43,203 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:32:43,203 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:32:43,203 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:32:43,203 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:32:43,205 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,205 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:32:43,205 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:32:43,205 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:32:43,205 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:32:43,205 DEBUG PropertyBinder: Building property questId
2024-06-03 03:32:43,205 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,205 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:32:43,205 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:32:43,205 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:32:43,205 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:32:43,205 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:32:43,206 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:32:43,207 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:32:43,219 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:32:43,220 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:32:43,220 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:32:43,221 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:32:43,227 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,227 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:32:43,227 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:32:43,228 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:32:43,228 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:32:43,228 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:32:43,228 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:32:43,228 DEBUG PropertyBinder: Building property id
2024-06-03 03:32:43,228 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:32:43,228 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,229 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:32:43,229 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:32:43,229 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:32:43,229 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:32:43,229 DEBUG PropertyBinder: Building property description
2024-06-03 03:32:43,230 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:32:43,231 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:32:43,231 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:32:43,232 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:32:43,233 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:32:43,233 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:32:43,234 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,235 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:32:43,235 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:32:43,236 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:32:43,236 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:32:43,236 DEBUG PropertyBinder: Building property name
2024-06-03 03:32:43,236 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:32:43,236 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:32:43,237 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:32:43,237 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:32:43,237 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:32:43,237 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:32:43,237 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:32:43,238 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:32:43,239 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:32:43,239 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:32:43,239 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:32:43,241 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,242 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:32:43,242 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:32:43,242 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:32:43,242 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:32:43,242 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:32:43,242 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:32:43,242 DEBUG PropertyBinder: Building property id
2024-06-03 03:32:43,243 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:32:43,243 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,243 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:32:43,243 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:32:43,243 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:32:43,243 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:32:43,243 DEBUG PropertyBinder: Building property questId
2024-06-03 03:32:43,244 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,244 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:32:43,244 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:32:43,244 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:32:43,244 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:32:43,244 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:32:43,245 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:32:43,245 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:32:43,246 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:32:43,246 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:32:43,248 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:32:43,254 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,255 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:32:43,255 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:32:43,255 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:32:43,255 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:32:43,255 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:32:43,255 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:32:43,256 DEBUG PropertyBinder: Building property id
2024-06-03 03:32:43,256 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:32:43,256 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,256 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:32:43,256 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:32:43,256 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:32:43,256 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:32:43,256 DEBUG PropertyBinder: Building property login
2024-06-03 03:32:43,257 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,257 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:32:43,257 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:32:43,257 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:32:43,257 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:32:43,257 DEBUG PropertyBinder: Building property name
2024-06-03 03:32:43,258 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,258 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:32:43,258 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:32:43,258 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:32:43,258 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:32:43,258 DEBUG PropertyBinder: Building property password
2024-06-03 03:32:43,259 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:32:43,259 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:32:43,259 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:32:43,259 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:32:43,259 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:32:43,259 DEBUG PropertyBinder: Building property role
2024-06-03 03:32:43,260 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:32:43,263 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:32:43,269 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:32:43,270 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:32:43,270 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:32:43,273 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:32:43,273 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:32:43,273 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:32:43,274 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:32:43,275 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:32:43,275 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:32:43,275 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:32:43,275 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:32:43,275 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:32:43,275 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:32:43,279 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:32:43,279 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:32:43,279 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:32:43,279 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:32:43,279 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:32:43,339 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:32:43,606 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:32:43,662 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:32:43,663 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7426a448, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:32:43,676 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:32:43,688 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:32:43,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:32:43,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:32:43,756 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:32:43,757 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:32:43,759 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@24eeac69] under count; prior registration was null
2024-06-03 03:32:43,761 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1084f78c] under every; prior registration was null
2024-06-03 03:32:43,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under any; prior registration was null
2024-06-03 03:32:43,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:32:43,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:32:43,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:32:43,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:32:43,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:32:43,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:32:43,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:32:43,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:32:43,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:32:43,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:32:43,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:32:43,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:32:43,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:32:43,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:32:43,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:32:43,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:32:43,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:32:43,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021] under sinh; prior registration was null
2024-06-03 03:32:43,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under cosh; prior registration was null
2024-06-03 03:32:43,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under tanh; prior registration was null
2024-06-03 03:32:43,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under pi; prior registration was null
2024-06-03 03:32:43,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under log; prior registration was null
2024-06-03 03:32:43,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:32:43,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:32:43,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:32:43,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:32:43,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:32:43,769 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:32:43,769 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:32:43,769 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:32:43,769 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:32:43,769 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:32:43,769 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:32:43,769 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:32:43,770 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0] under position; prior registration was null
2024-06-03 03:32:43,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac] under overlay; prior registration was null
2024-06-03 03:32:43,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3451f01d] under trim; prior registration was null
2024-06-03 03:32:43,774 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@42cc183e] under cast; prior registration was null
2024-06-03 03:32:43,774 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e4e8fdf] under collate; prior registration was null
2024-06-03 03:32:43,775 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6aa7b67f] under extract; prior registration was null
2024-06-03 03:32:43,775 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:32:43,775 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:32:43,776 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@61514735] under ifnull; prior registration was null
2024-06-03 03:32:43,776 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:32:43,776 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:32:43,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@28369db0] under pad; prior registration was null
2024-06-03 03:32:43,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590f0c50] under str; prior registration was null
2024-06-03 03:32:43,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7cf78c85] under format; prior registration was null
2024-06-03 03:32:43,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2b7e8044] under timestampadd; prior registration was null
2024-06-03 03:32:43,780 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5e9f73b] under timestampdiff; prior registration was null
2024-06-03 03:32:43,780 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:32:43,780 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:32:43,780 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43d3aba5] under current_date; prior registration was null
2024-06-03 03:32:43,780 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_time; prior registration was null
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_timestamp; prior registration was null
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under local_date; prior registration was null
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_time; prior registration was null
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_datetime; prior registration was null
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under offset_datetime; prior registration was null
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:32:43,781 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:32:43,782 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:32:43,782 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:32:43,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under instant; prior registration was null
2024-06-03 03:32:43,782 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:32:43,785 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7eb200ce] under sql; prior registration was null
2024-06-03 03:32:43,785 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:32:43,785 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:32:43,785 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31120021
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:32:43,786 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:32:43,787 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:32:43,787 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:32:43,787 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:32:43,787 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:32:43,787 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:32:43,787 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:32:43,787 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:32:43,788 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:32:43,788 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:32:43,788 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:32:43,788 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:32:43,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@abbe000] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:32:43,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:32:43,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:32:43,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6f1b8544
2024-06-03 03:32:43,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:32:43,790 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52a33c3f] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:32:43,790 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:32:43,790 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under bit_length; prior registration was null
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under octet_length; prior registration was null
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75babb67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@34a2d6e0
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under bitand; prior registration was null
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitor; prior registration was null
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitxor; prior registration was null
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitnot; prior registration was null
2024-06-03 03:32:43,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under median; prior registration was null
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:32:43,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:32:43,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:32:43,794 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d7399f9] under insert; prior registration was null
2024-06-03 03:32:43,794 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4a3bd45b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5fef2aac
2024-06-03 03:32:43,794 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:32:43,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:32:43,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:32:43,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:32:43,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:32:43,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:32:43,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:32:43,796 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:32:43,796 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3667faa8] under listagg; prior registration was null
2024-06-03 03:32:43,799 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@705a8dbc] under array; prior registration was null
2024-06-03 03:32:43,799 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array_list; prior registration was null
2024-06-03 03:32:43,799 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5dbb50f3] under array_agg; prior registration was null
2024-06-03 03:32:43,802 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@518ddd3b] under array_position; prior registration was null
2024-06-03 03:32:43,808 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions; prior registration was null
2024-06-03 03:32:43,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@a83495d] under array_positions_list; prior registration was null
2024-06-03 03:32:43,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e83992] under array_length; prior registration was null
2024-06-03 03:32:43,812 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75b6dd5b] under array_concat; prior registration was null
2024-06-03 03:32:43,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@72eb6200] under array_prepend; prior registration was null
2024-06-03 03:32:43,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_append; prior registration was null
2024-06-03 03:32:43,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@72bdd7c7] under array_contains; prior registration was null
2024-06-03 03:32:43,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains_nullable; prior registration was null
2024-06-03 03:32:43,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@19b206ee] under array_overlaps; prior registration was null
2024-06-03 03:32:43,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps_nullable; prior registration was null
2024-06-03 03:32:43,821 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bfec2f9] under array_get; prior registration was null
2024-06-03 03:32:43,821 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6690b9fa] under array_set; prior registration was null
2024-06-03 03:32:43,821 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:32:43,822 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55fee662] under array_remove_index; prior registration was null
2024-06-03 03:32:43,822 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54089484] under array_slice; prior registration was null
2024-06-03 03:32:43,822 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:32:43,822 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_trim; prior registration was null
2024-06-03 03:32:43,824 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@adcfad9] under array_fill; prior registration was null
2024-06-03 03:32:43,824 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill_list; prior registration was null
2024-06-03 03:32:43,824 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3b2553d9] under array_to_string; prior registration was null
2024-06-03 03:32:43,824 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:32:43,824 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:32:43,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:32:43,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:32:43,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3bf54172] under mode; prior registration was null
2024-06-03 03:32:43,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under percentile_cont; prior registration was null
2024-06-03 03:32:43,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_disc; prior registration was null
2024-06-03 03:32:43,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e692555] under rank; prior registration was null
2024-06-03 03:32:43,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under dense_rank; prior registration was null
2024-06-03 03:32:43,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under percent_rank; prior registration was null
2024-06-03 03:32:43,827 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under cume_dist; prior registration was null
2024-06-03 03:32:43,827 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@35c4e864] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:32:43,827 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:32:43,828 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@6a9344f5] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:32:43,830 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2bfaba70] under trunc; prior registration was null
2024-06-03 03:32:43,830 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:32:43,830 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71adfedd] under date_trunc; prior registration was null
2024-06-03 03:32:43,839 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:32:43,839 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:32:43,839 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:32:43,840 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:32:43,841 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:32:43,842 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:32:43,843 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:32:43,844 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:32:43,845 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:32:43,846 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:32:43,847 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,848 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:32:43,849 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:32:43,850 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:32:43,851 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:32:43,861 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:32:43,985 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:32:43,987 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:32:44,103 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:32:44,103 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:32:44,474 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:32:44,512 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:32:44,512 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:32:44,544 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:32:44,545 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:32:44,545 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:32:44,578 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:32:44,579 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:32:44,579 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:32:44,606 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:32:44,608 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:32:44,608 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:32:44,626 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:32:44,660 DEBUG creation: Starting post-init callbacks
2024-06-03 03:32:44,660 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:32:44,661 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:32:44,661 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:32:44,661 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:32:44,661 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:32:44,788 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:32:44,792 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:32:44,826 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:32:44,831 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:32:44,858 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:32:44,858 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:32:44,858 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:32:44,858 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:32:44,858 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:32:44,858 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:32:44,858 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:32:44,859 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:32:44,859 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:32:44,859 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:32:44,859 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:32:44,859 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:32:44,859 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:32:44,859 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:32:44,859 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:32:44,860 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:32:44,860 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:32:44,860 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:32:44,860 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:32:44,860 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:32:44,860 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:32:44,860 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:32:44,860 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:32:44,860 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:32:44,861 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:32:44,861 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:32:44,861 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:32:44,861 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:32:44,861 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:32:44,861 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:32:44,861 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:32:44,861 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:32:44,862 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:32:44,862 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:32:44,862 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:32:44,862 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:32:44,862 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:32:44,862 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:32:44,862 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:32:44,862 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:32:44,862 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:32:44,926 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:32:44,926 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:32:44,937 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:32:44,938 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:32:44,940 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8e246c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:32:44,957 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:32:44,957 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:32:44,963 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:32:44,975 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:32:45,401 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:32:45,402 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:32:45,554 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:32:45,578 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:32:45,611 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:32:45,644 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:32:45,646 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:32:45,647 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:32:45,656 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6adcf059
2024-06-03 03:32:45,657 DEBUG SessionFactoryRegistry: Registering SessionFactory: 1ec5c3c4-0ef1-4c26-9551-055d8de9e9b4 (<unnamed>)
2024-06-03 03:32:45,657 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:32:45,657 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:32:45,750 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:32:45,751 DEBUG TransactionImpl: begin
2024-06-03 03:32:45,858 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:32:45,918 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@316863915 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:32:45,945 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:32:45,983 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:32:45,990 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 748807322
2024-06-03 03:32:45,993 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:32:45,994 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:32:45,994 DEBUG results: Extracted JDBC value [3] - [45]
2024-06-03 03:32:45,994 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:32:46,012 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:32:46,015 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391dfe7c
2024-06-03 03:32:46,023 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:32:46,025 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:32:46,037 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:32:46,058 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:32:46,059 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:32:46,061 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:32:46,065 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=45, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:32:46,065 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:32:46,067 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:32:46,067 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:32:46,068 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:32:46,068 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:32:46,068 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:32:46,068 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:32:46,069 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=45, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:32:46,069 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:32:46,070 DEBUG TransactionImpl: committing
2024-06-03 03:32:46,072 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:32:46,072 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:32:46,073 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:32:46,074 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:32:46,074 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:32:46,074 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=45, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:32:46,084 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:32:46,085 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:32:46,088 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:32:46,088 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:32:46,088 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:32:46,089 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:32:46,089 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:32:46,089 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:32:46,089 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=45, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:32:46,089 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:32:46,101 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-06-03 03:32:46,104 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5600a278] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4cae66a8]
2024-06-03 03:32:46,105 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-06-03 03:32:46,105 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:32:46,108 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-06-03 03:33:00,350 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:33:00,372 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:33:00,379 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:33:00,464 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:33:00,467 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:33:00,532 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:33:00,545 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:33:00,948 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:33:00,958 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:33:00,988 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:33:00,998 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:33:01,000 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:33:01,002 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:33:01,003 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:33:01,004 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:33:01,006 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:33:01,007 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:33:01,010 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:33:01,012 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:33:01,015 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:33:01,016 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:33:01,021 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:33:01,043 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:33:01,045 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:33:01,374 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:33:01,375 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:33:01,375 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:33:01,375 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:33:01,375 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:33:01,376 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:33:01,376 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:33:01,376 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:33:01,376 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:33:01,376 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:33:01,376 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:33:01,377 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:33:01,377 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:33:01,377 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:33:01,377 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:33:01,377 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:33:01,377 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:33:01,378 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@bae47a0
2024-06-03 03:33:01,378 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:33:01,378 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:33:01,378 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@85ec632
2024-06-03 03:33:01,378 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c05a54d
2024-06-03 03:33:01,378 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:33:01,379 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:33:01,379 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:33:01,379 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:33:01,379 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:33:01,379 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:33:01,379 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:33:01,379 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:33:01,380 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:33:01,380 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:33:01,380 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:33:01,380 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:33:01,380 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:33:01,380 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:33:01,381 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:33:01,381 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:33:01,381 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:33:01,381 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:33:01,381 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:33:01,381 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:33:01,381 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:33:01,382 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:33:01,382 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:33:01,382 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:33:01,382 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:33:01,382 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:33:01,383 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:33:01,383 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:33:01,383 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:33:01,383 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:33:01,383 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:33:01,383 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:33:01,383 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:33:01,384 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:33:01,384 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:33:01,384 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:33:01,384 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:33:01,384 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:33:01,384 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:33:01,385 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:33:01,385 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:33:01,385 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:33:01,385 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:33:01,385 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:33:01,386 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:33:01,386 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:33:01,386 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:33:01,386 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:33:01,386 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:33:01,386 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:33:01,387 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:33:01,387 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:33:01,387 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:33:01,387 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:33:01,387 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:33:01,387 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:33:01,388 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:33:01,388 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:33:01,388 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:33:01,388 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:33:01,388 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:33:01,388 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:33:01,389 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:33:01,389 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:33:01,389 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:33:01,389 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:33:01,389 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:33:01,389 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:33:01,390 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:33:01,390 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:33:01,390 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:33:01,390 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:33:01,390 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:33:01,390 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:33:01,391 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:33:01,391 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:33:01,391 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:33:01,391 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:33:01,391 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:33:01,391 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:33:01,392 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:33:01,392 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:33:01,392 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:33:01,392 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:33:01,392 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:33:01,393 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:33:01,394 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:33:01,394 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:33:01,394 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:33:01,394 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:33:01,394 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:33:01,403 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@4e7095ac
2024-06-03 03:33:01,403 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e7095ac
2024-06-03 03:33:01,405 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26f3d90c
2024-06-03 03:33:01,405 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3c49fab6
2024-06-03 03:33:01,405 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@515f4131
2024-06-03 03:33:01,405 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@74518890
2024-06-03 03:33:01,406 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c5204af
2024-06-03 03:33:01,406 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3f3ddbd9
2024-06-03 03:33:01,406 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@14c053c6
2024-06-03 03:33:01,406 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6c2d4cc6
2024-06-03 03:33:01,406 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@30865a90
2024-06-03 03:33:01,456 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:33:01,463 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:33:01,463 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:33:01,463 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:33:01,464 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:33:01,469 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:33:01,469 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:33:01,795 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:33:01,796 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:33:01,797 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:33:01,925 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:33:01,941 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:33:01,961 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:33:01,984 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2d2acd89) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7baf6acf)
2024-06-03 03:33:01,984 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e6dad8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b3315a5)
2024-06-03 03:33:01,988 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:33:01,989 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:33:02,005 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4f63e3c7
2024-06-03 03:33:02,006 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4f63e3c7
2024-06-03 03:33:02,006 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4e7095ac`
2024-06-03 03:33:02,013 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:33:02,014 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:33:02,014 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:33:02,027 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:33:02,027 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:33:02,027 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:33:02,027 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:33:02,027 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:33:02,028 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:33:02,030 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:33:02,031 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:33:02,031 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:33:02,034 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bacdbc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c6ee758]
2024-06-03 03:33:02,123 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:33:02,172 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:33:02,186 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:33:02,198 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:33:02,220 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:33:02,259 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,260 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:33:02,260 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:33:02,269 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:33:02,277 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:33:02,283 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:33:02,291 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:33:02,293 DEBUG PropertyBinder: Building property id
2024-06-03 03:33:02,303 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:33:02,305 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,305 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:33:02,305 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:33:02,305 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:33:02,305 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:33:02,306 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:33:02,307 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,307 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:33:02,307 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:33:02,307 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:33:02,307 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:33:02,307 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:33:02,308 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,308 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:33:02,308 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:33:02,308 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:33:02,308 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:33:02,308 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:33:02,309 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,309 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:33:02,309 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:33:02,309 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:33:02,309 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:33:02,309 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:33:02,309 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,310 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:33:02,310 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:33:02,310 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:33:02,310 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:33:02,310 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:33:02,311 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:33:02,320 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:33:02,321 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:33:02,321 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:33:02,321 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:33:02,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,324 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:33:02,324 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:33:02,349 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:33:02,349 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:33:02,349 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:33:02,349 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:33:02,349 DEBUG PropertyBinder: Building property id
2024-06-03 03:33:02,350 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:33:02,350 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,350 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:33:02,350 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:33:02,350 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:33:02,350 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:33:02,350 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:33:02,351 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,351 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:33:02,351 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:33:02,351 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:33:02,351 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:33:02,352 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:33:02,352 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,352 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:33:02,352 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:33:02,352 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:33:02,352 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:33:02,352 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:33:02,353 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,353 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:33:02,353 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:33:02,353 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:33:02,353 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:33:02,354 DEBUG PropertyBinder: Building property questId
2024-06-03 03:33:02,354 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,354 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:33:02,354 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:33:02,354 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:33:02,354 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:33:02,354 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:33:02,355 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:33:02,355 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:33:02,364 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:33:02,367 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:33:02,367 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:33:02,368 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:33:02,374 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,374 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:33:02,374 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:33:02,374 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:33:02,374 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:33:02,375 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:33:02,375 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:33:02,375 DEBUG PropertyBinder: Building property id
2024-06-03 03:33:02,375 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:33:02,375 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,375 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:33:02,375 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:33:02,375 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:33:02,376 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:33:02,376 DEBUG PropertyBinder: Building property description
2024-06-03 03:33:02,376 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:33:02,376 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:33:02,377 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:33:02,377 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:33:02,377 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:33:02,377 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:33:02,377 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,377 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:33:02,377 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:33:02,377 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:33:02,377 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:33:02,378 DEBUG PropertyBinder: Building property name
2024-06-03 03:33:02,378 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:33:02,378 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:33:02,378 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:33:02,378 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:33:02,378 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:33:02,378 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:33:02,379 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:33:02,380 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:33:02,380 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:33:02,381 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:33:02,381 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:33:02,384 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,385 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:33:02,385 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:33:02,385 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:33:02,385 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:33:02,385 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:33:02,385 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:33:02,386 DEBUG PropertyBinder: Building property id
2024-06-03 03:33:02,386 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:33:02,386 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,386 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:33:02,386 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:33:02,387 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:33:02,387 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:33:02,387 DEBUG PropertyBinder: Building property questId
2024-06-03 03:33:02,387 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,387 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:33:02,387 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:33:02,388 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:33:02,388 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:33:02,388 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:33:02,388 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:33:02,389 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:33:02,390 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:33:02,390 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:33:02,390 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:33:02,392 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,393 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:33:02,393 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:33:02,393 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:33:02,393 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:33:02,393 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:33:02,393 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:33:02,393 DEBUG PropertyBinder: Building property id
2024-06-03 03:33:02,394 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:33:02,394 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,394 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:33:02,394 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:33:02,394 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:33:02,394 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:33:02,394 DEBUG PropertyBinder: Building property login
2024-06-03 03:33:02,394 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,395 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:33:02,395 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:33:02,395 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:33:02,395 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:33:02,395 DEBUG PropertyBinder: Building property name
2024-06-03 03:33:02,395 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,395 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:33:02,395 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:33:02,395 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:33:02,395 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:33:02,396 DEBUG PropertyBinder: Building property password
2024-06-03 03:33:02,396 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:33:02,396 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:33:02,396 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:33:02,396 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:33:02,396 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:33:02,396 DEBUG PropertyBinder: Building property role
2024-06-03 03:33:02,397 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:33:02,399 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:33:02,401 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:33:02,401 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:33:02,402 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:33:02,404 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:33:02,404 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:33:02,404 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:33:02,404 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:33:02,405 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:33:02,406 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:33:02,406 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:33:02,406 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:33:02,406 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:33:02,406 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:33:02,411 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:33:02,411 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:33:02,411 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:33:02,411 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:33:02,412 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:33:02,479 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:33:02,735 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:33:02,792 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:33:02,793 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6419a0e1, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:33:02,805 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:33:02,820 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:33:02,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:33:02,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:33:02,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:33:02,884 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:33:02,886 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6bc24e72] under count; prior registration was null
2024-06-03 03:33:02,887 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a916402] under every; prior registration was null
2024-06-03 03:33:02,887 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1a47a1e8] under any; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:33:02,888 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:33:02,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:33:02,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:33:02,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:33:02,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:33:02,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:33:02,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:33:02,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:33:02,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:33:02,892 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3382cf68] under sinh; prior registration was null
2024-06-03 03:33:02,892 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b] under cosh; prior registration was null
2024-06-03 03:33:02,892 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1] under tanh; prior registration was null
2024-06-03 03:33:02,892 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173] under pi; prior registration was null
2024-06-03 03:33:02,892 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8] under log; prior registration was null
2024-06-03 03:33:02,893 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:33:02,893 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:33:02,893 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:33:02,893 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:33:02,893 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:33:02,894 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:33:02,894 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:33:02,894 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:33:02,894 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:33:02,894 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:33:02,894 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:33:02,894 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:33:02,895 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3df1a1ac] under position; prior registration was null
2024-06-03 03:33:02,899 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@49cb1baf] under overlay; prior registration was null
2024-06-03 03:33:02,900 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2525a5b8] under trim; prior registration was null
2024-06-03 03:33:02,904 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5b5a4aed] under cast; prior registration was null
2024-06-03 03:33:02,904 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c991465] under collate; prior registration was null
2024-06-03 03:33:02,906 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@124d02b2] under extract; prior registration was null
2024-06-03 03:33:02,906 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:33:02,906 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:33:02,907 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@66deec87] under ifnull; prior registration was null
2024-06-03 03:33:02,907 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:33:02,907 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:33:02,908 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@42cc183e] under pad; prior registration was null
2024-06-03 03:33:02,908 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@205df5dc] under str; prior registration was null
2024-06-03 03:33:02,910 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6bee793f] under format; prior registration was null
2024-06-03 03:33:02,910 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@30893e08] under timestampadd; prior registration was null
2024-06-03 03:33:02,912 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@188598ad] under timestampdiff; prior registration was null
2024-06-03 03:33:02,912 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:33:02,912 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:33:02,912 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a4ab7f7] under current_date; prior registration was null
2024-06-03 03:33:02,912 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6badba10] under current_time; prior registration was null
2024-06-03 03:33:02,912 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b7e8044] under current_timestamp; prior registration was null
2024-06-03 03:33:02,912 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:33:02,912 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550de6b8] under local_date; prior registration was null
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a1706e1] under local_time; prior registration was null
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c6c4689] under local_datetime; prior registration was null
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63cf9de0] under offset_datetime; prior registration was null
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@594d9f07] under instant; prior registration was null
2024-06-03 03:33:02,913 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:33:02,914 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2fd64b11] under sql; prior registration was null
2024-06-03 03:33:02,914 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:33:02,914 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:33:02,914 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:33:02,914 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8
2024-06-03 03:33:02,914 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@949c598] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3382cf68
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:33:02,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:33:02,916 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:33:02,916 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:33:02,916 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:33:02,916 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:33:02,916 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:33:02,916 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:33:02,917 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:33:02,917 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:33:02,918 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@314b9e4b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:33:02,918 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:33:02,918 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:33:02,919 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3a1706e1
2024-06-03 03:33:02,919 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3c6c4689
2024-06-03 03:33:02,920 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5de5e95] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:33:02,920 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:33:02,920 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@365cdacf] under bit_length; prior registration was null
2024-06-03 03:33:02,920 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@303c55fa] under octet_length; prior registration was null
2024-06-03 03:33:02,920 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:33:02,920 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:33:02,920 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9efcd90] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3df1a1ac
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7eb200ce] under bitand; prior registration was null
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under bitor; prior registration was null
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c2924d7] under bitxor; prior registration was null
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5de58f] under bitnot; prior registration was null
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:33:02,921 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6587305a] under median; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:33:02,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:33:02,923 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:33:02,923 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:33:02,923 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:33:02,923 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:33:02,923 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:33:02,923 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:33:02,923 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:33:02,924 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:33:02,924 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:33:02,924 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f81621c] under insert; prior registration was null
2024-06-03 03:33:02,924 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@668625f5] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@49cb1baf
2024-06-03 03:33:02,925 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:33:02,925 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@19a20bb2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:33:02,925 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:33:02,926 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:33:02,926 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:33:02,926 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:33:02,926 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:33:02,926 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:33:02,927 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@663f237a] under listagg; prior registration was null
2024-06-03 03:33:02,929 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3667faa8] under array; prior registration was null
2024-06-03 03:33:02,929 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1756f7cc] under array_list; prior registration was null
2024-06-03 03:33:02,931 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2b0e9f30] under array_agg; prior registration was null
2024-06-03 03:33:02,936 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@7c1447b5] under array_position; prior registration was null
2024-06-03 03:33:02,942 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@4b960b5b] under array_positions; prior registration was null
2024-06-03 03:33:02,944 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions_list; prior registration was null
2024-06-03 03:33:02,945 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@539a138b] under array_length; prior registration was null
2024-06-03 03:33:02,946 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@42383cb0] under array_concat; prior registration was null
2024-06-03 03:33:02,948 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@d2e6b0b] under array_prepend; prior registration was null
2024-06-03 03:33:02,948 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1f1cddf3] under array_append; prior registration was null
2024-06-03 03:33:02,950 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3fd05b3e] under array_contains; prior registration was null
2024-06-03 03:33:02,950 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4eb9f2af] under array_contains_nullable; prior registration was null
2024-06-03 03:33:02,952 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2e32fc22] under array_overlaps; prior registration was null
2024-06-03 03:33:02,952 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3f5156a6] under array_overlaps_nullable; prior registration was null
2024-06-03 03:33:02,952 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@712c5463] under array_get; prior registration was null
2024-06-03 03:33:02,953 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@66de00f2] under array_set; prior registration was null
2024-06-03 03:33:02,953 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:33:02,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@ffd4cba] under array_remove_index; prior registration was null
2024-06-03 03:33:02,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f1483fd] under array_slice; prior registration was null
2024-06-03 03:33:02,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:33:02,955 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@670f2466] under array_trim; prior registration was null
2024-06-03 03:33:02,957 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@36c2d629] under array_fill; prior registration was null
2024-06-03 03:33:02,957 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55fee662] under array_fill_list; prior registration was null
2024-06-03 03:33:02,957 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@479111ba] under array_to_string; prior registration was null
2024-06-03 03:33:02,957 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:33:02,957 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:33:02,957 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:33:02,957 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:33:02,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5b5dce5c] under mode; prior registration was null
2024-06-03 03:33:02,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7f4701b1] under percentile_cont; prior registration was null
2024-06-03 03:33:02,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@adcfad9] under percentile_disc; prior registration was null
2024-06-03 03:33:02,959 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10c47c79] under rank; prior registration was null
2024-06-03 03:33:02,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b2553d9] under dense_rank; prior registration was null
2024-06-03 03:33:02,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@753fd7a1] under percent_rank; prior registration was null
2024-06-03 03:33:02,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@12a2585b] under cume_dist; prior registration was null
2024-06-03 03:33:02,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3bf54172] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:33:02,960 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2c9a6717] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:33:02,961 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3bb5ceb] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:33:02,963 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6d0be7ab] under trunc; prior registration was null
2024-06-03 03:33:02,964 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:33:02,964 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d4fb213] under date_trunc; prior registration was null
2024-06-03 03:33:02,972 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:33:02,972 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:33:02,973 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:33:02,974 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:33:02,975 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:33:02,976 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:33:02,977 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:33:02,977 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:33:02,977 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:33:02,977 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:33:02,977 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:33:02,977 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:33:02,977 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:33:02,977 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:33:02,978 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:33:02,979 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:33:02,980 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:33:02,980 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:33:02,980 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:33:02,980 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:33:02,980 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:33:02,980 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:33:02,980 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:33:02,981 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:33:02,981 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:33:02,981 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:33:02,981 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:33:02,981 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:33:02,981 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:33:02,981 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:33:02,982 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:33:02,982 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:33:02,982 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:33:02,982 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:33:02,982 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:33:02,982 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:33:02,982 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:33:02,982 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,983 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:33:02,984 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:33:02,985 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:33:02,986 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:33:03,002 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:33:03,138 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:33:03,140 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:33:03,244 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:33:03,244 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:33:03,618 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:33:03,650 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:33:03,650 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:33:03,682 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:33:03,684 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:33:03,684 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:33:03,717 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:33:03,718 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:33:03,718 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:33:03,741 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:33:03,742 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:33:03,742 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:33:03,755 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:33:03,783 DEBUG creation: Starting post-init callbacks
2024-06-03 03:33:03,783 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:33:03,784 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:33:03,784 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:33:03,784 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:33:03,784 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:33:03,894 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:33:03,901 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:33:03,925 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:33:03,933 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:33:03,948 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:33:03,948 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:33:03,948 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:33:03,948 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:33:03,948 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:33:03,948 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:33:03,948 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:33:03,949 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:33:03,949 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:33:03,949 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:33:03,949 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:33:03,949 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:33:03,949 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:33:03,949 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:33:03,949 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:33:03,949 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:33:03,950 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:33:03,950 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:33:03,950 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:33:03,950 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:33:03,950 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:33:03,950 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:33:03,950 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:33:03,950 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:33:03,950 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:33:03,951 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:33:03,951 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:33:03,951 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:33:03,951 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:33:03,951 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:33:03,951 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:33:03,951 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:33:03,951 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:33:03,951 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:33:03,951 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:33:03,951 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:33:03,952 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:33:03,952 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:33:03,952 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:33:03,952 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:33:03,952 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:33:03,998 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:33:03,999 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:33:04,003 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:33:04,003 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:33:04,004 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bacdbc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b01c689]
2024-06-03 03:33:04,019 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:33:04,019 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:33:04,025 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:33:04,031 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:33:04,348 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:33:04,349 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:33:04,475 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:33:04,498 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:33:04,526 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:33:04,551 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:33:04,552 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:33:04,552 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:33:04,556 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66314fee
2024-06-03 03:33:04,556 DEBUG SessionFactoryRegistry: Registering SessionFactory: 496ede45-6516-453a-9353-d20b62b3794c (<unnamed>)
2024-06-03 03:33:04,556 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:33:04,556 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:33:04,621 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:33:04,621 DEBUG TransactionImpl: begin
2024-06-03 03:33:04,665 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:33:04,717 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1468241972 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:33:04,731 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:33:04,753 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:33:04,756 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 749515845
2024-06-03 03:33:04,757 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:33:04,758 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:33:04,758 DEBUG results: Extracted JDBC value [3] - [45]
2024-06-03 03:33:04,758 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:33:04,770 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:33:04,770 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@87220f1
2024-06-03 03:33:04,776 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:33:04,778 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:33:04,784 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:33:04,795 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:33:04,796 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:33:04,798 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:33:04,800 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=45, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:33:04,800 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:33:04,802 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:33:04,802 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:33:04,802 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:33:04,812 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:33:04,813 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:33:04,813 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:33:04,814 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4577, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:33:04,814 DEBUG DefaultDirtyCheckEventListener: Session dirty
2024-06-03 03:33:04,815 DEBUG TransactionImpl: committing
2024-06-03 03:33:04,816 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:33:04,816 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:33:04,817 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:33:04,817 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:33:04,817 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:33:04,817 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4577, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:33:04,837 DEBUG SQL: 
    update
        users 
    set
        login=?,
        name=?,
        password=?,
        role=? 
    where
        id=?
2024-06-03 03:33:04,892 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:33:04,893 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:33:04,894 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:33:04,894 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:33:04,894 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:33:04,894 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:33:04,894 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:33:04,894 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:33:04,894 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4577, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:33:04,894 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:33:04,904 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-06-03 03:33:04,906 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5724c7da] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2b01c689]
2024-06-03 03:33:04,906 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-06-03 03:33:04,906 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:33:04,908 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-06-03 03:35:28,948 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:35:28,983 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:35:28,998 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:35:29,145 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:35:29,149 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:35:29,246 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:35:29,258 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:35:29,862 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:35:29,882 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:35:29,918 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:35:29,936 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:35:29,938 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:35:29,942 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:35:29,943 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:35:29,945 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:35:29,949 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:35:29,950 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:35:29,954 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:35:29,955 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:35:29,957 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:35:29,957 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:35:29,960 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:35:29,995 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:35:29,999 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:35:30,452 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:35:30,453 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:35:30,455 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@308a6984
2024-06-03 03:35:30,455 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:35:30,455 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:35:30,455 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:35:30,456 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:35:30,456 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:35:30,456 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:35:30,457 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:35:30,457 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:35:30,457 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:35:30,458 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:35:30,458 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:35:30,459 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:35:30,459 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:35:30,459 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:35:30,459 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@bae47a0
2024-06-03 03:35:30,460 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:35:30,460 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:35:30,460 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@85ec632
2024-06-03 03:35:30,460 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c05a54d
2024-06-03 03:35:30,460 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:35:30,460 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:35:30,460 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:35:30,461 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:35:30,461 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:35:30,461 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:35:30,461 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:35:30,461 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:35:30,461 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:35:30,462 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:35:30,462 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:35:30,462 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:35:30,463 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:35:30,463 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:35:30,463 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:35:30,464 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:35:30,464 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:35:30,464 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:35:30,464 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:35:30,465 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:35:30,465 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:35:30,465 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:35:30,465 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:35:30,465 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:35:30,466 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:35:30,466 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:35:30,466 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:35:30,466 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:35:30,466 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:35:30,466 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:35:30,467 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:35:30,467 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:35:30,467 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:35:30,467 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:35:30,468 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:35:30,468 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:35:30,468 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:35:30,468 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:35:30,468 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:35:30,468 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:35:30,468 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:35:30,469 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:35:30,469 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:35:30,469 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:35:30,469 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:35:30,470 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:35:30,470 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:35:30,470 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:35:30,470 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:35:30,470 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:35:30,470 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:35:30,470 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:35:30,471 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:35:30,471 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:35:30,471 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:35:30,471 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:35:30,471 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:35:30,471 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:35:30,471 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:35:30,472 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:35:30,472 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:35:30,472 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:35:30,472 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:35:30,473 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:35:30,473 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:35:30,474 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:35:30,474 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:35:30,475 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:35:30,475 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:35:30,475 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:35:30,475 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:35:30,475 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:35:30,475 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:35:30,476 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:35:30,476 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:35:30,476 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:35:30,476 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:35:30,476 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:35:30,476 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:35:30,477 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:35:30,477 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:35:30,477 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:35:30,477 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:35:30,477 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:35:30,478 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:35:30,478 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:35:30,478 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:35:30,478 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:35:30,478 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:35:30,478 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:35:30,479 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:35:30,479 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:35:30,479 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:35:30,479 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:35:30,480 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:35:30,480 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:35:30,480 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:35:30,480 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:35:30,480 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:35:30,494 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@4e7095ac
2024-06-03 03:35:30,495 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e7095ac
2024-06-03 03:35:30,497 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26f3d90c
2024-06-03 03:35:30,497 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3c49fab6
2024-06-03 03:35:30,497 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@515f4131
2024-06-03 03:35:30,497 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@74518890
2024-06-03 03:35:30,497 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c5204af
2024-06-03 03:35:30,498 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3f3ddbd9
2024-06-03 03:35:30,498 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@14c053c6
2024-06-03 03:35:30,498 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6c2d4cc6
2024-06-03 03:35:30,498 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@30865a90
2024-06-03 03:35:30,579 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:35:30,592 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:35:30,593 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:35:30,593 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:35:30,593 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:35:30,600 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:35:30,600 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:35:31,144 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:35:31,145 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:35:31,146 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:35:31,292 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:35:31,308 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:35:31,336 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:35:31,361 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2d2acd89) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7baf6acf)
2024-06-03 03:35:31,361 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e6dad8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b3315a5)
2024-06-03 03:35:31,365 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:35:31,365 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:35:31,384 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4f63e3c7
2024-06-03 03:35:31,385 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4f63e3c7
2024-06-03 03:35:31,385 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4e7095ac`
2024-06-03 03:35:31,399 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:35:31,399 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:35:31,399 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:35:31,413 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:35:31,414 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:35:31,414 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:35:31,414 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:35:31,414 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:35:31,414 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:35:31,415 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:35:31,416 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:35:31,416 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:35:31,420 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bacdbc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c6ee758]
2024-06-03 03:35:31,516 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:35:31,610 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:35:31,647 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:35:31,665 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:35:31,692 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:35:31,746 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,748 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:35:31,748 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:35:31,756 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:35:31,765 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:35:31,777 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:35:31,784 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:35:31,788 DEBUG PropertyBinder: Building property id
2024-06-03 03:35:31,801 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:35:31,804 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,804 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:35:31,805 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:35:31,805 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:35:31,805 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:35:31,805 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:35:31,808 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,808 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:35:31,808 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:35:31,808 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:35:31,808 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:35:31,808 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:35:31,809 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,810 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:35:31,810 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:35:31,810 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:35:31,811 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:35:31,811 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:35:31,812 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,812 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:35:31,812 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:35:31,812 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:35:31,813 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:35:31,813 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:35:31,814 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,814 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:35:31,814 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:35:31,814 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:35:31,815 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:35:31,815 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:35:31,816 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:35:31,832 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:35:31,833 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:35:31,834 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:35:31,834 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:35:31,842 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,842 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:35:31,843 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:35:31,877 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:35:31,877 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:35:31,877 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:35:31,877 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:35:31,878 DEBUG PropertyBinder: Building property id
2024-06-03 03:35:31,878 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:35:31,878 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,879 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:35:31,879 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:35:31,879 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:35:31,879 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:35:31,879 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:35:31,880 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,880 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:35:31,880 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:35:31,880 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:35:31,880 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:35:31,880 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:35:31,881 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,881 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:35:31,881 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:35:31,881 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:35:31,881 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:35:31,881 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:35:31,882 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,882 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:35:31,882 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:35:31,882 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:35:31,882 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:35:31,883 DEBUG PropertyBinder: Building property questId
2024-06-03 03:35:31,883 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,883 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:35:31,883 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:35:31,884 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:35:31,884 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:35:31,884 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:35:31,885 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:35:31,886 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:35:31,901 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:35:31,903 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:35:31,904 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:35:31,905 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:35:31,915 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,916 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:35:31,916 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:35:31,916 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:35:31,916 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:35:31,916 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:35:31,917 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:35:31,917 DEBUG PropertyBinder: Building property id
2024-06-03 03:35:31,917 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:35:31,917 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,917 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:35:31,917 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:35:31,918 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:35:31,918 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:35:31,918 DEBUG PropertyBinder: Building property description
2024-06-03 03:35:31,919 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:35:31,920 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:35:31,920 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:35:31,921 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:35:31,921 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:35:31,921 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:35:31,923 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,924 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:35:31,924 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:35:31,925 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:35:31,925 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:35:31,925 DEBUG PropertyBinder: Building property name
2024-06-03 03:35:31,926 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:35:31,926 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:35:31,927 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:35:31,927 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:35:31,927 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:35:31,927 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:35:31,928 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:35:31,930 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:35:31,930 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:35:31,931 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:35:31,931 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:35:31,933 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,934 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:35:31,934 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:35:31,934 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:35:31,934 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:35:31,934 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:35:31,934 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:35:31,934 DEBUG PropertyBinder: Building property id
2024-06-03 03:35:31,935 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:35:31,935 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,935 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:35:31,935 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:35:31,937 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:35:31,937 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:35:31,938 DEBUG PropertyBinder: Building property questId
2024-06-03 03:35:31,939 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,939 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:35:31,939 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:35:31,940 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:35:31,940 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:35:31,940 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:35:31,941 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:35:31,943 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:35:31,945 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:35:31,946 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:35:31,948 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:35:31,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,951 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:35:31,951 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:35:31,952 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:35:31,952 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:35:31,952 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:35:31,952 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:35:31,953 DEBUG PropertyBinder: Building property id
2024-06-03 03:35:31,954 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:35:31,955 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,955 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:35:31,955 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:35:31,955 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:35:31,955 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:35:31,955 DEBUG PropertyBinder: Building property login
2024-06-03 03:35:31,956 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,956 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:35:31,956 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:35:31,956 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:35:31,957 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:35:31,957 DEBUG PropertyBinder: Building property name
2024-06-03 03:35:31,958 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,959 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:35:31,959 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:35:31,959 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:35:31,959 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:35:31,959 DEBUG PropertyBinder: Building property password
2024-06-03 03:35:31,959 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:35:31,959 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:35:31,960 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:35:31,960 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:35:31,960 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:35:31,960 DEBUG PropertyBinder: Building property role
2024-06-03 03:35:31,961 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:35:31,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:35:31,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:35:31,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:35:31,968 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:35:31,971 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:35:31,971 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:35:31,972 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:35:31,972 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:35:31,972 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:35:31,972 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:35:31,972 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:35:31,973 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:35:31,973 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:35:31,973 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:35:31,973 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:35:31,974 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:35:31,980 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:35:31,980 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:35:31,980 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:35:31,980 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:35:31,981 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:35:32,102 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:35:32,559 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:35:32,642 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:35:32,643 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6419a0e1, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:35:32,658 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:35:32,675 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:35:32,776 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:35:32,776 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:35:32,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:35:32,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:35:32,780 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6bc24e72] under count; prior registration was null
2024-06-03 03:35:32,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a916402] under every; prior registration was null
2024-06-03 03:35:32,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1a47a1e8] under any; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:35:32,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:35:32,783 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:35:32,783 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:35:32,783 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:35:32,783 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:35:32,783 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:35:32,783 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:35:32,783 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:35:32,783 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:35:32,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3382cf68] under sinh; prior registration was null
2024-06-03 03:35:32,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b] under cosh; prior registration was null
2024-06-03 03:35:32,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1] under tanh; prior registration was null
2024-06-03 03:35:32,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173] under pi; prior registration was null
2024-06-03 03:35:32,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8] under log; prior registration was null
2024-06-03 03:35:32,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:35:32,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:35:32,791 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:35:32,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:35:32,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:35:32,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:35:32,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:35:32,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:35:32,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:35:32,792 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:35:32,793 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:35:32,793 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:35:32,794 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3df1a1ac] under position; prior registration was null
2024-06-03 03:35:32,796 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@49cb1baf] under overlay; prior registration was null
2024-06-03 03:35:32,797 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2525a5b8] under trim; prior registration was null
2024-06-03 03:35:32,798 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5b5a4aed] under cast; prior registration was null
2024-06-03 03:35:32,798 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c991465] under collate; prior registration was null
2024-06-03 03:35:32,799 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@124d02b2] under extract; prior registration was null
2024-06-03 03:35:32,800 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:35:32,800 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:35:32,800 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@66deec87] under ifnull; prior registration was null
2024-06-03 03:35:32,800 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:35:32,801 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:35:32,801 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@42cc183e] under pad; prior registration was null
2024-06-03 03:35:32,802 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@205df5dc] under str; prior registration was null
2024-06-03 03:35:32,805 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6bee793f] under format; prior registration was null
2024-06-03 03:35:32,806 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@30893e08] under timestampadd; prior registration was null
2024-06-03 03:35:32,807 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@188598ad] under timestampdiff; prior registration was null
2024-06-03 03:35:32,807 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:35:32,807 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a4ab7f7] under current_date; prior registration was null
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6badba10] under current_time; prior registration was null
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b7e8044] under current_timestamp; prior registration was null
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550de6b8] under local_date; prior registration was null
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a1706e1] under local_time; prior registration was null
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c6c4689] under local_datetime; prior registration was null
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63cf9de0] under offset_datetime; prior registration was null
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:35:32,808 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:35:32,809 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:35:32,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@594d9f07] under instant; prior registration was null
2024-06-03 03:35:32,809 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:35:32,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2fd64b11] under sql; prior registration was null
2024-06-03 03:35:32,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:35:32,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:35:32,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:35:32,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@949c598] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3382cf68
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:35:32,810 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:35:32,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:35:32,812 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:35:32,813 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@314b9e4b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:35:32,813 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:35:32,813 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:35:32,813 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3a1706e1
2024-06-03 03:35:32,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3c6c4689
2024-06-03 03:35:32,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5de5e95] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:35:32,815 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:35:32,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@365cdacf] under bit_length; prior registration was null
2024-06-03 03:35:32,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@303c55fa] under octet_length; prior registration was null
2024-06-03 03:35:32,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:35:32,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:35:32,815 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9efcd90] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3df1a1ac
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7eb200ce] under bitand; prior registration was null
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under bitor; prior registration was null
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c2924d7] under bitxor; prior registration was null
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5de58f] under bitnot; prior registration was null
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:35:32,816 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6587305a] under median; prior registration was null
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:35:32,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:35:32,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:35:32,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:35:32,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:35:32,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:35:32,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:35:32,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:35:32,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:35:32,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:35:32,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:35:32,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:35:32,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f81621c] under insert; prior registration was null
2024-06-03 03:35:32,822 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@668625f5] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@49cb1baf
2024-06-03 03:35:32,822 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:35:32,822 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@19a20bb2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:35:32,823 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:35:32,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:35:32,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:35:32,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:35:32,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:35:32,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:35:32,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@663f237a] under listagg; prior registration was null
2024-06-03 03:35:32,829 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3667faa8] under array; prior registration was null
2024-06-03 03:35:32,829 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1756f7cc] under array_list; prior registration was null
2024-06-03 03:35:32,830 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2b0e9f30] under array_agg; prior registration was null
2024-06-03 03:35:32,833 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@7c1447b5] under array_position; prior registration was null
2024-06-03 03:35:32,840 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@4b960b5b] under array_positions; prior registration was null
2024-06-03 03:35:32,843 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12b5736c] under array_positions_list; prior registration was null
2024-06-03 03:35:32,843 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@539a138b] under array_length; prior registration was null
2024-06-03 03:35:32,844 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@42383cb0] under array_concat; prior registration was null
2024-06-03 03:35:32,846 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@d2e6b0b] under array_prepend; prior registration was null
2024-06-03 03:35:32,846 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1f1cddf3] under array_append; prior registration was null
2024-06-03 03:35:32,849 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3fd05b3e] under array_contains; prior registration was null
2024-06-03 03:35:32,849 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4eb9f2af] under array_contains_nullable; prior registration was null
2024-06-03 03:35:32,850 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2e32fc22] under array_overlaps; prior registration was null
2024-06-03 03:35:32,850 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3f5156a6] under array_overlaps_nullable; prior registration was null
2024-06-03 03:35:32,851 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@712c5463] under array_get; prior registration was null
2024-06-03 03:35:32,852 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@66de00f2] under array_set; prior registration was null
2024-06-03 03:35:32,852 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:35:32,852 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@ffd4cba] under array_remove_index; prior registration was null
2024-06-03 03:35:32,853 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f1483fd] under array_slice; prior registration was null
2024-06-03 03:35:32,853 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:35:32,853 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@670f2466] under array_trim; prior registration was null
2024-06-03 03:35:32,858 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@36c2d629] under array_fill; prior registration was null
2024-06-03 03:35:32,859 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55fee662] under array_fill_list; prior registration was null
2024-06-03 03:35:32,860 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@479111ba] under array_to_string; prior registration was null
2024-06-03 03:35:32,860 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:35:32,860 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:35:32,860 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:35:32,860 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:35:32,862 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5b5dce5c] under mode; prior registration was null
2024-06-03 03:35:32,862 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7f4701b1] under percentile_cont; prior registration was null
2024-06-03 03:35:32,862 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@adcfad9] under percentile_disc; prior registration was null
2024-06-03 03:35:32,863 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10c47c79] under rank; prior registration was null
2024-06-03 03:35:32,863 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b2553d9] under dense_rank; prior registration was null
2024-06-03 03:35:32,864 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@753fd7a1] under percent_rank; prior registration was null
2024-06-03 03:35:32,864 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@12a2585b] under cume_dist; prior registration was null
2024-06-03 03:35:32,865 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3bf54172] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:35:32,865 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2c9a6717] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:35:32,866 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3bb5ceb] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:35:32,868 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6d0be7ab] under trunc; prior registration was null
2024-06-03 03:35:32,868 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:35:32,868 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d4fb213] under date_trunc; prior registration was null
2024-06-03 03:35:32,875 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:35:32,876 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:35:32,877 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:35:32,878 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,879 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:35:32,880 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:35:32,881 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:35:32,881 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:35:32,881 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:35:32,881 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:35:32,881 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:35:32,881 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:35:32,881 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:35:32,881 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:35:32,882 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:35:32,883 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:35:32,884 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,885 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:35:32,886 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:35:32,887 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:35:32,887 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:35:32,887 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:35:32,888 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:35:32,889 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:35:32,889 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:35:32,889 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:35:32,890 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:35:32,890 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:35:32,890 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:35:32,890 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:35:32,891 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:35:32,891 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:35:32,891 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:35:32,900 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:35:33,051 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:35:33,054 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:35:33,166 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:35:33,166 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:35:33,526 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:35:33,559 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:35:33,559 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:35:33,595 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:35:33,596 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:35:33,596 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:35:33,631 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:35:33,632 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:35:33,632 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:35:33,652 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:35:33,655 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:35:33,655 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:35:33,676 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:35:33,715 DEBUG creation: Starting post-init callbacks
2024-06-03 03:35:33,715 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:35:33,716 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:35:33,716 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:35:33,716 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:35:33,716 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:35:33,835 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:35:33,840 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:35:33,862 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:35:33,866 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:35:33,878 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:35:33,878 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:35:33,878 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:35:33,878 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:35:33,878 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:35:33,878 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:35:33,878 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:35:33,879 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:35:33,879 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:35:33,879 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:35:33,879 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:35:33,879 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:35:33,879 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:35:33,879 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:35:33,879 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:35:33,879 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:35:33,880 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:35:33,880 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:35:33,880 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:35:33,880 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:35:33,880 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:35:33,880 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:35:33,880 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:35:33,880 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:35:33,880 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:35:33,880 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:35:33,881 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:35:33,881 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:35:33,881 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:35:33,881 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:35:33,881 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:35:33,881 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:35:33,931 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:35:33,932 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:35:33,936 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:35:33,936 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:35:33,939 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66bacdbc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b01c689]
2024-06-03 03:35:33,950 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:35:33,950 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:35:33,956 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:35:33,962 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:35:34,323 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:35:34,325 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:35:34,461 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:35:34,474 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:35:34,504 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:35:34,519 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:35:34,521 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:35:34,521 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:35:34,527 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66314fee
2024-06-03 03:35:34,527 DEBUG SessionFactoryRegistry: Registering SessionFactory: f0251257-4be0-4f09-89e3-e754e868fe82 (<unnamed>)
2024-06-03 03:35:34,527 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:35:34,527 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:35:34,599 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:35:34,599 DEBUG TransactionImpl: begin
2024-06-03 03:35:34,653 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:35:34,686 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1468241972 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:35:34,701 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:35:34,725 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:35:34,729 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 749515845
2024-06-03 03:35:34,730 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:35:34,730 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:35:34,730 DEBUG results: Extracted JDBC value [3] - [4577]
2024-06-03 03:35:34,730 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:35:34,744 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:35:34,744 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@87220f1
2024-06-03 03:35:34,747 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:35:34,749 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:35:34,752 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:35:34,767 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:35:34,767 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:35:34,771 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:35:34,775 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4577, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:35:34,776 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:35:34,777 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:35:34,778 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:35:34,778 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:35:34,778 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:35:34,778 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:35:34,778 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:35:34,778 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4577, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:35:34,778 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:35:34,779 DEBUG TransactionImpl: committing
2024-06-03 03:35:34,780 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:35:34,780 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:35:34,781 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:35:34,781 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:35:34,781 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:35:34,781 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4577, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:35:34,790 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:35:34,791 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:35:34,792 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:35:34,792 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:35:34,792 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:35:34,802 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:35:34,802 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:35:34,803 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:35:34,803 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=123, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:35:34,803 DEBUG DefaultDirtyCheckEventListener: Session dirty
2024-06-03 03:35:34,810 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-06-03 03:35:34,812 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@12421766] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2b01c689]
2024-06-03 03:35:34,813 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-06-03 03:35:34,813 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:35:34,816 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-06-03 03:44:32,097 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:44:32,158 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:44:32,174 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:44:32,436 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:44:32,442 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:44:32,574 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:44:32,599 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:44:33,282 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:44:33,306 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:44:33,332 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:44:33,344 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:44:33,344 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:44:33,346 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:44:33,346 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:44:33,347 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:44:33,352 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:44:33,354 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:44:33,358 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:44:33,359 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:44:33,360 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:44:33,361 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:44:33,363 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:44:33,390 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:44:33,393 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:44:33,728 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:44:33,728 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:44:33,729 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@66b72664
2024-06-03 03:44:33,729 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:44:33,729 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7a34b7b8
2024-06-03 03:44:33,729 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:44:33,730 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@58cd06cb
2024-06-03 03:44:33,730 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:44:33,730 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3be8821f
2024-06-03 03:44:33,730 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:44:33,731 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:44:33,732 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@64b31700
2024-06-03 03:44:33,732 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:44:33,732 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:44:33,733 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@3b65e559
2024-06-03 03:44:33,733 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@bae47a0
2024-06-03 03:44:33,733 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@bae47a0
2024-06-03 03:44:33,733 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@74a9c4b0
2024-06-03 03:44:33,733 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@85ec632
2024-06-03 03:44:33,734 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@85ec632
2024-06-03 03:44:33,734 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1c05a54d
2024-06-03 03:44:33,734 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@65ef722a
2024-06-03 03:44:33,735 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:44:33,735 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:44:33,735 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5fd9b663
2024-06-03 03:44:33,736 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:44:33,736 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:44:33,736 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@214894fc
2024-06-03 03:44:33,736 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:44:33,736 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:44:33,737 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:44:33,737 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:44:33,737 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:44:33,737 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:44:33,737 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:44:33,738 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:44:33,738 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:44:33,738 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:44:33,738 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:44:33,738 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:44:33,739 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:44:33,739 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:44:33,739 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:44:33,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:44:33,739 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:44:33,740 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:44:33,740 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:44:33,740 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:44:33,740 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:44:33,740 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:44:33,741 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:44:33,741 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:44:33,741 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:44:33,741 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:44:33,741 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:44:33,742 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:44:33,742 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:44:33,742 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:44:33,742 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:44:33,742 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:44:33,743 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:44:33,743 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:44:33,743 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:44:33,744 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:44:33,744 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:44:33,744 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:44:33,744 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:44:33,744 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:44:33,744 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:44:33,745 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:44:33,745 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:44:33,745 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:44:33,745 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:44:33,745 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:44:33,745 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:44:33,745 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:44:33,746 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:44:33,746 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:44:33,746 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:44:33,746 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:44:33,746 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:44:33,747 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:44:33,747 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:44:33,747 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:44:33,747 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:44:33,748 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:44:33,748 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:44:33,748 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:44:33,748 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:44:33,748 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:44:33,748 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:44:33,748 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:44:33,749 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:44:33,749 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:44:33,749 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:44:33,750 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:44:33,750 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:44:33,750 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:44:33,751 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:44:33,751 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:44:33,751 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:44:33,752 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:44:33,752 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:44:33,754 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:44:33,755 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:44:33,755 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:44:33,755 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:44:33,755 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:44:33,756 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:44:33,756 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:44:33,756 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:44:33,756 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:44:33,756 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:44:33,757 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:44:33,757 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:44:33,757 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:44:33,757 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:44:33,757 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:44:33,758 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:44:33,758 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:44:33,758 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:44:33,776 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@251ebf23
2024-06-03 03:44:33,777 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@251ebf23
2024-06-03 03:44:33,783 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@3c49fab6
2024-06-03 03:44:33,785 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@515f4131
2024-06-03 03:44:33,786 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@74518890
2024-06-03 03:44:33,787 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c5204af
2024-06-03 03:44:33,788 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3f3ddbd9
2024-06-03 03:44:33,788 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@14c053c6
2024-06-03 03:44:33,789 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6c2d4cc6
2024-06-03 03:44:33,789 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@30865a90
2024-06-03 03:44:33,789 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6134ac4a
2024-06-03 03:44:33,895 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:44:33,911 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:44:33,911 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:44:33,911 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:44:33,912 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:44:33,922 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:44:33,922 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:44:34,578 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:44:34,579 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:44:34,580 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:44:34,801 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:44:34,832 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:44:34,876 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:44:34,916 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7baf6acf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1e6dad8)
2024-06-03 03:44:34,916 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3315a5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8ed9cf)
2024-06-03 03:44:34,927 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:44:34,928 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:44:34,963 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@59532566
2024-06-03 03:44:34,963 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@59532566
2024-06-03 03:44:34,963 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@251ebf23`
2024-06-03 03:44:34,978 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:44:34,978 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:44:34,979 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:44:34,993 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:44:34,993 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:44:34,994 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:44:34,994 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:44:34,994 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:44:34,994 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:44:34,998 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:44:34,998 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:44:34,998 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:44:35,006 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c6ee758] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@640dc4c6]
2024-06-03 03:44:35,156 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:44:35,279 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:44:35,320 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:44:35,343 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:44:35,372 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:44:35,432 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,435 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:44:35,435 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:44:35,443 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:44:35,456 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:44:35,463 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:44:35,474 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:44:35,475 DEBUG PropertyBinder: Building property id
2024-06-03 03:44:35,486 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:44:35,489 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,490 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:44:35,490 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:44:35,490 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:44:35,490 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:44:35,490 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:44:35,492 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,492 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:44:35,493 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:44:35,493 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:44:35,493 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:44:35,493 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:44:35,495 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,495 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:44:35,496 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:44:35,496 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:44:35,496 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:44:35,496 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:44:35,497 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,500 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:44:35,500 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:44:35,501 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:44:35,502 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:44:35,504 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:44:35,505 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,506 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:44:35,506 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:44:35,506 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:44:35,506 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:44:35,507 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:44:35,509 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:44:35,531 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:44:35,534 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:44:35,535 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:44:35,536 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:44:35,540 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,540 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:44:35,541 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:44:35,576 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:44:35,576 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:44:35,577 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:44:35,577 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:44:35,577 DEBUG PropertyBinder: Building property id
2024-06-03 03:44:35,578 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:44:35,578 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,579 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:44:35,579 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:44:35,579 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:44:35,580 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:44:35,580 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:44:35,580 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,581 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:44:35,581 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:44:35,581 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:44:35,581 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:44:35,582 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:44:35,585 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,587 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:44:35,588 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:44:35,589 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:44:35,589 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:44:35,589 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:44:35,590 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,590 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:44:35,590 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:44:35,590 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:44:35,591 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:44:35,591 DEBUG PropertyBinder: Building property questId
2024-06-03 03:44:35,591 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,592 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:44:35,592 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:44:35,592 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:44:35,592 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:44:35,592 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:44:35,593 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:44:35,595 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:44:35,615 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:44:35,619 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:44:35,620 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:44:35,621 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:44:35,630 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,630 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:44:35,630 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:44:35,630 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:44:35,630 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:44:35,630 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:44:35,631 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:44:35,631 DEBUG PropertyBinder: Building property id
2024-06-03 03:44:35,631 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:44:35,632 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,633 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:44:35,633 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:44:35,633 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:44:35,634 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:44:35,634 DEBUG PropertyBinder: Building property description
2024-06-03 03:44:35,636 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:44:35,636 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:44:35,637 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:44:35,637 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:44:35,637 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:44:35,637 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:44:35,638 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,638 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:44:35,638 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:44:35,639 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:44:35,639 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:44:35,639 DEBUG PropertyBinder: Building property name
2024-06-03 03:44:35,640 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:44:35,640 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:44:35,640 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:44:35,640 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:44:35,641 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:44:35,641 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:44:35,642 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:44:35,644 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:44:35,645 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:44:35,645 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:44:35,646 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:44:35,648 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,648 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:44:35,648 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:44:35,648 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:44:35,649 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:44:35,649 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:44:35,650 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:44:35,651 DEBUG PropertyBinder: Building property id
2024-06-03 03:44:35,652 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:44:35,653 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,654 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:44:35,654 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:44:35,655 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:44:35,655 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:44:35,655 DEBUG PropertyBinder: Building property questId
2024-06-03 03:44:35,655 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,656 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:44:35,656 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:44:35,656 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:44:35,656 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:44:35,656 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:44:35,657 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:44:35,658 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:44:35,659 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:44:35,659 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:44:35,660 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:44:35,664 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,664 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:44:35,664 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:44:35,664 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:44:35,664 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:44:35,665 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:44:35,665 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:44:35,666 DEBUG PropertyBinder: Building property id
2024-06-03 03:44:35,667 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:44:35,668 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,668 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:44:35,669 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:44:35,669 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:44:35,669 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:44:35,669 DEBUG PropertyBinder: Building property login
2024-06-03 03:44:35,670 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,670 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:44:35,670 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:44:35,671 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:44:35,671 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:44:35,671 DEBUG PropertyBinder: Building property name
2024-06-03 03:44:35,672 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,672 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:44:35,672 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:44:35,672 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:44:35,673 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:44:35,673 DEBUG PropertyBinder: Building property password
2024-06-03 03:44:35,673 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:44:35,674 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:44:35,674 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:44:35,674 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:44:35,674 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:44:35,675 DEBUG PropertyBinder: Building property role
2024-06-03 03:44:35,675 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:44:35,679 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:44:35,689 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:44:35,689 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:44:35,690 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:44:35,694 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:44:35,695 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:44:35,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:44:35,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:44:35,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:44:35,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:44:35,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:44:35,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:44:35,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:44:35,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:44:35,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:44:35,698 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:44:35,698 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:44:35,698 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:44:35,698 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:44:35,698 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:44:35,699 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:44:35,699 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:44:35,699 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:44:35,699 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:44:35,699 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:44:35,710 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:44:35,711 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:44:35,711 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:44:35,711 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:44:35,711 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:44:35,815 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:44:36,209 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:44:36,340 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:44:36,341 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@280d4882, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:44:36,354 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:44:36,370 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:44:36,475 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:44:36,476 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:44:36,477 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:44:36,478 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:44:36,480 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@724aefc3] under count; prior registration was null
2024-06-03 03:44:36,488 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1a47a1e8] under every; prior registration was null
2024-06-03 03:44:36,488 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6d2a2560] under any; prior registration was null
2024-06-03 03:44:36,490 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:44:36,491 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:44:36,491 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:44:36,491 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:44:36,491 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:44:36,491 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:44:36,492 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:44:36,492 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:44:36,492 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:44:36,495 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:44:36,495 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:44:36,495 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:44:36,495 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:44:36,495 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:44:36,495 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:44:36,496 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:44:36,496 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:44:36,499 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b] under sinh; prior registration was null
2024-06-03 03:44:36,499 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1] under cosh; prior registration was null
2024-06-03 03:44:36,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173] under tanh; prior registration was null
2024-06-03 03:44:36,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8] under pi; prior registration was null
2024-06-03 03:44:36,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c413ffc] under log; prior registration was null
2024-06-03 03:44:36,501 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:44:36,501 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:44:36,501 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:44:36,502 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:44:36,502 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:44:36,503 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:44:36,504 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:44:36,504 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:44:36,504 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:44:36,504 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:44:36,504 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:44:36,504 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:44:36,507 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@58606c91] under position; prior registration was null
2024-06-03 03:44:36,511 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3664f108] under overlay; prior registration was null
2024-06-03 03:44:36,512 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3458eca5] under trim; prior registration was null
2024-06-03 03:44:36,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2c991465] under cast; prior registration was null
2024-06-03 03:44:36,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fef2aac] under collate; prior registration was null
2024-06-03 03:44:36,519 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3451f01d] under extract; prior registration was null
2024-06-03 03:44:36,519 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:44:36,519 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:44:36,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5d342959] under ifnull; prior registration was null
2024-06-03 03:44:36,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:44:36,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:44:36,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3e4e8fdf] under pad; prior registration was null
2024-06-03 03:44:36,522 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6aa7b67f] under str; prior registration was null
2024-06-03 03:44:36,525 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@655f69da] under format; prior registration was null
2024-06-03 03:44:36,526 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2e86807a] under timestampadd; prior registration was null
2024-06-03 03:44:36,528 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@40d23c82] under timestampdiff; prior registration was null
2024-06-03 03:44:36,528 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:44:36,528 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6badba10] under current_date; prior registration was null
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b7e8044] under current_time; prior registration was null
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550de6b8] under current_timestamp; prior registration was null
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a1706e1] under local_date; prior registration was null
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c6c4689] under local_time; prior registration was null
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63cf9de0] under local_datetime; prior registration was null
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@594d9f07] under offset_datetime; prior registration was null
2024-06-03 03:44:36,529 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:44:36,530 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:44:36,530 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:44:36,530 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:44:36,530 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5befbac1] under instant; prior registration was null
2024-06-03 03:44:36,530 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:44:36,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@949c598] under sql; prior registration was null
2024-06-03 03:44:36,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:44:36,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:44:36,532 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:44:36,532 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c413ffc
2024-06-03 03:44:36,532 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43d3aba5] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:44:36,533 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:44:36,534 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e26173
2024-06-03 03:44:36,535 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f74900b
2024-06-03 03:44:36,535 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8796c1
2024-06-03 03:44:36,535 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:44:36,535 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:44:36,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:44:36,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:44:36,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27be17c8
2024-06-03 03:44:36,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:44:36,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:44:36,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:44:36,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:44:36,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:44:36,537 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:44:36,537 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:44:36,537 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:44:36,537 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:44:36,537 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:44:36,537 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:44:36,537 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:44:36,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6f1b8544] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:44:36,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:44:36,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:44:36,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3c6c4689
2024-06-03 03:44:36,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@63cf9de0
2024-06-03 03:44:36,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@365cdacf] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:44:36,540 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:44:36,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@303c55fa] under bit_length; prior registration was null
2024-06-03 03:44:36,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@9efcd90] under octet_length; prior registration was null
2024-06-03 03:44:36,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:44:36,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:44:36,540 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7eb200ce] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@58606c91
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee83775] under bitand; prior registration was null
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c2924d7] under bitor; prior registration was null
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5de58f] under bitxor; prior registration was null
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6587305a] under bitnot; prior registration was null
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:44:36,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:44:36,542 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:44:36,542 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@abbe000] under median; prior registration was null
2024-06-03 03:44:36,542 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:44:36,542 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:44:36,542 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:44:36,542 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:44:36,542 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:44:36,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:44:36,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:44:36,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:44:36,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:44:36,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:44:36,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b9499fe] under insert; prior registration was null
2024-06-03 03:44:36,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@19a20bb2] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3664f108
2024-06-03 03:44:36,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:44:36,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@75babb67] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:44:36,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:44:36,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:44:36,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:44:36,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:44:36,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:44:36,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:44:36,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@5d7399f9] under listagg; prior registration was null
2024-06-03 03:44:36,555 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1756f7cc] under array; prior registration was null
2024-06-03 03:44:36,556 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3138953b] under array_list; prior registration was null
2024-06-03 03:44:36,557 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5eea5627] under array_agg; prior registration was null
2024-06-03 03:44:36,561 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@49e4c2d5] under array_position; prior registration was null
2024-06-03 03:44:36,579 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1b13467c] under array_positions; prior registration was null
2024-06-03 03:44:36,588 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@539a138b] under array_positions_list; prior registration was null
2024-06-03 03:44:36,589 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cd4e16a] under array_length; prior registration was null
2024-06-03 03:44:36,593 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7668892a] under array_concat; prior registration was null
2024-06-03 03:44:36,598 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1f1cddf3] under array_prepend; prior registration was null
2024-06-03 03:44:36,600 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@228bda54] under array_append; prior registration was null
2024-06-03 03:44:36,607 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4eb9f2af] under array_contains; prior registration was null
2024-06-03 03:44:36,607 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4a481728] under array_contains_nullable; prior registration was null
2024-06-03 03:44:36,610 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3f5156a6] under array_overlaps; prior registration was null
2024-06-03 03:44:36,611 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@72bdd7c7] under array_overlaps_nullable; prior registration was null
2024-06-03 03:44:36,612 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d33a66e] under array_get; prior registration was null
2024-06-03 03:44:36,617 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6c479fdf] under array_set; prior registration was null
2024-06-03 03:44:36,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:44:36,621 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@5f1483fd] under array_remove_index; prior registration was null
2024-06-03 03:44:36,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@670f2466] under array_slice; prior registration was null
2024-06-03 03:44:36,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:44:36,622 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e03db1f] under array_trim; prior registration was null
2024-06-03 03:44:36,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@55fee662] under array_fill; prior registration was null
2024-06-03 03:44:36,625 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@54089484] under array_fill_list; prior registration was null
2024-06-03 03:44:36,626 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@57ad1178] under array_to_string; prior registration was null
2024-06-03 03:44:36,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:44:36,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:44:36,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:44:36,627 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:44:36,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7f4701b1] under mode; prior registration was null
2024-06-03 03:44:36,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@adcfad9] under percentile_cont; prior registration was null
2024-06-03 03:44:36,629 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@fb49fdf] under percentile_disc; prior registration was null
2024-06-03 03:44:36,631 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b2553d9] under rank; prior registration was null
2024-06-03 03:44:36,631 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@753fd7a1] under dense_rank; prior registration was null
2024-06-03 03:44:36,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@12a2585b] under percent_rank; prior registration was null
2024-06-03 03:44:36,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@21b6c9c2] under cume_dist; prior registration was null
2024-06-03 03:44:36,635 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2c9a6717] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:44:36,636 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@7b3cde6f] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:44:36,637 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@1e692555] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:44:36,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@1d4fb213] under trunc; prior registration was null
2024-06-03 03:44:36,644 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:44:36,644 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ef60295] under date_trunc; prior registration was null
2024-06-03 03:44:36,657 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:44:36,658 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:44:36,658 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:44:36,658 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:44:36,659 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:44:36,660 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:44:36,660 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:44:36,660 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:44:36,660 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:44:36,660 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:44:36,661 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:44:36,662 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:44:36,662 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:44:36,662 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:44:36,662 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:44:36,662 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:44:36,662 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,662 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:44:36,663 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:44:36,664 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:44:36,665 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:44:36,665 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:44:36,665 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,665 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,665 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:44:36,665 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:44:36,666 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:44:36,666 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:44:36,666 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:44:36,666 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:44:36,666 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:44:36,666 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:44:36,666 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:44:36,667 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:44:36,669 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:44:36,670 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:44:36,670 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:44:36,670 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:44:36,671 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:44:36,671 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:44:36,671 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:44:36,671 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:44:36,672 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:44:36,672 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:44:36,672 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:44:36,672 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:44:36,672 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:44:36,672 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:44:36,673 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:44:36,673 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:44:36,673 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:44:36,673 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:44:36,673 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:44:36,674 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:44:36,674 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:44:36,675 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:44:36,676 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:44:36,676 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:44:36,676 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:44:36,676 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:44:36,676 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:44:36,677 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:44:36,677 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:44:36,677 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:44:36,677 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:44:36,677 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:44:36,677 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:44:36,677 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:44:36,678 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:44:36,679 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:44:36,680 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:44:36,681 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:44:36,681 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:44:36,681 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:44:36,682 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:44:36,682 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:44:36,682 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:44:36,682 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:44:36,682 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:44:36,682 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:44:36,682 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:44:36,682 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:44:36,683 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:44:36,683 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:44:36,683 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:44:36,683 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:44:36,683 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:44:36,683 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:44:36,684 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:44:36,684 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:44:36,684 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:44:36,684 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:44:36,692 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:44:36,842 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:44:36,844 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:44:36,978 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:44:36,979 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:44:37,387 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:44:37,427 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:44:37,427 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:44:37,462 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:44:37,463 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:44:37,463 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:44:37,496 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:44:37,497 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:44:37,498 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:44:37,522 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:44:37,523 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:44:37,523 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:44:37,543 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:44:37,596 DEBUG creation: Starting post-init callbacks
2024-06-03 03:44:37,596 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:44:37,596 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:44:37,596 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:44:37,596 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:44:37,596 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:44:37,702 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:44:37,706 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:44:37,728 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:44:37,734 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:44:37,748 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:44:37,748 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:44:37,748 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:44:37,748 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:44:37,748 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:44:37,748 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:44:37,748 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:44:37,749 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:44:37,749 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:44:37,750 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:44:37,750 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:44:37,750 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:44:37,750 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:44:37,750 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:44:37,750 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:44:37,750 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:44:37,750 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:44:37,750 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:44:37,750 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:44:37,751 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:44:37,751 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:44:37,751 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:44:37,751 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:44:37,751 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:44:37,751 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:44:37,752 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:44:37,752 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:44:37,752 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:44:37,752 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:44:37,752 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:44:37,752 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:44:37,752 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:44:37,752 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:44:37,790 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:44:37,791 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:44:37,795 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:44:37,795 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:44:37,796 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c6ee758] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4628a02b]
2024-06-03 03:44:37,816 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:44:37,816 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:44:37,822 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:44:37,829 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:44:38,259 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:44:38,260 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:44:38,369 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:44:38,382 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:44:38,404 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:44:38,427 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:44:38,428 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:44:38,428 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:44:38,433 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@41f7c02d
2024-06-03 03:44:38,433 DEBUG SessionFactoryRegistry: Registering SessionFactory: 29b097c7-3853-4718-b273-68e322b4a1c8 (<unnamed>)
2024-06-03 03:44:38,433 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:44:38,433 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:44:38,520 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:44:38,521 DEBUG TransactionImpl: begin
2024-06-03 03:44:38,557 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:44:38,596 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@884858691 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:44:38,609 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:44:38,624 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:44:38,627 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 447059608
2024-06-03 03:44:38,628 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:44:38,628 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:44:38,628 DEBUG results: Extracted JDBC value [3] - [4577]
2024-06-03 03:44:38,628 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:44:38,637 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:44:38,637 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@86377d5
2024-06-03 03:44:38,642 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:44:38,644 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:44:38,648 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:44:38,661 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:44:38,662 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:44:38,665 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:44:38,667 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4577, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:44:38,668 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:44:38,669 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:44:38,669 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:44:38,669 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:44:38,675 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:44:38,675 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:44:38,675 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:44:38,675 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4fggh77, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:44:38,675 DEBUG DefaultDirtyCheckEventListener: Session dirty
2024-06-03 03:44:38,676 DEBUG TransactionImpl: committing
2024-06-03 03:44:38,676 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:44:38,676 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:44:38,676 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:44:38,677 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:44:38,677 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:44:38,677 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4fggh77, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:44:38,693 DEBUG SQL: 
    update
        users 
    set
        login=?,
        name=?,
        password=?,
        role=? 
    where
        id=?
2024-06-03 03:44:38,862 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:44:38,863 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:44:38,865 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:44:38,865 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:44:38,865 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:44:38,867 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:44:38,868 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:44:38,868 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:44:38,868 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=1ghgh23, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:44:38,868 DEBUG DefaultDirtyCheckEventListener: Session dirty
2024-06-03 03:44:38,874 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-06-03 03:44:38,875 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2e8986b6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4628a02b]
2024-06-03 03:44:38,875 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-06-03 03:44:38,876 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:44:38,877 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-06-03 03:45:12,792 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:45:12,817 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:45:12,826 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:45:12,938 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:45:12,940 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:45:12,998 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:45:13,011 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:45:13,359 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:45:13,371 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:45:13,387 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:45:13,395 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:45:13,395 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:45:13,396 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:45:13,397 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:45:13,397 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:45:13,398 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:45:13,399 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:45:13,401 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:45:13,403 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:45:13,404 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:45:13,404 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:45:13,406 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:45:13,422 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:45:13,424 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:45:13,686 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:45:13,686 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:45:13,686 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:45:13,686 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:45:13,686 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:45:13,686 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:45:13,687 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:45:13,688 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:45:13,688 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:45:13,688 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:45:13,688 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:45:13,688 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:45:13,688 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:45:13,688 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:45:13,688 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:45:13,689 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:45:13,689 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:45:13,689 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:45:13,689 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:45:13,689 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:45:13,689 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:45:13,689 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:45:13,689 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:45:13,690 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:45:13,690 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:45:13,690 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:45:13,690 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:45:13,690 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:45:13,690 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:45:13,690 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:45:13,690 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:45:13,691 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:45:13,691 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:45:13,691 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:45:13,691 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:45:13,691 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:45:13,691 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:45:13,691 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:45:13,691 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:45:13,692 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:45:13,693 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:45:13,693 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:45:13,693 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:45:13,693 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:45:13,693 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:45:13,693 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:45:13,693 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:45:13,694 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:45:13,694 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:45:13,694 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:45:13,694 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:45:13,694 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:45:13,694 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:45:13,694 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:45:13,695 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:45:13,695 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:45:13,695 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:45:13,695 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:45:13,695 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:45:13,695 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:45:13,695 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:45:13,696 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:45:13,696 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:45:13,696 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:45:13,696 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:45:13,696 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:45:13,696 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:45:13,696 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:45:13,696 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:45:13,697 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:45:13,697 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:45:13,697 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:45:13,697 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:45:13,697 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:45:13,697 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:45:13,697 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:45:13,697 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:45:13,698 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:45:13,699 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:45:13,699 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:45:13,699 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:45:13,699 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:45:13,699 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:45:13,699 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:45:13,700 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:45:13,701 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1db0ec27
2024-06-03 03:45:13,711 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@74518890
2024-06-03 03:45:13,712 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@74518890
2024-06-03 03:45:13,713 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@2472c7d8
2024-06-03 03:45:13,714 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:45:13,714 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:45:13,714 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:45:13,714 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:45:13,714 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:45:13,715 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:45:13,715 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:45:13,715 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@63034ed1
2024-06-03 03:45:13,758 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:45:13,764 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:45:13,764 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:45:13,764 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:45:13,764 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:45:13,768 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:45:13,768 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:45:14,129 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:45:14,129 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:45:14,130 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:45:14,222 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:45:14,236 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:45:14,256 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:45:14,270 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2bc9a775)
2024-06-03 03:45:14,271 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27b000f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42f9c19a)
2024-06-03 03:45:14,274 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:45:14,274 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:45:14,286 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5b4d25e7
2024-06-03 03:45:14,286 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b4d25e7
2024-06-03 03:45:14,287 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@74518890`
2024-06-03 03:45:14,294 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:45:14,294 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:45:14,294 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:45:14,299 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:45:14,299 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:45:14,299 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:45:14,299 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:45:14,300 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:45:14,300 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:45:14,303 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:45:14,303 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:45:14,303 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:45:14,306 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f387978] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cb2651f]
2024-06-03 03:45:14,365 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:45:14,409 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:45:14,422 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:45:14,434 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:45:14,451 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:45:14,481 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,483 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:45:14,483 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:45:14,488 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:45:14,496 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:45:14,501 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:45:14,508 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:45:14,511 DEBUG PropertyBinder: Building property id
2024-06-03 03:45:14,518 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:45:14,520 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,520 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:45:14,520 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:45:14,520 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:45:14,520 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:45:14,520 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:45:14,522 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,522 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:45:14,522 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:45:14,522 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:45:14,522 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:45:14,522 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:45:14,523 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,523 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:45:14,523 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:45:14,523 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:45:14,523 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:45:14,523 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:45:14,523 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,524 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:45:14,524 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:45:14,524 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:45:14,524 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:45:14,524 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:45:14,524 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,524 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:45:14,524 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:45:14,524 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:45:14,525 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:45:14,525 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:45:14,526 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:45:14,533 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:45:14,534 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:45:14,534 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:45:14,534 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:45:14,537 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,537 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:45:14,537 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:45:14,558 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:45:14,558 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:45:14,558 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:45:14,558 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:45:14,558 DEBUG PropertyBinder: Building property id
2024-06-03 03:45:14,559 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:45:14,559 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,559 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:45:14,559 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:45:14,559 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:45:14,560 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:45:14,560 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:45:14,560 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,560 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:45:14,560 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:45:14,560 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:45:14,560 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:45:14,560 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:45:14,561 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,561 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:45:14,561 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:45:14,561 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:45:14,561 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:45:14,561 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:45:14,561 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,562 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:45:14,562 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:45:14,562 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:45:14,562 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:45:14,562 DEBUG PropertyBinder: Building property questId
2024-06-03 03:45:14,562 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,562 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:45:14,563 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:45:14,563 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:45:14,563 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:45:14,563 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:45:14,563 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:45:14,564 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:45:14,575 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:45:14,576 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:45:14,576 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:45:14,576 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:45:14,582 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,582 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:45:14,582 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:45:14,582 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:45:14,582 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:45:14,583 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:45:14,583 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:45:14,583 DEBUG PropertyBinder: Building property id
2024-06-03 03:45:14,583 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:45:14,583 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,583 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:45:14,583 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:45:14,583 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:45:14,584 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:45:14,584 DEBUG PropertyBinder: Building property description
2024-06-03 03:45:14,584 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:45:14,584 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:45:14,585 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:45:14,585 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:45:14,585 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:45:14,585 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:45:14,585 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,585 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:45:14,585 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:45:14,585 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:45:14,586 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:45:14,586 DEBUG PropertyBinder: Building property name
2024-06-03 03:45:14,587 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:45:14,587 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:45:14,587 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:45:14,587 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:45:14,587 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:45:14,588 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:45:14,588 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:45:14,589 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:45:14,589 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:45:14,590 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:45:14,590 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:45:14,592 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,593 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:45:14,593 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:45:14,593 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:45:14,593 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:45:14,593 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:45:14,593 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:45:14,593 DEBUG PropertyBinder: Building property id
2024-06-03 03:45:14,593 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:45:14,594 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,594 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:45:14,594 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:45:14,594 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:45:14,594 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:45:14,594 DEBUG PropertyBinder: Building property questId
2024-06-03 03:45:14,595 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,595 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:45:14,595 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:45:14,595 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:45:14,595 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:45:14,595 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:45:14,596 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:45:14,596 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:45:14,597 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:45:14,597 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:45:14,597 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:45:14,600 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,601 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:45:14,601 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:45:14,601 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:45:14,601 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:45:14,601 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:45:14,601 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:45:14,601 DEBUG PropertyBinder: Building property id
2024-06-03 03:45:14,602 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:45:14,602 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,602 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:45:14,602 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:45:14,602 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:45:14,603 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:45:14,603 DEBUG PropertyBinder: Building property login
2024-06-03 03:45:14,603 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,603 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:45:14,603 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:45:14,603 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:45:14,603 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:45:14,603 DEBUG PropertyBinder: Building property name
2024-06-03 03:45:14,604 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,604 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:45:14,604 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:45:14,604 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:45:14,604 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:45:14,604 DEBUG PropertyBinder: Building property password
2024-06-03 03:45:14,604 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:45:14,605 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:45:14,605 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:45:14,605 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:45:14,605 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:45:14,605 DEBUG PropertyBinder: Building property role
2024-06-03 03:45:14,605 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:45:14,607 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:45:14,610 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:45:14,610 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:45:14,610 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:45:14,613 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:45:14,613 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:45:14,614 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:45:14,615 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:45:14,615 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:45:14,615 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:45:14,615 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:45:14,615 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:45:14,615 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:45:14,615 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:45:14,615 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:45:14,619 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:45:14,620 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:45:14,620 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:45:14,620 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:45:14,620 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:45:14,678 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:45:14,926 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:45:14,979 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:45:14,979 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@516462cc, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:45:14,986 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:45:14,994 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:45:15,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:45:15,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:45:15,055 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:45:15,056 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:45:15,057 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@18539cb1] under count; prior registration was null
2024-06-03 03:45:15,059 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under every; prior registration was null
2024-06-03 03:45:15,059 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4aa11206] under any; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:45:15,060 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:45:15,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:45:15,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:45:15,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:45:15,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:45:15,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:45:15,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:45:15,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:45:15,061 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:45:15,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under sinh; prior registration was null
2024-06-03 03:45:15,063 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under cosh; prior registration was null
2024-06-03 03:45:15,064 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under tanh; prior registration was null
2024-06-03 03:45:15,064 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under pi; prior registration was null
2024-06-03 03:45:15,064 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7be2f29a] under log; prior registration was null
2024-06-03 03:45:15,064 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:45:15,064 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:45:15,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:45:15,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:45:15,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:45:15,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:45:15,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:45:15,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:45:15,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:45:15,065 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:45:15,066 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:45:15,066 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:45:15,068 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2525a5b8] under position; prior registration was null
2024-06-03 03:45:15,070 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f973a14] under overlay; prior registration was null
2024-06-03 03:45:15,071 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@72503b19] under trim; prior registration was null
2024-06-03 03:45:15,072 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3e4e8fdf] under cast; prior registration was null
2024-06-03 03:45:15,072 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d6ef2] under collate; prior registration was null
2024-06-03 03:45:15,073 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6bcc3f27] under extract; prior registration was null
2024-06-03 03:45:15,073 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:45:15,073 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:45:15,074 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6bee793f] under ifnull; prior registration was null
2024-06-03 03:45:15,074 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:45:15,074 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:45:15,074 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@30893e08] under pad; prior registration was null
2024-06-03 03:45:15,075 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@208f0007] under str; prior registration was null
2024-06-03 03:45:15,076 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@ebe067d] under format; prior registration was null
2024-06-03 03:45:15,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@550de6b8] under timestampadd; prior registration was null
2024-06-03 03:45:15,077 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1a565afb] under timestampdiff; prior registration was null
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_date; prior registration was null
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_time; prior registration was null
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under current_timestamp; prior registration was null
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_date; prior registration was null
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_time; prior registration was null
2024-06-03 03:45:15,078 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under local_datetime; prior registration was null
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under offset_datetime; prior registration was null
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@365cdacf] under instant; prior registration was null
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2ee83775] under sql; prior registration was null
2024-06-03 03:45:15,079 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7be2f29a
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c2924d7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:45:15,080 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:45:15,081 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:45:15,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:45:15,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:45:15,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:45:15,082 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@3f81621c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:45:15,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:45:15,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:45:15,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:45:15,083 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@688a2c09
2024-06-03 03:45:15,084 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under bit_length; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@75babb67] under octet_length; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2525a5b8
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitand; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitor; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitxor; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under bitnot; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:45:15,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@663f237a] under median; prior registration was null
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:45:15,086 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:45:15,087 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:45:15,087 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:45:15,087 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:45:15,087 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:45:15,087 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:45:15,087 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:45:15,087 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:45:15,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:45:15,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:45:15,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:45:15,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:45:15,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:45:15,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:45:15,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:45:15,088 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49a6f486] under insert; prior registration was null
2024-06-03 03:45:15,089 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f973a14
2024-06-03 03:45:15,089 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:45:15,089 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4f2d995e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:45:15,089 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:45:15,089 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:45:15,089 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:45:15,090 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:45:15,090 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:45:15,090 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:45:15,090 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1756f7cc] under listagg; prior registration was null
2024-06-03 03:45:15,092 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array; prior registration was null
2024-06-03 03:45:15,092 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@d535a3d] under array_list; prior registration was null
2024-06-03 03:45:15,093 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4a2e7bcb] under array_agg; prior registration was null
2024-06-03 03:45:15,095 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@939ff41] under array_position; prior registration was null
2024-06-03 03:45:15,100 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@539a138b] under array_positions; prior registration was null
2024-06-03 03:45:15,103 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7e83992] under array_positions_list; prior registration was null
2024-06-03 03:45:15,103 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4364863] under array_length; prior registration was null
2024-06-03 03:45:15,104 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@b3e86d5] under array_concat; prior registration was null
2024-06-03 03:45:15,105 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_prepend; prior registration was null
2024-06-03 03:45:15,105 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7affc159] under array_append; prior registration was null
2024-06-03 03:45:15,108 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains; prior registration was null
2024-06-03 03:45:15,108 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@44fdce3c] under array_contains_nullable; prior registration was null
2024-06-03 03:45:15,109 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps; prior registration was null
2024-06-03 03:45:15,109 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5f1483fd] under array_overlaps_nullable; prior registration was null
2024-06-03 03:45:15,110 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@708eb310] under array_get; prior registration was null
2024-06-03 03:45:15,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6c8dbf56] under array_set; prior registration was null
2024-06-03 03:45:15,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:45:15,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@54089484] under array_remove_index; prior registration was null
2024-06-03 03:45:15,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_slice; prior registration was null
2024-06-03 03:45:15,111 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:45:15,112 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65fe2691] under array_trim; prior registration was null
2024-06-03 03:45:15,113 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill; prior registration was null
2024-06-03 03:45:15,113 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3a2e9f5b] under array_fill_list; prior registration was null
2024-06-03 03:45:15,113 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@753fd7a1] under array_to_string; prior registration was null
2024-06-03 03:45:15,114 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:45:15,114 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:45:15,114 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:45:15,114 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:45:15,115 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under mode; prior registration was null
2024-06-03 03:45:15,116 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_cont; prior registration was null
2024-06-03 03:45:15,116 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6d091cad] under percentile_disc; prior registration was null
2024-06-03 03:45:15,116 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under rank; prior registration was null
2024-06-03 03:45:15,116 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under dense_rank; prior registration was null
2024-06-03 03:45:15,116 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under percent_rank; prior registration was null
2024-06-03 03:45:15,117 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@786ff1cb] under cume_dist; prior registration was null
2024-06-03 03:45:15,117 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:45:15,117 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@682af059] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:45:15,118 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@5584d9c6] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:45:15,120 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@71adfedd] under trunc; prior registration was null
2024-06-03 03:45:15,120 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:45:15,120 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9301672] under date_trunc; prior registration was null
2024-06-03 03:45:15,126 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:45:15,126 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:45:15,126 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:45:15,126 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:45:15,127 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:45:15,128 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:45:15,129 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:45:15,130 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:45:15,131 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:45:15,132 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:45:15,133 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,134 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:45:15,135 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:45:15,136 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:45:15,137 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:45:15,147 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:45:15,248 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:45:15,249 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:45:15,338 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:45:15,338 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:45:15,655 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:45:15,692 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:45:15,692 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:45:15,722 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:45:15,723 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:45:15,723 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:45:15,760 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:45:15,762 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:45:15,762 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:45:15,782 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:45:15,784 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:45:15,784 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:45:15,806 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:45:15,840 DEBUG creation: Starting post-init callbacks
2024-06-03 03:45:15,840 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:45:15,841 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:45:15,841 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:45:15,841 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:45:15,841 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:45:15,971 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:45:15,975 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:45:16,001 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:45:16,004 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:45:16,017 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:45:16,017 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:45:16,017 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:45:16,017 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:45:16,017 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:45:16,018 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:45:16,018 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:45:16,018 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:45:16,018 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:45:16,018 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:45:16,019 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:45:16,019 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:45:16,019 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:45:16,019 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:45:16,019 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:45:16,019 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:45:16,019 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:45:16,019 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:45:16,020 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:45:16,020 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:45:16,020 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:45:16,020 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:45:16,020 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:45:16,020 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:45:16,020 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:45:16,021 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:45:16,021 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:45:16,022 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:45:16,022 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:45:16,022 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:45:16,022 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:45:16,022 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:45:16,022 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:45:16,022 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:45:16,023 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:45:16,023 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:45:16,023 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:45:16,023 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:45:16,023 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:45:16,023 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:45:16,024 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:45:16,069 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:45:16,069 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:45:16,074 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:45:16,075 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:45:16,076 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f387978] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@539fc5d1]
2024-06-03 03:45:16,089 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:45:16,089 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:45:16,095 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:45:16,101 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:45:16,426 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:45:16,428 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:45:16,543 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:45:16,555 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:45:16,580 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:45:16,594 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:45:16,595 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:45:16,595 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:45:16,599 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38ebc866
2024-06-03 03:45:16,599 DEBUG SessionFactoryRegistry: Registering SessionFactory: 59ef72af-6c37-4f02-9056-91845935d18d (<unnamed>)
2024-06-03 03:45:16,599 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:45:16,599 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:45:16,664 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:45:16,664 DEBUG TransactionImpl: begin
2024-06-03 03:45:16,705 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:45:16,734 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@2073830279 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:45:16,746 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:45:16,764 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:45:16,766 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 97224064
2024-06-03 03:45:16,767 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:45:16,768 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:45:16,768 DEBUG results: Extracted JDBC value [3] - [4fggh77]
2024-06-03 03:45:16,768 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:45:16,780 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:45:16,780 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@bb5f9d
2024-06-03 03:45:16,784 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:45:16,786 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:45:16,790 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:45:16,801 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:45:16,802 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:45:16,804 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:45:16,808 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=4fggh77, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:45:16,809 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:45:16,811 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:45:16,812 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:45:16,812 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:45:16,821 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:45:16,821 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:45:16,821 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:45:16,821 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=47, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:45:16,821 DEBUG DefaultDirtyCheckEventListener: Session dirty
2024-06-03 03:45:16,821 DEBUG TransactionImpl: committing
2024-06-03 03:45:16,822 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:45:16,822 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:45:16,823 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:45:16,823 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:45:16,823 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:45:16,823 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=47, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:45:16,842 DEBUG SQL: 
    update
        users 
    set
        login=?,
        name=?,
        password=?,
        role=? 
    where
        id=?
2024-06-03 03:45:17,009 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:45:17,011 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:46:05,386 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 03:46:05,409 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 03:46:05,417 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 03:46:05,518 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 03:46:05,521 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 03:46:05,577 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 03:46:05,588 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 03:46:05,941 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 03:46:05,954 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 03:46:05,971 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 03:46:05,980 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 03:46:05,981 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 03:46:05,983 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:46:05,983 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 03:46:05,984 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 03:46:05,985 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 03:46:05,986 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 03:46:05,988 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:46:05,989 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 03:46:05,990 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 03:46:05,990 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 03:46:05,992 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 03:46:06,009 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 03:46:06,010 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 03:46:06,236 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:46:06,236 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:46:06,236 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10567255
2024-06-03 03:46:06,236 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@e362c57
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1c4ee95c
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79c4715d
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5aa360ea
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:46:06,237 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@6548bb7d
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e27ba81
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@54336c81
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1556f2dd
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@35e52059
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@62577d6
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:46:06,238 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@49bd54f7
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6b5f8707
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@772485dd
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a12c728
2024-06-03 03:46:06,239 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@79ab3a71
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6e5bfdfc
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3d829787
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71652c98
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@51bde877
2024-06-03 03:46:06,240 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@60b85ba1
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@492fc69e
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@117632cf
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2fb68ec6
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@d71adc2
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3add81c4
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1a1d3c1a
2024-06-03 03:46:06,241 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:46:06,242 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c65121
2024-06-03 03:46:06,242 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@159e366
2024-06-03 03:46:06,242 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@57dc9128
2024-06-03 03:46:06,242 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@24528a25
2024-06-03 03:46:06,242 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@17ae98d7
2024-06-03 03:46:06,242 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@59221b97
2024-06-03 03:46:06,242 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6ac4944a
2024-06-03 03:46:06,242 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5a772895
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@39fc6b2c
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@704b2127
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3ee39da0
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d332969
2024-06-03 03:46:06,243 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7cc9ce8
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e27d72f
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@c0b41d6
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4837595f
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2bffa76d
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b718392
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6d2260db
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f2d2181
2024-06-03 03:46:06,244 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49bf29c6
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7ee55e70
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3fcdcf
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7668d560
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@46292372
2024-06-03 03:46:06,245 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@126be319
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6c44052e
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5c371e13
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@530a8454
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e34c607
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5215cd9a
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:46:06,246 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@36b6964d
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@31198ceb
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@9257031
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@75201592
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7726e185
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aa5455e
2024-06-03 03:46:06,247 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:46:06,248 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@282308c3
2024-06-03 03:46:06,248 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@5dda14d0
2024-06-03 03:46:06,248 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1db0ec27
2024-06-03 03:46:06,256 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@74518890
2024-06-03 03:46:06,256 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@74518890
2024-06-03 03:46:06,257 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@2472c7d8
2024-06-03 03:46:06,258 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@589b028e
2024-06-03 03:46:06,258 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@22175d4f
2024-06-03 03:46:06,258 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9fecdf1
2024-06-03 03:46:06,258 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3b809711
2024-06-03 03:46:06,258 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b0f7d9d
2024-06-03 03:46:06,258 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@236ab296
2024-06-03 03:46:06,258 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5c84624f
2024-06-03 03:46:06,258 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@63034ed1
2024-06-03 03:46:06,293 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 03:46:06,298 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 03:46:06,298 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:46:06,298 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 03:46:06,298 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 03:46:06,301 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 03:46:06,301 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 03:46:06,601 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 03:46:06,601 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 03:46:06,602 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 03:46:06,683 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 03:46:06,693 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 03:46:06,710 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 03:46:06,724 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@545e57d7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2bc9a775)
2024-06-03 03:46:06,725 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27b000f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42f9c19a)
2024-06-03 03:46:06,729 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 03:46:06,729 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 03:46:06,742 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5b4d25e7
2024-06-03 03:46:06,742 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b4d25e7
2024-06-03 03:46:06,742 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@74518890`
2024-06-03 03:46:06,748 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 03:46:06,748 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:46:06,748 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 03:46:06,754 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:46:06,754 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:46:06,754 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 03:46:06,754 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:46:06,755 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:46:06,755 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 03:46:06,756 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:46:06,756 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:46:06,756 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 03:46:06,759 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f387978] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7cb2651f]
2024-06-03 03:46:06,819 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 03:46:06,864 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 03:46:06,878 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 03:46:06,890 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 03:46:06,905 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:46:06,938 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:06,939 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:46:06,939 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:46:06,944 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:46:06,950 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 03:46:06,956 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:46:06,961 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 03:46:06,962 DEBUG PropertyBinder: Building property id
2024-06-03 03:46:06,969 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:46:06,971 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:06,972 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 03:46:06,972 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 03:46:06,972 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 03:46:06,972 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 03:46:06,972 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 03:46:06,973 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:06,973 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 03:46:06,973 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 03:46:06,973 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 03:46:06,973 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 03:46:06,974 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 03:46:06,974 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:06,974 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:46:06,974 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 03:46:06,974 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:46:06,975 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 03:46:06,975 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:46:06,975 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:06,975 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 03:46:06,975 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 03:46:06,975 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 03:46:06,975 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 03:46:06,976 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 03:46:06,976 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:06,976 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 03:46:06,976 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 03:46:06,976 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 03:46:06,976 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 03:46:06,976 DEBUG PropertyBinder: Building property questionId
2024-06-03 03:46:06,978 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:46:06,986 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 03:46:06,986 DEBUG EntityBinder: Import with entity name Game
2024-06-03 03:46:06,987 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 03:46:06,987 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:46:06,989 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:06,989 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:46:06,989 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:46:07,015 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:46:07,015 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 03:46:07,015 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:46:07,015 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 03:46:07,015 DEBUG PropertyBinder: Building property id
2024-06-03 03:46:07,016 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:46:07,016 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,016 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 03:46:07,016 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 03:46:07,016 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 03:46:07,016 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 03:46:07,016 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 03:46:07,017 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,017 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:46:07,017 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 03:46:07,017 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:46:07,017 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 03:46:07,017 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:46:07,017 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,018 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 03:46:07,018 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 03:46:07,018 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 03:46:07,018 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 03:46:07,018 DEBUG PropertyBinder: Building property gameState
2024-06-03 03:46:07,019 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,019 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:46:07,019 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 03:46:07,019 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:46:07,019 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 03:46:07,019 DEBUG PropertyBinder: Building property questId
2024-06-03 03:46:07,020 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,020 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 03:46:07,020 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 03:46:07,020 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 03:46:07,020 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 03:46:07,020 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 03:46:07,021 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:46:07,022 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 03:46:07,029 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 03:46:07,031 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 03:46:07,031 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 03:46:07,031 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:46:07,039 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,039 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:46:07,040 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:46:07,040 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:46:07,040 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 03:46:07,040 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:46:07,040 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 03:46:07,041 DEBUG PropertyBinder: Building property id
2024-06-03 03:46:07,041 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:46:07,041 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,041 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 03:46:07,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 03:46:07,041 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 03:46:07,041 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 03:46:07,041 DEBUG PropertyBinder: Building property description
2024-06-03 03:46:07,042 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 03:46:07,042 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 03:46:07,042 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 03:46:07,042 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 03:46:07,043 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 03:46:07,043 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 03:46:07,043 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,043 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:46:07,043 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 03:46:07,043 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:46:07,044 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 03:46:07,044 DEBUG PropertyBinder: Building property name
2024-06-03 03:46:07,044 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 03:46:07,044 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 03:46:07,044 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 03:46:07,044 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 03:46:07,045 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 03:46:07,045 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 03:46:07,045 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:46:07,046 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 03:46:07,046 DEBUG EntityBinder: Import with entity name Question
2024-06-03 03:46:07,046 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 03:46:07,047 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:46:07,049 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,049 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:46:07,049 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:46:07,050 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:46:07,050 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 03:46:07,050 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:46:07,050 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 03:46:07,050 DEBUG PropertyBinder: Building property id
2024-06-03 03:46:07,051 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:46:07,051 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,051 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 03:46:07,051 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 03:46:07,051 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 03:46:07,052 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 03:46:07,052 DEBUG PropertyBinder: Building property questId
2024-06-03 03:46:07,052 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,052 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 03:46:07,052 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 03:46:07,053 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 03:46:07,053 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 03:46:07,053 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 03:46:07,054 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:46:07,055 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 03:46:07,055 DEBUG EntityBinder: Import with entity name User
2024-06-03 03:46:07,056 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 03:46:07,056 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 03:46:07,058 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,058 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:46:07,058 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:46:07,059 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 03:46:07,059 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 03:46:07,059 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 03:46:07,059 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 03:46:07,059 DEBUG PropertyBinder: Building property id
2024-06-03 03:46:07,059 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 03:46:07,059 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,059 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 03:46:07,059 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 03:46:07,060 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 03:46:07,060 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 03:46:07,060 DEBUG PropertyBinder: Building property login
2024-06-03 03:46:07,060 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,060 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 03:46:07,060 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 03:46:07,060 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 03:46:07,060 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 03:46:07,060 DEBUG PropertyBinder: Building property name
2024-06-03 03:46:07,061 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,061 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 03:46:07,061 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 03:46:07,061 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 03:46:07,061 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 03:46:07,061 DEBUG PropertyBinder: Building property password
2024-06-03 03:46:07,062 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 03:46:07,062 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 03:46:07,062 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 03:46:07,062 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 03:46:07,062 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 03:46:07,062 DEBUG PropertyBinder: Building property role
2024-06-03 03:46:07,063 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 03:46:07,064 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:46:07,067 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 03:46:07,067 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 03:46:07,067 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:46:07,070 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 03:46:07,070 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 03:46:07,070 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:46:07,070 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 03:46:07,070 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:46:07,070 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 03:46:07,070 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:46:07,070 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 03:46:07,071 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 03:46:07,076 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 03:46:07,076 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 03:46:07,076 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 03:46:07,076 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 03:46:07,077 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 03:46:07,132 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 03:46:07,369 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 03:46:07,429 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:46:07,429 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.javarush.nikolenko.lesson11.HibernateContext, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@516462cc, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 03:46:07,440 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 03:46:07,453 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:46:07,514 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 03:46:07,514 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 03:46:07,515 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 03:46:07,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 03:46:07,517 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@18539cb1] under count; prior registration was null
2024-06-03 03:46:07,519 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25f723b0] under every; prior registration was null
2024-06-03 03:46:07,519 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4aa11206] under any; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 03:46:07,520 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 03:46:07,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 03:46:07,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 03:46:07,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 03:46:07,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 03:46:07,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 03:46:07,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 03:46:07,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 03:46:07,521 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 03:46:07,524 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac] under sinh; prior registration was null
2024-06-03 03:46:07,524 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91] under cosh; prior registration was null
2024-06-03 03:46:07,524 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8] under tanh; prior registration was null
2024-06-03 03:46:07,524 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682] under pi; prior registration was null
2024-06-03 03:46:07,524 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7be2f29a] under log; prior registration was null
2024-06-03 03:46:07,525 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 03:46:07,525 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 03:46:07,525 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 03:46:07,525 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 03:46:07,525 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 03:46:07,525 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 03:46:07,526 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 03:46:07,526 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 03:46:07,526 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 03:46:07,526 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 03:46:07,526 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 03:46:07,526 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:46:07,527 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2525a5b8] under position; prior registration was null
2024-06-03 03:46:07,529 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f973a14] under overlay; prior registration was null
2024-06-03 03:46:07,530 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@72503b19] under trim; prior registration was null
2024-06-03 03:46:07,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3e4e8fdf] under cast; prior registration was null
2024-06-03 03:46:07,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d6ef2] under collate; prior registration was null
2024-06-03 03:46:07,532 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6bcc3f27] under extract; prior registration was null
2024-06-03 03:46:07,532 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 03:46:07,532 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 03:46:07,533 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6bee793f] under ifnull; prior registration was null
2024-06-03 03:46:07,533 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 03:46:07,533 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 03:46:07,533 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@30893e08] under pad; prior registration was null
2024-06-03 03:46:07,534 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@208f0007] under str; prior registration was null
2024-06-03 03:46:07,535 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@ebe067d] under format; prior registration was null
2024-06-03 03:46:07,536 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@550de6b8] under timestampadd; prior registration was null
2024-06-03 03:46:07,537 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1a565afb] under timestampdiff; prior registration was null
2024-06-03 03:46:07,537 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 03:46:07,537 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bfaa0a6] under current_date; prior registration was null
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e9f00b] under current_time; prior registration was null
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314b9e4b] under current_timestamp; prior registration was null
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f1b8544] under local_date; prior registration was null
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dae791] under local_time; prior registration was null
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@688a2c09] under local_datetime; prior registration was null
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5de5e95] under offset_datetime; prior registration was null
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@365cdacf] under instant; prior registration was null
2024-06-03 03:46:07,538 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 03:46:07,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2ee83775] under sql; prior registration was null
2024-06-03 03:46:07,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 03:46:07,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 03:46:07,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 03:46:07,539 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7be2f29a
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c2924d7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a9cd0f8
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3df1a1ac
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58606c91
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4baed682
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 03:46:07,540 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 03:46:07,541 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 03:46:07,542 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@3f81621c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 03:46:07,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 03:46:07,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 03:46:07,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51dae791
2024-06-03 03:46:07,543 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@688a2c09
2024-06-03 03:46:07,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@668625f5] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 03:46:07,544 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 03:46:07,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@19a20bb2] under bit_length; prior registration was null
2024-06-03 03:46:07,544 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@75babb67] under octet_length; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb3232b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2525a5b8
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd1085] under bitand; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60bb7995] under bitor; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fa8766] under bitxor; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67774e29] under bitnot; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 03:46:07,545 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 03:46:07,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 03:46:07,546 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 03:46:07,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@663f237a] under median; prior registration was null
2024-06-03 03:46:07,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 03:46:07,546 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 03:46:07,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 03:46:07,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 03:46:07,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 03:46:07,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 03:46:07,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 03:46:07,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 03:46:07,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 03:46:07,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 03:46:07,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 03:46:07,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 03:46:07,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 03:46:07,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 03:46:07,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 03:46:07,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 03:46:07,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 03:46:07,549 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 03:46:07,549 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49a6f486] under insert; prior registration was null
2024-06-03 03:46:07,549 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34c70b5e] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f973a14
2024-06-03 03:46:07,550 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 03:46:07,550 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4f2d995e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 03:46:07,550 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 03:46:07,551 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 03:46:07,551 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 03:46:07,551 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 03:46:07,551 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 03:46:07,551 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 03:46:07,552 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1756f7cc] under listagg; prior registration was null
2024-06-03 03:46:07,554 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40729f01] under array; prior registration was null
2024-06-03 03:46:07,554 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@d535a3d] under array_list; prior registration was null
2024-06-03 03:46:07,555 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4a2e7bcb] under array_agg; prior registration was null
2024-06-03 03:46:07,557 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@939ff41] under array_position; prior registration was null
2024-06-03 03:46:07,563 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@539a138b] under array_positions; prior registration was null
2024-06-03 03:46:07,566 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7e83992] under array_positions_list; prior registration was null
2024-06-03 03:46:07,566 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4364863] under array_length; prior registration was null
2024-06-03 03:46:07,567 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@b3e86d5] under array_concat; prior registration was null
2024-06-03 03:46:07,570 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@76ececd] under array_prepend; prior registration was null
2024-06-03 03:46:07,570 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7affc159] under array_append; prior registration was null
2024-06-03 03:46:07,573 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7d17ee50] under array_contains; prior registration was null
2024-06-03 03:46:07,574 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@44fdce3c] under array_contains_nullable; prior registration was null
2024-06-03 03:46:07,575 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ffd4cba] under array_overlaps; prior registration was null
2024-06-03 03:46:07,575 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5f1483fd] under array_overlaps_nullable; prior registration was null
2024-06-03 03:46:07,576 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@708eb310] under array_get; prior registration was null
2024-06-03 03:46:07,577 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@6c8dbf56] under array_set; prior registration was null
2024-06-03 03:46:07,577 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 03:46:07,578 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@54089484] under array_remove_index; prior registration was null
2024-06-03 03:46:07,578 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45adc393] under array_slice; prior registration was null
2024-06-03 03:46:07,578 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 03:46:07,578 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65fe2691] under array_trim; prior registration was null
2024-06-03 03:46:07,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@fb49fdf] under array_fill; prior registration was null
2024-06-03 03:46:07,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3a2e9f5b] under array_fill_list; prior registration was null
2024-06-03 03:46:07,581 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@753fd7a1] under array_to_string; prior registration was null
2024-06-03 03:46:07,581 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 03:46:07,581 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 03:46:07,581 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 03:46:07,581 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 03:46:07,582 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2c9a6717] under mode; prior registration was null
2024-06-03 03:46:07,582 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b3cde6f] under percentile_cont; prior registration was null
2024-06-03 03:46:07,582 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6d091cad] under percentile_disc; prior registration was null
2024-06-03 03:46:07,583 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3ba0ae41] under rank; prior registration was null
2024-06-03 03:46:07,583 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@76fe6cdc] under dense_rank; prior registration was null
2024-06-03 03:46:07,583 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ffb3aec] under percent_rank; prior registration was null
2024-06-03 03:46:07,583 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@786ff1cb] under cume_dist; prior registration was null
2024-06-03 03:46:07,584 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32a2a6be] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 03:46:07,584 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@682af059] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 03:46:07,585 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@5584d9c6] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 03:46:07,587 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@71adfedd] under trunc; prior registration was null
2024-06-03 03:46:07,587 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 03:46:07,587 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9301672] under date_trunc; prior registration was null
2024-06-03 03:46:07,593 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 03:46:07,594 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 03:46:07,594 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 03:46:07,594 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 03:46:07,594 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 03:46:07,594 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 03:46:07,594 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 03:46:07,594 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 03:46:07,595 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 03:46:07,596 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 03:46:07,597 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 03:46:07,598 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:46:07,599 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:46:07,599 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 03:46:07,599 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 03:46:07,599 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 03:46:07,599 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 03:46:07,599 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 03:46:07,599 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 03:46:07,599 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 03:46:07,600 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 03:46:07,601 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 03:46:07,602 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,603 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 03:46:07,604 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 03:46:07,605 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 03:46:07,606 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 03:46:07,607 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 03:46:07,607 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 03:46:07,607 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 03:46:07,607 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 03:46:07,607 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 03:46:07,615 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 03:46:07,728 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 03:46:07,729 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 03:46:07,822 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 03:46:07,822 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 03:46:08,114 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 03:46:08,144 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 03:46:08,144 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 03:46:08,169 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 03:46:08,170 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 03:46:08,170 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 03:46:08,195 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 03:46:08,196 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 03:46:08,196 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 03:46:08,211 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 03:46:08,212 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 03:46:08,212 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 03:46:08,226 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 03:46:08,258 DEBUG creation: Starting post-init callbacks
2024-06-03 03:46:08,258 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 03:46:08,259 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 03:46:08,259 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 03:46:08,259 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 03:46:08,259 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 03:46:08,356 DEBUG create: Created new SQL alias : g1_0
2024-06-03 03:46:08,361 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 03:46:08,381 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 03:46:08,384 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 03:46:08,396 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 03:46:08,396 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 03:46:08,396 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 03:46:08,396 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 03:46:08,396 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 03:46:08,397 DEBUG create: Created new SQL alias : a1_0
2024-06-03 03:46:08,397 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 03:46:08,397 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 03:46:08,397 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 03:46:08,397 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 03:46:08,397 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 03:46:08,397 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 03:46:08,398 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 03:46:08,398 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 03:46:08,398 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:46:08,398 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 03:46:08,398 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 03:46:08,398 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 03:46:08,398 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 03:46:08,398 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 03:46:08,398 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 03:46:08,398 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 03:46:08,398 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 03:46:08,398 DEBUG create: Created new SQL alias : u1_0
2024-06-03 03:46:08,398 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 03:46:08,399 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 03:46:08,399 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 03:46:08,399 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 03:46:08,399 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 03:46:08,399 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 03:46:08,399 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 03:46:08,399 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 03:46:08,399 DEBUG create: Created new SQL alias : q1_0
2024-06-03 03:46:08,399 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 03:46:08,399 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 03:46:08,399 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 03:46:08,400 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 03:46:08,400 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 03:46:08,400 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 03:46:08,400 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 03:46:08,400 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 03:46:08,440 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 03:46:08,441 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 03:46:08,445 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 03:46:08,446 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 03:46:08,447 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f387978] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@539fc5d1]
2024-06-03 03:46:08,457 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 03:46:08,457 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 03:46:08,463 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 03:46:08,468 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 03:46:08,782 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 03:46:08,784 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 03:46:08,880 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 03:46:08,900 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 03:46:08,926 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 03:46:08,940 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 03:46:08,941 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 03:46:08,941 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 03:46:08,945 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38ebc866
2024-06-03 03:46:08,945 DEBUG SessionFactoryRegistry: Registering SessionFactory: a8f3026c-2af4-4cc9-9c9e-91cbf5bf83a4 (<unnamed>)
2024-06-03 03:46:08,946 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 03:46:08,946 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 03:46:09,007 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 03:46:09,007 DEBUG TransactionImpl: begin
2024-06-03 03:46:09,038 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 03:46:09,074 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@2073830279 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 03:46:09,085 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 03:46:09,102 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 4
2024-06-03 03:46:09,105 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#4] : 97224064
2024-06-03 03:46:09,107 DEBUG results: Extracted JDBC value [1] - [bob]
2024-06-03 03:46:09,107 DEBUG results: Extracted JDBC value [2] - [Bob]
2024-06-03 03:46:09,107 DEBUG results: Extracted JDBC value [3] - [47]
2024-06-03 03:46:09,107 DEBUG results: Extracted JDBC value [4] - [THE_USER]
2024-06-03 03:46:09,115 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#4
2024-06-03 03:46:09,115 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@bb5f9d
2024-06-03 03:46:09,119 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:46:09,121 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:46:09,126 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:46:09,138 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:46:09,138 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:46:09,140 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:46:09,142 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=47, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:46:09,142 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:46:09,144 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:46:09,144 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:46:09,144 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:46:09,144 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:46:09,144 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:46:09,144 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:46:09,144 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=47, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:46:09,144 DEBUG DefaultDirtyCheckEventListener: Session not dirty
2024-06-03 03:46:09,145 DEBUG TransactionImpl: committing
2024-06-03 03:46:09,146 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:46:09,146 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:46:09,147 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 03:46:09,147 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:46:09,147 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:46:09,147 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=47, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:46:09,155 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:46:09,156 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 03:46:09,157 DEBUG SessionImpl: Checking session dirtiness
2024-06-03 03:46:09,157 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 03:46:09,157 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 03:46:09,163 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2024-06-03 03:46:09,163 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 03:46:09,163 DEBUG EntityPrinter: Listing entities:
2024-06-03 03:46:09,163 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=123, role=THE_USER, name=Bob, id=4, login=bob}
2024-06-03 03:46:09,163 DEBUG DefaultDirtyCheckEventListener: Session dirty
2024-06-03 03:46:09,169 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-06-03 03:46:09,170 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d74507c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@539fc5d1]
2024-06-03 03:46:09,171 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-06-03 03:46:09,171 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-06-03 03:46:09,175 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-06-03 22:59:13,191 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 22:59:13,292 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 22:59:13,342 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 22:59:13,774 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 22:59:13,782 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 22:59:14,080 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 22:59:14,114 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 22:59:15,250 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 22:59:15,445 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 22:59:15,510 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 22:59:15,544 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 22:59:15,546 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 22:59:15,548 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 22:59:15,549 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 22:59:15,550 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 22:59:15,556 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 22:59:15,557 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 22:59:15,560 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 22:59:15,561 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 22:59:15,562 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 22:59:15,562 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 22:59:15,563 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 22:59:15,638 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 22:59:15,640 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 22:59:16,045 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 22:59:16,046 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 22:59:16,047 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 22:59:16,047 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 22:59:16,047 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 22:59:16,047 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 22:59:16,047 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5e39850
2024-06-03 22:59:16,048 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5e39850
2024-06-03 22:59:16,048 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@1603dc2f
2024-06-03 22:59:16,048 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@398474a2
2024-06-03 22:59:16,048 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@398474a2
2024-06-03 22:59:16,048 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 22:59:16,048 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@78c1a023
2024-06-03 22:59:16,048 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@70abf9b0
2024-06-03 22:59:16,048 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@70abf9b0
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@70abf9b0
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@6a10b263
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@6a10b263
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6a10b263
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 22:59:16,049 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@1d12b024
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@1d12b024
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1d12b024
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@72fe8a4f
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@72fe8a4f
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@43effd89
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@43effd89
2024-06-03 22:59:16,050 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@2c16fadb
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@2c16fadb
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2c16fadb
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@248deced
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@2227a6c1
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2227a6c1
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 22:59:16,051 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@f8f56b9
2024-06-03 22:59:16,052 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@15fa55a6
2024-06-03 22:59:16,052 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@15fa55a6
2024-06-03 22:59:16,052 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f186450
2024-06-03 22:59:16,052 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f186450
2024-06-03 22:59:16,052 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7fab4be7
2024-06-03 22:59:16,053 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@a64e035
2024-06-03 22:59:16,053 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-06-03 22:59:16,053 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@41c204a0
2024-06-03 22:59:16,053 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@64138b0c
2024-06-03 22:59:16,053 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-06-03 22:59:16,054 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@22d9c961
2024-06-03 22:59:16,054 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@22d9c961
2024-06-03 22:59:16,054 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 22:59:16,054 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 22:59:16,054 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 22:59:16,054 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 22:59:16,054 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 22:59:16,055 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 22:59:16,055 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 22:59:16,055 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 22:59:16,055 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@28d79cba
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@782168b7
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 22:59:16,056 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 22:59:16,057 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2b214b94
2024-06-03 22:59:16,058 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-06-03 22:59:16,058 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@49601f82
2024-06-03 22:59:16,058 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49601f82
2024-06-03 22:59:16,058 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@23e44287
2024-06-03 22:59:16,058 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@23e44287
2024-06-03 22:59:16,058 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@23e44287
2024-06-03 22:59:16,058 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2b8d084
2024-06-03 22:59:16,058 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6daf2337
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@250b236d
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@250b236d
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@250b236d
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7551da2a
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7551da2a
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@432034a
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@432034a
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@78de58ea
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@78de58ea
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@60e5272
2024-06-03 22:59:16,059 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@60e5272
2024-06-03 22:59:16,060 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@7d755813
2024-06-03 22:59:16,060 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-06-03 22:59:16,075 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@26f96b85
2024-06-03 22:59:16,076 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@26f96b85
2024-06-03 22:59:16,077 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@17d2ed1b
2024-06-03 22:59:16,077 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@185f7840
2024-06-03 22:59:16,077 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1e6cc850
2024-06-03 22:59:16,077 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7e7f0f0a
2024-06-03 22:59:16,078 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7ec58feb
2024-06-03 22:59:16,078 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1dbb650b
2024-06-03 22:59:16,078 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@656d10a4
2024-06-03 22:59:16,078 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@63ec445c
2024-06-03 22:59:16,078 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3104351d
2024-06-03 22:59:16,172 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 22:59:16,255 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 22:59:16,255 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 22:59:16,255 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 22:59:16,255 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 22:59:16,279 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 22:59:16,279 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 22:59:17,383 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 22:59:17,383 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 22:59:17,383 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 22:59:18,114 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 22:59:18,179 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 22:59:18,307 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 22:59:18,326 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@150ede8b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@161f6623)
2024-06-03 22:59:18,327 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e15bb06) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6778aea6)
2024-06-03 22:59:18,336 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 22:59:18,337 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 22:59:18,375 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7e2c64
2024-06-03 22:59:18,375 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7e2c64
2024-06-03 22:59:18,375 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@26f96b85`
2024-06-03 22:59:18,380 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 22:59:18,381 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 22:59:18,381 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 22:59:18,387 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 22:59:18,388 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 22:59:18,388 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 22:59:18,389 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 22:59:18,389 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 22:59:18,389 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 22:59:18,391 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 22:59:18,391 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 22:59:18,391 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 22:59:18,394 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10358c32] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2af4129d]
2024-06-03 22:59:18,476 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 22:59:18,571 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 22:59:18,582 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 22:59:18,594 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 22:59:18,615 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 22:59:18,663 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,663 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 22:59:18,663 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 22:59:18,667 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 22:59:18,678 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 22:59:18,729 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 22:59:18,744 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 22:59:18,745 DEBUG PropertyBinder: Building property id
2024-06-03 22:59:18,752 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 22:59:18,767 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,767 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 22:59:18,767 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 22:59:18,767 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 22:59:18,767 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 22:59:18,768 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 22:59:18,769 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,769 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 22:59:18,769 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 22:59:18,770 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 22:59:18,770 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 22:59:18,770 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 22:59:18,771 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,771 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 22:59:18,771 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 22:59:18,771 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 22:59:18,771 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 22:59:18,771 DEBUG PropertyBinder: Building property gameState
2024-06-03 22:59:18,772 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,772 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 22:59:18,772 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 22:59:18,772 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 22:59:18,772 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 22:59:18,772 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 22:59:18,772 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,773 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 22:59:18,773 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 22:59:18,773 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 22:59:18,773 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 22:59:18,773 DEBUG PropertyBinder: Building property questionId
2024-06-03 22:59:18,775 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 22:59:18,795 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 22:59:18,796 DEBUG EntityBinder: Import with entity name Game
2024-06-03 22:59:18,796 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 22:59:18,797 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 22:59:18,802 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,802 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 22:59:18,802 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 22:59:18,816 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 22:59:18,817 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 22:59:18,817 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 22:59:18,817 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 22:59:18,817 DEBUG PropertyBinder: Building property id
2024-06-03 22:59:18,817 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 22:59:18,818 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,818 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 22:59:18,818 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 22:59:18,818 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 22:59:18,818 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 22:59:18,818 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 22:59:18,818 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,819 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 22:59:18,819 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 22:59:18,819 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 22:59:18,819 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 22:59:18,820 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 22:59:18,820 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,820 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 22:59:18,820 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 22:59:18,821 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 22:59:18,821 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 22:59:18,822 DEBUG PropertyBinder: Building property gameState
2024-06-03 22:59:18,822 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,822 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 22:59:18,822 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 22:59:18,822 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 22:59:18,822 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 22:59:18,822 DEBUG PropertyBinder: Building property questId
2024-06-03 22:59:18,822 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,822 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 22:59:18,822 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 22:59:18,822 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 22:59:18,822 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 22:59:18,822 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 22:59:18,823 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 22:59:18,823 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 22:59:18,851 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 22:59:18,851 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 22:59:18,852 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 22:59:18,852 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 22:59:18,858 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,858 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 22:59:18,858 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 22:59:18,858 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 22:59:18,859 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 22:59:18,859 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 22:59:18,859 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 22:59:18,859 DEBUG PropertyBinder: Building property id
2024-06-03 22:59:18,859 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 22:59:18,859 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,859 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 22:59:18,859 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 22:59:18,859 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 22:59:18,860 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 22:59:18,860 DEBUG PropertyBinder: Building property description
2024-06-03 22:59:18,860 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 22:59:18,860 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 22:59:18,860 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 22:59:18,861 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 22:59:18,861 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 22:59:18,861 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 22:59:18,861 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,861 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 22:59:18,861 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 22:59:18,862 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 22:59:18,862 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 22:59:18,862 DEBUG PropertyBinder: Building property name
2024-06-03 22:59:18,862 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 22:59:18,862 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 22:59:18,862 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 22:59:18,863 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 22:59:18,863 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 22:59:18,863 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 22:59:18,864 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 22:59:18,865 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 22:59:18,866 DEBUG EntityBinder: Import with entity name Question
2024-06-03 22:59:18,866 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 22:59:18,867 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 22:59:18,890 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,890 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 22:59:18,890 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 22:59:18,890 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 22:59:18,890 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 22:59:18,890 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 22:59:18,890 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 22:59:18,890 DEBUG PropertyBinder: Building property id
2024-06-03 22:59:18,891 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 22:59:18,891 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,891 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 22:59:18,891 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 22:59:18,891 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 22:59:18,891 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 22:59:18,892 DEBUG PropertyBinder: Building property questId
2024-06-03 22:59:18,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,892 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 22:59:18,892 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 22:59:18,892 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 22:59:18,892 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 22:59:18,892 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 22:59:18,893 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 22:59:18,893 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 22:59:18,894 DEBUG EntityBinder: Import with entity name User
2024-06-03 22:59:18,894 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 22:59:18,894 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 22:59:18,898 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,898 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 22:59:18,898 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 22:59:18,898 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 22:59:18,898 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 22:59:18,898 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 22:59:18,898 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 22:59:18,899 DEBUG PropertyBinder: Building property id
2024-06-03 22:59:18,899 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 22:59:18,899 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,899 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 22:59:18,899 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 22:59:18,899 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 22:59:18,899 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 22:59:18,899 DEBUG PropertyBinder: Building property login
2024-06-03 22:59:18,899 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,899 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 22:59:18,899 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 22:59:18,899 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 22:59:18,899 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 22:59:18,899 DEBUG PropertyBinder: Building property name
2024-06-03 22:59:18,899 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,901 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 22:59:18,901 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 22:59:18,901 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 22:59:18,901 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 22:59:18,901 DEBUG PropertyBinder: Building property password
2024-06-03 22:59:18,901 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 22:59:18,901 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 22:59:18,901 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 22:59:18,901 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 22:59:18,902 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 22:59:18,902 DEBUG PropertyBinder: Building property role
2024-06-03 22:59:18,903 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 22:59:18,904 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 22:59:18,907 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 22:59:18,907 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 22:59:18,907 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 22:59:18,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 22:59:18,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 22:59:18,965 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 22:59:18,965 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 22:59:18,965 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 22:59:18,965 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 22:59:18,965 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 22:59:18,965 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 22:59:18,965 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 22:59:18,965 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 22:59:18,969 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 22:59:18,969 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 22:59:18,970 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 22:59:18,970 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 22:59:18,971 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 22:59:19,242 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 22:59:19,949 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 22:59:20,238 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 22:59:20,238 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.repository.UserRepositoryTest,get, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6cbbb9c4, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 22:59:20,323 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 22:59:20,387 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 22:59:20,691 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 22:59:20,692 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 22:59:20,693 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 22:59:20,694 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 22:59:20,696 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73c31181] under count; prior registration was null
2024-06-03 22:59:20,697 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4d7a64ca] under every; prior registration was null
2024-06-03 22:59:20,697 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@76ff68c5] under any; prior registration was null
2024-06-03 22:59:20,697 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 22:59:20,698 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 22:59:20,699 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 22:59:20,699 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 22:59:20,699 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 22:59:20,699 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 22:59:20,699 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 22:59:20,699 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 22:59:20,701 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4aa31ffc] under sinh; prior registration was null
2024-06-03 22:59:20,701 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7945b206] under cosh; prior registration was null
2024-06-03 22:59:20,702 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d42542] under tanh; prior registration was null
2024-06-03 22:59:20,702 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d09cade] under pi; prior registration was null
2024-06-03 22:59:20,702 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f87607c] under log; prior registration was null
2024-06-03 22:59:20,702 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 22:59:20,703 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 22:59:20,705 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@373e6b9d] under position; prior registration was null
2024-06-03 22:59:20,706 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7412a438] under overlay; prior registration was null
2024-06-03 22:59:20,707 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1150d471] under trim; prior registration was null
2024-06-03 22:59:20,721 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2a2dc0a] under cast; prior registration was null
2024-06-03 22:59:20,721 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d] under collate; prior registration was null
2024-06-03 22:59:20,722 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6003ad65] under extract; prior registration was null
2024-06-03 22:59:20,722 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 22:59:20,722 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 22:59:20,722 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@71179b6f] under ifnull; prior registration was null
2024-06-03 22:59:20,722 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 22:59:20,723 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 22:59:20,723 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4a9860] under pad; prior registration was null
2024-06-03 22:59:20,726 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1e957e2f] under str; prior registration was null
2024-06-03 22:59:20,728 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5cff6b74] under format; prior registration was null
2024-06-03 22:59:20,728 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@ea04cab] under timestampadd; prior registration was null
2024-06-03 22:59:20,729 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@285583d4] under timestampdiff; prior registration was null
2024-06-03 22:59:20,730 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 22:59:20,730 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 22:59:20,730 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b202ff] under current_date; prior registration was null
2024-06-03 22:59:20,730 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58a84a12] under current_time; prior registration was null
2024-06-03 22:59:20,730 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e700eba] under current_timestamp; prior registration was null
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6436e181] under local_date; prior registration was null
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7186b202] under local_time; prior registration was null
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b649efa] under local_datetime; prior registration was null
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65ef48f2] under offset_datetime; prior registration was null
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36068727] under instant; prior registration was null
2024-06-03 22:59:20,731 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 22:59:20,732 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@208205ed] under sql; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f87607c
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73afe2b7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d42542
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4aa31ffc
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7945b206
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d09cade
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 22:59:20,733 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 22:59:20,734 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 22:59:20,736 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6babffb5] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 22:59:20,736 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 22:59:20,736 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 22:59:20,736 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7186b202
2024-06-03 22:59:20,736 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6b649efa
2024-06-03 22:59:20,737 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4b8137c5] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 22:59:20,737 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 22:59:20,737 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@77f4c040] under bit_length; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@606a1bc4] under octet_length; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a15b73] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@373e6b9d
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44dc7b7d] under bitand; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15fb4566] under bitor; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25ffd826] under bitxor; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29896529] under bitnot; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 22:59:20,738 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e29f4f6] under median; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 22:59:20,739 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 22:59:20,740 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a538ed8] under insert; prior registration was null
2024-06-03 22:59:20,741 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4cb957b8] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7412a438
2024-06-03 22:59:20,741 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 22:59:20,741 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3cdc7b09] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 22:59:20,741 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 22:59:20,742 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 22:59:20,742 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 22:59:20,742 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 22:59:20,742 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 22:59:20,742 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 22:59:20,743 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@773014d3] under listagg; prior registration was null
2024-06-03 22:59:20,745 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3b009e7b] under array; prior registration was null
2024-06-03 22:59:20,745 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@270a620] under array_list; prior registration was null
2024-06-03 22:59:20,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@67fa5045] under array_agg; prior registration was null
2024-06-03 22:59:20,748 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@6cae2e4d] under array_position; prior registration was null
2024-06-03 22:59:20,753 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11c713b7] under array_positions; prior registration was null
2024-06-03 22:59:20,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@3e33b52e] under array_positions_list; prior registration was null
2024-06-03 22:59:20,756 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c6a4ffd] under array_length; prior registration was null
2024-06-03 22:59:20,757 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@ee8e7ff] under array_concat; prior registration was null
2024-06-03 22:59:20,758 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@536b71b4] under array_prepend; prior registration was null
2024-06-03 22:59:20,758 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@789c3057] under array_append; prior registration was null
2024-06-03 22:59:20,760 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@1ca610a0] under array_contains; prior registration was null
2024-06-03 22:59:20,760 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@49433c98] under array_contains_nullable; prior registration was null
2024-06-03 22:59:20,761 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f13811b] under array_overlaps; prior registration was null
2024-06-03 22:59:20,761 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@59fc6d05] under array_overlaps_nullable; prior registration was null
2024-06-03 22:59:20,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1983b48a] under array_get; prior registration was null
2024-06-03 22:59:20,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@71e7adbb] under array_set; prior registration was null
2024-06-03 22:59:20,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 22:59:20,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@64aeaf29] under array_remove_index; prior registration was null
2024-06-03 22:59:20,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e3df614] under array_slice; prior registration was null
2024-06-03 22:59:20,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 22:59:20,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6579cdbb] under array_trim; prior registration was null
2024-06-03 22:59:20,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@66f5a02e] under array_fill; prior registration was null
2024-06-03 22:59:20,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4e3f2908] under array_fill_list; prior registration was null
2024-06-03 22:59:20,765 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@72443081] under array_to_string; prior registration was null
2024-06-03 22:59:20,765 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 22:59:20,765 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 22:59:20,765 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 22:59:20,765 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 22:59:20,766 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@373052b5] under mode; prior registration was null
2024-06-03 22:59:20,766 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@67e0ff3a] under percentile_cont; prior registration was null
2024-06-03 22:59:20,766 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7b2bf745] under percentile_disc; prior registration was null
2024-06-03 22:59:20,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1eb9a3ef] under rank; prior registration was null
2024-06-03 22:59:20,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5d318e91] under dense_rank; prior registration was null
2024-06-03 22:59:20,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@298b64f7] under percent_rank; prior registration was null
2024-06-03 22:59:20,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@740b6628] under cume_dist; prior registration was null
2024-06-03 22:59:20,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2ba1209b] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 22:59:20,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@7c241a9f] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 22:59:20,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3a7b2e2] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 22:59:20,771 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@433d9680] under trunc; prior registration was null
2024-06-03 22:59:20,771 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 22:59:20,771 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@566e142] under date_trunc; prior registration was null
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 22:59:20,802 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 22:59:20,803 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 22:59:20,804 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 22:59:20,805 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 22:59:20,806 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 22:59:20,807 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 22:59:20,808 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,809 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 22:59:20,810 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 22:59:20,811 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 22:59:20,831 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 22:59:20,953 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 22:59:20,967 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 22:59:21,180 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 22:59:21,180 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 22:59:21,669 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 22:59:21,832 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 22:59:21,832 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 22:59:21,862 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 22:59:21,863 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 22:59:21,863 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 22:59:21,898 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 22:59:21,899 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 22:59:21,899 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 22:59:21,919 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 22:59:21,921 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 22:59:21,921 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 22:59:21,938 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 22:59:21,994 DEBUG creation: Starting post-init callbacks
2024-06-03 22:59:21,995 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 22:59:21,995 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 22:59:21,995 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 22:59:21,995 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 22:59:21,995 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 22:59:22,153 DEBUG create: Created new SQL alias : g1_0
2024-06-03 22:59:22,156 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 22:59:22,188 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 22:59:22,194 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 22:59:22,216 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 22:59:22,216 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 22:59:22,216 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 22:59:22,216 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 22:59:22,216 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 22:59:22,216 DEBUG create: Created new SQL alias : a1_0
2024-06-03 22:59:22,216 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 22:59:22,216 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 22:59:22,216 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 22:59:22,217 DEBUG create: Created new SQL alias : q1_0
2024-06-03 22:59:22,217 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 22:59:22,217 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 22:59:22,217 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 22:59:22,217 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 22:59:22,218 DEBUG create: Created new SQL alias : u1_0
2024-06-03 22:59:22,218 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 22:59:22,218 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 22:59:22,218 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 22:59:22,218 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 22:59:22,218 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 22:59:22,218 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 22:59:22,218 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 22:59:22,218 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 22:59:22,218 DEBUG create: Created new SQL alias : q1_0
2024-06-03 22:59:22,218 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 22:59:22,219 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 22:59:22,219 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 22:59:22,219 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 22:59:22,219 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 22:59:22,220 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 22:59:22,220 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 22:59:22,220 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 22:59:22,260 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 22:59:22,261 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 22:59:22,266 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 22:59:22,266 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 22:59:22,267 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10358c32] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4b691611]
2024-06-03 22:59:22,279 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 22:59:22,279 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 22:59:22,292 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 22:59:22,326 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 22:59:22,642 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 22:59:22,644 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 22:59:22,740 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 22:59:22,763 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 22:59:22,784 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 22:59:22,797 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 22:59:22,798 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 22:59:22,798 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 22:59:22,837 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56b704ea
2024-06-03 22:59:22,837 DEBUG SessionFactoryRegistry: Registering SessionFactory: 29f1fbbe-7bfe-4a4f-b90e-10779c75e7c0 (<unnamed>)
2024-06-03 22:59:22,837 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 22:59:22,837 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 22:59:22,892 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 22:59:22,892 DEBUG TransactionImpl: begin
2024-06-03 22:59:22,913 DEBUG JdbcResourceLocalTransactionCoordinatorImpl: JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:479) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:127) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:780) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) ~[hibernate-core-6.4.1.Final.jar:6.4.1.Final]
	at com.javarush.nikolenko.repository.BaseRepository.create(BaseRepository.java:49) ~[classes/:?]
	at com.javarush.nikolenko.repository.UserRepositoryTest.setUp(UserRepositoryTest.java:28) ~[test-classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728) ~[junit-platform-commons-1.10.1.jar:1.10.1]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:128) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:78) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:521) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$23(ClassBasedTestDescriptor.java:506) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:175) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:203) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:203) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:172) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.10.1.jar:5.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198) ~[junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169) ~[junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93) ~[junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141) [junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57) [junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) [junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) [junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) [junit-platform-launcher-1.10.1.jar:1.10.1]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63) [junit-platform-launcher-1.10.1.jar:1.10.1]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
2024-06-03 22:59:22,960 DEBUG TransactionImpl: rolling back
2024-06-03 22:59:22,960 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 22:59:22,961 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 22:59:22,965 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 22:59:22,965 DEBUG TransactionImpl: begin
2024-06-03 22:59:23,018 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 22:59:23,038 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1658589699 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 22:59:23,062 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 22:59:23,212 DEBUG TransactionImpl: committing
2024-06-03 22:59:23,214 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 22:59:23,214 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:01:59,416 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 23:01:59,450 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 23:01:59,457 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 23:01:59,587 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 23:01:59,591 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 23:01:59,681 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 23:01:59,694 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 23:01:59,979 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 23:01:59,991 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 23:02:00,000 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 23:02:00,005 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 23:02:00,005 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 23:02:00,006 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:02:00,006 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:02:00,006 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 23:02:00,007 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 23:02:00,008 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 23:02:00,011 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:02:00,012 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 23:02:00,014 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 23:02:00,014 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:02:00,016 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 23:02:00,030 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 23:02:00,031 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 23:02:00,217 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:02:00,218 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:02:00,218 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:02:00,218 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77a281fc
2024-06-03 23:02:00,218 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77a281fc
2024-06-03 23:02:00,218 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4912d525
2024-06-03 23:02:00,218 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4912d525
2024-06-03 23:02:00,218 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:02:00,219 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:02:00,219 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:02:00,219 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:02:00,219 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:02:00,219 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:02:00,219 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4a7761b1
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4a7761b1
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@3e850122
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@27fde870
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@27fde870
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b4c3c29
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5ac7aa18
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:02:00,220 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:02:00,221 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:02:00,221 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:02:00,221 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:02:00,221 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:02:00,221 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 23:02:00,222 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 23:02:00,223 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:02:00,223 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:02:00,223 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:02:00,223 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:02:00,223 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5e39850
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@1603dc2f
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1603dc2f
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@398474a2
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@78c1a023
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@70abf9b0
2024-06-03 23:02:00,224 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6a10b263
2024-06-03 23:02:00,225 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 23:02:00,225 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 23:02:00,225 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 23:02:00,225 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 23:02:00,225 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1d12b024
2024-06-03 23:02:00,225 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@72fe8a4f
2024-06-03 23:02:00,225 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@43effd89
2024-06-03 23:02:00,226 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c16fadb
2024-06-03 23:02:00,226 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@248deced
2024-06-03 23:02:00,226 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2227a6c1
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 23:02:00,227 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@f8f56b9
2024-06-03 23:02:00,228 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@f8f56b9
2024-06-03 23:02:00,228 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15fa55a6
2024-06-03 23:02:00,228 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f186450
2024-06-03 23:02:00,228 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7fab4be7
2024-06-03 23:02:00,228 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7fab4be7
2024-06-03 23:02:00,228 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@a64e035
2024-06-03 23:02:00,228 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-06-03 23:02:00,228 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41c204a0
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@64138b0c
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@64138b0c
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22d9c961
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:02:00,229 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:02:00,230 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:02:00,231 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@28d79cba
2024-06-03 23:02:00,231 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@782168b7
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 23:02:00,232 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 23:02:00,233 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 23:02:00,233 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 23:02:00,233 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 23:02:00,233 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b214b94
2024-06-03 23:02:00,233 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-06-03 23:02:00,240 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@25a73de1
2024-06-03 23:02:00,240 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25a73de1
2024-06-03 23:02:00,243 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@298d9a05
2024-06-03 23:02:00,243 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@58399d82
2024-06-03 23:02:00,244 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@26f96b85
2024-06-03 23:02:00,244 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@46d8f407
2024-06-03 23:02:00,244 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3c0036b
2024-06-03 23:02:00,244 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@17814b1c
2024-06-03 23:02:00,244 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7ac9af2a
2024-06-03 23:02:00,244 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7bb004b8
2024-06-03 23:02:00,244 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@78e89bfe
2024-06-03 23:02:00,281 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 23:02:00,287 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 23:02:00,287 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 23:02:00,287 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 23:02:00,287 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 23:02:00,291 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 23:02:00,292 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 23:02:00,550 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 23:02:00,550 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 23:02:00,551 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 23:02:00,618 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 23:02:00,632 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 23:02:00,651 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 23:02:00,667 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@319c3a25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@238bfd6c)
2024-06-03 23:02:00,667 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ef1695a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58860997)
2024-06-03 23:02:00,671 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 23:02:00,671 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 23:02:00,682 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@8f2098e
2024-06-03 23:02:00,683 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@8f2098e
2024-06-03 23:02:00,683 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@25a73de1`
2024-06-03 23:02:00,688 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 23:02:00,688 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:02:00,688 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:02:00,693 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:02:00,693 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:02:00,693 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:02:00,693 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:02:00,693 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:02:00,693 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:02:00,694 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:02:00,694 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:02:00,694 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:02:00,696 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49fe3142] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@13fed1ec]
2024-06-03 23:02:00,749 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 23:02:00,781 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 23:02:00,791 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 23:02:00,800 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 23:02:00,819 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:02:00,848 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,849 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:02:00,849 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:02:00,853 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:02:00,860 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 23:02:00,863 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:02:00,867 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 23:02:00,868 DEBUG PropertyBinder: Building property id
2024-06-03 23:02:00,873 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:02:00,875 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,875 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 23:02:00,875 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 23:02:00,875 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 23:02:00,875 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 23:02:00,876 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 23:02:00,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,876 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 23:02:00,877 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 23:02:00,877 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 23:02:00,877 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 23:02:00,877 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 23:02:00,877 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,877 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:02:00,878 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 23:02:00,878 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:02:00,878 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 23:02:00,878 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:02:00,878 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,878 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 23:02:00,878 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 23:02:00,878 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 23:02:00,878 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 23:02:00,879 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 23:02:00,879 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,879 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 23:02:00,879 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 23:02:00,880 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 23:02:00,880 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 23:02:00,880 DEBUG PropertyBinder: Building property questionId
2024-06-03 23:02:00,882 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:02:00,889 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 23:02:00,889 DEBUG EntityBinder: Import with entity name Game
2024-06-03 23:02:00,890 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 23:02:00,890 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:02:00,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,893 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:02:00,893 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:02:00,911 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:02:00,911 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 23:02:00,911 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:02:00,911 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 23:02:00,911 DEBUG PropertyBinder: Building property id
2024-06-03 23:02:00,911 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:02:00,912 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,912 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 23:02:00,912 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 23:02:00,912 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 23:02:00,912 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 23:02:00,912 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 23:02:00,912 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,913 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:02:00,913 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 23:02:00,913 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:02:00,913 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 23:02:00,913 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:02:00,913 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,913 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:02:00,913 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 23:02:00,913 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:02:00,914 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 23:02:00,914 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:02:00,914 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,914 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:02:00,914 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 23:02:00,914 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:02:00,914 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 23:02:00,914 DEBUG PropertyBinder: Building property questId
2024-06-03 23:02:00,914 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,915 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 23:02:00,915 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 23:02:00,915 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 23:02:00,915 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 23:02:00,915 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 23:02:00,916 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:02:00,916 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 23:02:00,922 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 23:02:00,923 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 23:02:00,923 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 23:02:00,924 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:02:00,929 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,929 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:02:00,929 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:02:00,929 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:02:00,929 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 23:02:00,929 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:02:00,929 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 23:02:00,929 DEBUG PropertyBinder: Building property id
2024-06-03 23:02:00,930 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:02:00,930 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,930 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 23:02:00,930 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 23:02:00,930 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 23:02:00,930 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 23:02:00,930 DEBUG PropertyBinder: Building property description
2024-06-03 23:02:00,931 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 23:02:00,931 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:02:00,931 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 23:02:00,931 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:02:00,931 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 23:02:00,931 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:02:00,931 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,932 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:02:00,932 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 23:02:00,932 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:02:00,932 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 23:02:00,932 DEBUG PropertyBinder: Building property name
2024-06-03 23:02:00,932 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 23:02:00,932 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 23:02:00,932 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 23:02:00,932 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 23:02:00,932 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 23:02:00,933 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 23:02:00,933 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:02:00,934 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 23:02:00,935 DEBUG EntityBinder: Import with entity name Question
2024-06-03 23:02:00,935 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 23:02:00,935 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:02:00,937 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,937 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:02:00,937 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:02:00,938 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:02:00,938 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 23:02:00,938 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:02:00,938 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 23:02:00,938 DEBUG PropertyBinder: Building property id
2024-06-03 23:02:00,938 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:02:00,939 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,939 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:02:00,939 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 23:02:00,939 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:02:00,939 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 23:02:00,940 DEBUG PropertyBinder: Building property questId
2024-06-03 23:02:00,940 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,941 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 23:02:00,941 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 23:02:00,941 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 23:02:00,941 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 23:02:00,941 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 23:02:00,942 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:02:00,943 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 23:02:00,944 DEBUG EntityBinder: Import with entity name User
2024-06-03 23:02:00,944 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 23:02:00,945 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:02:00,947 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,947 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:02:00,947 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:02:00,947 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:02:00,947 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 23:02:00,947 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:02:00,947 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 23:02:00,948 DEBUG PropertyBinder: Building property id
2024-06-03 23:02:00,948 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:02:00,948 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,948 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 23:02:00,948 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 23:02:00,949 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 23:02:00,949 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 23:02:00,949 DEBUG PropertyBinder: Building property login
2024-06-03 23:02:00,949 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,949 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:02:00,949 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 23:02:00,949 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:02:00,949 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 23:02:00,949 DEBUG PropertyBinder: Building property name
2024-06-03 23:02:00,950 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,950 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 23:02:00,950 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 23:02:00,950 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 23:02:00,950 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 23:02:00,950 DEBUG PropertyBinder: Building property password
2024-06-03 23:02:00,950 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:02:00,950 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 23:02:00,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 23:02:00,951 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 23:02:00,951 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 23:02:00,951 DEBUG PropertyBinder: Building property role
2024-06-03 23:02:00,952 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:02:00,954 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:02:00,959 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 23:02:00,959 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 23:02:00,959 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:02:00,962 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 23:02:00,962 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 23:02:00,962 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:02:00,962 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 23:02:00,962 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:02:00,963 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 23:02:00,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 23:02:00,968 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 23:02:00,968 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 23:02:00,968 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 23:02:00,969 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 23:02:00,969 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 23:02:01,032 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 23:02:01,228 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 23:02:01,277 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:02:01,277 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.repository.UserRepositoryTest,get, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2bc7db89, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 23:02:01,285 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 23:02:01,297 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:02:01,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 23:02:01,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 23:02:01,341 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 23:02:01,341 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 23:02:01,343 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73041b7d] under count; prior registration was null
2024-06-03 23:02:01,343 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5529ff44] under every; prior registration was null
2024-06-03 23:02:01,343 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14447be] under any; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 23:02:01,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 23:02:01,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 23:02:01,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 23:02:01,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 23:02:01,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 23:02:01,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 23:02:01,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 23:02:01,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 23:02:01,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 23:02:01,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b] under sinh; prior registration was null
2024-06-03 23:02:01,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a] under cosh; prior registration was null
2024-06-03 23:02:01,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5] under tanh; prior registration was null
2024-06-03 23:02:01,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2] under pi; prior registration was null
2024-06-03 23:02:01,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0] under log; prior registration was null
2024-06-03 23:02:01,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 23:02:01,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 23:02:01,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 23:02:01,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 23:02:01,348 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 23:02:01,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 23:02:01,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 23:02:01,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 23:02:01,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 23:02:01,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 23:02:01,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 23:02:01,349 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:02:01,350 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7945b206] under position; prior registration was null
2024-06-03 23:02:01,351 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5] under overlay; prior registration was null
2024-06-03 23:02:01,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@65629ac6] under trim; prior registration was null
2024-06-03 23:02:01,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1946384] under cast; prior registration was null
2024-06-03 23:02:01,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ac4c3f7] under collate; prior registration was null
2024-06-03 23:02:01,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70029d2d] under extract; prior registration was null
2024-06-03 23:02:01,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 23:02:01,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 23:02:01,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14168e1] under ifnull; prior registration was null
2024-06-03 23:02:01,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 23:02:01,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 23:02:01,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a2dc0a] under pad; prior registration was null
2024-06-03 23:02:01,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5f366587] under str; prior registration was null
2024-06-03 23:02:01,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13bdf540] under format; prior registration was null
2024-06-03 23:02:01,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7ca16adc] under timestampadd; prior registration was null
2024-06-03 23:02:01,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1903b5d] under timestampdiff; prior registration was null
2024-06-03 23:02:01,361 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 23:02:01,361 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b57479] under current_date; prior registration was null
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29a33620] under current_time; prior registration was null
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ea04cab] under current_timestamp; prior registration was null
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@134f8ef6] under local_date; prior registration was null
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a90265a] under local_time; prior registration was null
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a32191e] under local_datetime; prior registration was null
2024-06-03 23:02:01,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66fbc5e7] under offset_datetime; prior registration was null
2024-06-03 23:02:01,363 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 23:02:01,363 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 23:02:01,363 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 23:02:01,363 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 23:02:01,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9accff0] under instant; prior registration was null
2024-06-03 23:02:01,363 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 23:02:01,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f85217c] under sql; prior registration was null
2024-06-03 23:02:01,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fd7a37] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 23:02:01,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 23:02:01,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2
2024-06-03 23:02:01,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 23:02:01,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 23:02:01,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 23:02:01,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 23:02:01,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 23:02:01,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 23:02:01,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 23:02:01,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 23:02:01,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 23:02:01,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 23:02:01,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 23:02:01,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 23:02:01,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6436e181] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 23:02:01,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 23:02:01,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 23:02:01,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5a90265a
2024-06-03 23:02:01,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a32191e
2024-06-03 23:02:01,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36068727] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 23:02:01,370 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@72543547] under bit_length; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3d88e6b9] under octet_length; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22bf9122] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7945b206
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@208205ed] under bitand; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73afe2b7] under bitor; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9687f55] under bitxor; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5700c9db] under bitnot; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 23:02:01,371 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 23:02:01,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@671d03bb] under median; prior registration was null
2024-06-03 23:02:01,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 23:02:01,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 23:02:01,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 23:02:01,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 23:02:01,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 23:02:01,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 23:02:01,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 23:02:01,373 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 23:02:01,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 23:02:01,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 23:02:01,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 23:02:01,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 23:02:01,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 23:02:01,374 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 23:02:01,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 23:02:01,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 23:02:01,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 23:02:01,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 23:02:01,375 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2173a742] under insert; prior registration was null
2024-06-03 23:02:01,376 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@77f4c040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5
2024-06-03 23:02:01,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 23:02:01,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@606a1bc4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 23:02:01,377 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 23:02:01,378 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 23:02:01,378 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 23:02:01,378 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 23:02:01,378 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 23:02:01,378 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 23:02:01,379 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@41b64020] under listagg; prior registration was null
2024-06-03 23:02:01,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@773014d3] under array; prior registration was null
2024-06-03 23:02:01,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7fedb795] under array_list; prior registration was null
2024-06-03 23:02:01,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@34451ed8] under array_agg; prior registration was null
2024-06-03 23:02:01,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@996a546] under array_position; prior registration was null
2024-06-03 23:02:01,386 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5ff6dd3c] under array_positions; prior registration was null
2024-06-03 23:02:01,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11c713b7] under array_positions_list; prior registration was null
2024-06-03 23:02:01,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2251b3bc] under array_length; prior registration was null
2024-06-03 23:02:01,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6042d663] under array_concat; prior registration was null
2024-06-03 23:02:01,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@3a4aadf8] under array_prepend; prior registration was null
2024-06-03 23:02:01,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7bbfc5ff] under array_append; prior registration was null
2024-06-03 23:02:01,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@67332b1e] under array_contains; prior registration was null
2024-06-03 23:02:01,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7e34b127] under array_contains_nullable; prior registration was null
2024-06-03 23:02:01,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ac91282] under array_overlaps; prior registration was null
2024-06-03 23:02:01,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f79edee] under array_overlaps_nullable; prior registration was null
2024-06-03 23:02:01,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bfae028] under array_get; prior registration was null
2024-06-03 23:02:01,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7a1b8a46] under array_set; prior registration was null
2024-06-03 23:02:01,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 23:02:01,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@59fc6d05] under array_remove_index; prior registration was null
2024-06-03 23:02:01,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78307a56] under array_slice; prior registration was null
2024-06-03 23:02:01,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 23:02:01,396 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40d52be7] under array_trim; prior registration was null
2024-06-03 23:02:01,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@286855ea] under array_fill; prior registration was null
2024-06-03 23:02:01,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64aeaf29] under array_fill_list; prior registration was null
2024-06-03 23:02:01,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1e1232cf] under array_to_string; prior registration was null
2024-06-03 23:02:01,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 23:02:01,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 23:02:01,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 23:02:01,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 23:02:01,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3730f716] under mode; prior registration was null
2024-06-03 23:02:01,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7730ef88] under percentile_cont; prior registration was null
2024-06-03 23:02:01,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@66f5a02e] under percentile_disc; prior registration was null
2024-06-03 23:02:01,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45843650] under rank; prior registration was null
2024-06-03 23:02:01,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@72443081] under dense_rank; prior registration was null
2024-06-03 23:02:01,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@33feda48] under percent_rank; prior registration was null
2024-06-03 23:02:01,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6588b715] under cume_dist; prior registration was null
2024-06-03 23:02:01,401 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@373052b5] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 23:02:01,401 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67e0ff3a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 23:02:01,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3a8cea24] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 23:02:01,405 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2b73bd6b] under trunc; prior registration was null
2024-06-03 23:02:01,405 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 23:02:01,405 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45] under date_trunc; prior registration was null
2024-06-03 23:02:01,413 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 23:02:01,414 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 23:02:01,415 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 23:02:01,416 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 23:02:01,417 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 23:02:01,418 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:02:01,419 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 23:02:01,420 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,421 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 23:02:01,422 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 23:02:01,423 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 23:02:01,424 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 23:02:01,424 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 23:02:01,424 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 23:02:01,424 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 23:02:01,424 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 23:02:01,434 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 23:02:01,543 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:02:01,545 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 23:02:01,666 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:02:01,666 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:02:01,927 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 23:02:01,954 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:02:01,955 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:02:01,977 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 23:02:01,978 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:02:01,978 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:02:02,001 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 23:02:02,002 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:02:02,002 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:02:02,020 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 23:02:02,021 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:02:02,021 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:02:02,035 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 23:02:02,060 DEBUG creation: Starting post-init callbacks
2024-06-03 23:02:02,060 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 23:02:02,061 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 23:02:02,061 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 23:02:02,061 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 23:02:02,061 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 23:02:02,152 DEBUG create: Created new SQL alias : g1_0
2024-06-03 23:02:02,155 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 23:02:02,176 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 23:02:02,179 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 23:02:02,190 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 23:02:02,190 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 23:02:02,190 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 23:02:02,191 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 23:02:02,191 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 23:02:02,191 DEBUG create: Created new SQL alias : a1_0
2024-06-03 23:02:02,191 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 23:02:02,191 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 23:02:02,191 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 23:02:02,191 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 23:02:02,191 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 23:02:02,191 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 23:02:02,191 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 23:02:02,192 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 23:02:02,192 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:02:02,192 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 23:02:02,192 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 23:02:02,192 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 23:02:02,192 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 23:02:02,192 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 23:02:02,192 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 23:02:02,192 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 23:02:02,192 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 23:02:02,192 DEBUG create: Created new SQL alias : u1_0
2024-06-03 23:02:02,193 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 23:02:02,193 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 23:02:02,193 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 23:02:02,193 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 23:02:02,193 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 23:02:02,193 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 23:02:02,193 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 23:02:02,193 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 23:02:02,193 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:02:02,193 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 23:02:02,194 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 23:02:02,194 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 23:02:02,194 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 23:02:02,194 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 23:02:02,194 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 23:02:02,194 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 23:02:02,194 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 23:02:02,225 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 23:02:02,225 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 23:02:02,230 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 23:02:02,231 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 23:02:02,232 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49fe3142] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@73b74615]
2024-06-03 23:02:02,241 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 23:02:02,241 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 23:02:02,247 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 23:02:02,253 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 23:02:02,493 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 23:02:02,494 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 23:02:02,559 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 23:02:02,571 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 23:02:02,587 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 23:02:02,599 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 23:02:02,599 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:02:02,599 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 23:02:02,603 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e029a04
2024-06-03 23:02:02,603 DEBUG SessionFactoryRegistry: Registering SessionFactory: d1e81af4-c964-479b-9763-08ba70e8a836 (<unnamed>)
2024-06-03 23:02:02,603 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 23:02:02,603 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 23:02:02,675 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:02:02,675 DEBUG TransactionImpl: begin
2024-06-03 23:02:02,714 DEBUG ActionQueue: Executing identity-insert immediately
2024-06-03 23:02:02,724 DEBUG SQL: 
    insert 
    into
        users
        (login, name, password, role) 
    values
        (?, ?, ?, ?)
2024-06-03 23:02:02,914 DEBUG IdentifierGeneratorHelper: Natively generated identity (com.javarush.nikolenko.entity.User) : 5
2024-06-03 23:02:02,916 DEBUG ResourceRegistryStandardImpl: HHH000387: ResultSet's statement was not registered
2024-06-03 23:02:02,938 DEBUG ResourceRegistryStandardImpl: Exception clearing maxRows/queryTimeout [Этот statement был закрыт.]
2024-06-03 23:02:02,990 DEBUG TransactionImpl: committing
2024-06-03 23:02:02,992 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:02:02,993 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:02:03,003 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:02:03,003 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:02:03,005 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:02:03,007 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=5, login=testLodin}
2024-06-03 23:02:03,046 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:02:03,047 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:02:03,050 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:02:03,050 DEBUG TransactionImpl: begin
2024-06-03 23:02:03,076 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 23:02:03,091 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1002881295 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 23:02:03,094 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 23:02:03,100 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 5
2024-06-03 23:02:03,101 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#5] : 1717491482
2024-06-03 23:02:03,101 DEBUG results: Extracted JDBC value [1] - [testLodin]
2024-06-03 23:02:03,101 DEBUG results: Extracted JDBC value [2] - [TestName]
2024-06-03 23:02:03,101 DEBUG results: Extracted JDBC value [3] - [testPassword]
2024-06-03 23:02:03,101 DEBUG results: Extracted JDBC value [4] - [ADMIN]
2024-06-03 23:02:03,102 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#5
2024-06-03 23:02:03,102 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6aae82cc
2024-06-03 23:02:03,104 DEBUG TransactionImpl: committing
2024-06-03 23:02:03,104 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:02:03,104 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:02:03,104 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:02:03,104 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:02:03,104 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:02:03,104 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=5, login=testLodin}
2024-06-03 23:02:03,107 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:02:03,107 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:02:03,128 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:02:03,128 DEBUG TransactionImpl: begin
2024-06-03 23:02:03,133 DEBUG TransactionImpl: committing
2024-06-03 23:02:03,133 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:02:03,133 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:02:03,133 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2024-06-03 23:02:03,133 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:02:03,134 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:02:03,134 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=5, login=testLodin}
2024-06-03 23:02:03,137 DEBUG SQL: 
    delete 
    from
        users 
    where
        id=?
2024-06-03 23:02:03,234 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:02:03,234 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:04:15,228 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 23:04:15,264 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 23:04:15,273 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 23:04:15,385 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 23:04:15,389 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 23:04:15,464 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 23:04:15,474 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 23:04:15,779 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 23:04:15,791 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 23:04:15,801 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 23:04:15,806 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 23:04:15,806 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 23:04:15,807 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:04:15,807 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:04:15,807 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 23:04:15,808 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 23:04:15,809 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 23:04:15,810 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:04:15,811 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 23:04:15,812 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 23:04:15,812 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:04:15,813 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 23:04:15,826 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 23:04:15,827 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77a281fc
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77a281fc
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4912d525
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4912d525
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:04:16,016 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4a7761b1
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4a7761b1
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@3e850122
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@27fde870
2024-06-03 23:04:16,017 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@27fde870
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b4c3c29
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5ac7aa18
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:04:16,018 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 23:04:16,019 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5e39850
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@1603dc2f
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1603dc2f
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@398474a2
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:04:16,020 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@78c1a023
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@70abf9b0
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6a10b263
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1d12b024
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@72fe8a4f
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@43effd89
2024-06-03 23:04:16,021 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c16fadb
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@248deced
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2227a6c1
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 23:04:16,022 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 23:04:16,023 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 23:04:16,023 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@f8f56b9
2024-06-03 23:04:16,023 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@f8f56b9
2024-06-03 23:04:16,023 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15fa55a6
2024-06-03 23:04:16,023 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f186450
2024-06-03 23:04:16,023 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7fab4be7
2024-06-03 23:04:16,023 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7fab4be7
2024-06-03 23:04:16,023 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@a64e035
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41c204a0
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@64138b0c
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@64138b0c
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22d9c961
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:04:16,024 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:04:16,025 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@28d79cba
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@782168b7
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 23:04:16,026 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 23:04:16,027 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 23:04:16,027 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 23:04:16,027 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 23:04:16,027 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 23:04:16,027 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 23:04:16,027 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b214b94
2024-06-03 23:04:16,027 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-06-03 23:04:16,032 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@25a73de1
2024-06-03 23:04:16,033 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25a73de1
2024-06-03 23:04:16,034 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@298d9a05
2024-06-03 23:04:16,034 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@58399d82
2024-06-03 23:04:16,034 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@26f96b85
2024-06-03 23:04:16,034 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@46d8f407
2024-06-03 23:04:16,034 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3c0036b
2024-06-03 23:04:16,034 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@17814b1c
2024-06-03 23:04:16,034 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7ac9af2a
2024-06-03 23:04:16,034 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7bb004b8
2024-06-03 23:04:16,035 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@78e89bfe
2024-06-03 23:04:16,087 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 23:04:16,092 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 23:04:16,093 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 23:04:16,093 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 23:04:16,093 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 23:04:16,096 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 23:04:16,096 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 23:04:16,379 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 23:04:16,380 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 23:04:16,380 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 23:04:16,469 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 23:04:16,486 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 23:04:16,509 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 23:04:16,526 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@319c3a25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@238bfd6c)
2024-06-03 23:04:16,527 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ef1695a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58860997)
2024-06-03 23:04:16,534 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 23:04:16,534 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 23:04:16,552 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@8f2098e
2024-06-03 23:04:16,552 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@8f2098e
2024-06-03 23:04:16,552 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@25a73de1`
2024-06-03 23:04:16,559 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 23:04:16,559 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:04:16,559 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:04:16,565 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:04:16,565 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:04:16,565 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:04:16,566 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:04:16,566 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:04:16,566 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:04:16,568 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:04:16,568 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:04:16,568 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:04:16,570 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49fe3142] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@13fed1ec]
2024-06-03 23:04:16,630 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 23:04:16,666 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 23:04:16,677 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 23:04:16,693 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 23:04:16,718 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:04:16,747 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,748 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:04:16,748 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:04:16,753 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:04:16,759 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 23:04:16,763 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:04:16,768 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 23:04:16,769 DEBUG PropertyBinder: Building property id
2024-06-03 23:04:16,775 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:04:16,777 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,777 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 23:04:16,777 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 23:04:16,777 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 23:04:16,777 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 23:04:16,777 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 23:04:16,779 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,779 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 23:04:16,779 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 23:04:16,779 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 23:04:16,779 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 23:04:16,779 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 23:04:16,780 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,780 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:04:16,780 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 23:04:16,780 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:04:16,781 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 23:04:16,781 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:04:16,782 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,783 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 23:04:16,783 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 23:04:16,783 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 23:04:16,783 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 23:04:16,784 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 23:04:16,784 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,784 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 23:04:16,785 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 23:04:16,785 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 23:04:16,785 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 23:04:16,785 DEBUG PropertyBinder: Building property questionId
2024-06-03 23:04:16,786 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:04:16,798 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 23:04:16,799 DEBUG EntityBinder: Import with entity name Game
2024-06-03 23:04:16,799 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 23:04:16,800 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:04:16,804 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,804 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:04:16,804 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:04:16,827 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:04:16,827 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 23:04:16,827 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:04:16,827 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 23:04:16,827 DEBUG PropertyBinder: Building property id
2024-06-03 23:04:16,828 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:04:16,828 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,828 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 23:04:16,828 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 23:04:16,828 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 23:04:16,828 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 23:04:16,828 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 23:04:16,829 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,829 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:04:16,829 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 23:04:16,829 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:04:16,830 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 23:04:16,830 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:04:16,830 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,830 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:04:16,831 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 23:04:16,831 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:04:16,831 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 23:04:16,831 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:04:16,832 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,833 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:04:16,833 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 23:04:16,833 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:04:16,833 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 23:04:16,833 DEBUG PropertyBinder: Building property questId
2024-06-03 23:04:16,833 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,834 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 23:04:16,834 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 23:04:16,834 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 23:04:16,834 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 23:04:16,834 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 23:04:16,835 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:04:16,836 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 23:04:16,845 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 23:04:16,846 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 23:04:16,846 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 23:04:16,846 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:04:16,854 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,854 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:04:16,854 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:04:16,854 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:04:16,854 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 23:04:16,854 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:04:16,855 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 23:04:16,855 DEBUG PropertyBinder: Building property id
2024-06-03 23:04:16,855 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:04:16,855 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,855 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 23:04:16,855 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 23:04:16,855 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 23:04:16,855 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 23:04:16,855 DEBUG PropertyBinder: Building property description
2024-06-03 23:04:16,856 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 23:04:16,856 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:04:16,856 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 23:04:16,856 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:04:16,856 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 23:04:16,857 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:04:16,857 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,857 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:04:16,857 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 23:04:16,857 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:04:16,857 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 23:04:16,857 DEBUG PropertyBinder: Building property name
2024-06-03 23:04:16,858 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 23:04:16,858 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 23:04:16,858 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 23:04:16,858 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 23:04:16,858 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 23:04:16,858 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 23:04:16,859 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:04:16,859 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 23:04:16,860 DEBUG EntityBinder: Import with entity name Question
2024-06-03 23:04:16,860 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 23:04:16,860 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:04:16,864 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,864 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:04:16,865 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:04:16,865 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:04:16,865 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 23:04:16,865 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:04:16,866 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 23:04:16,866 DEBUG PropertyBinder: Building property id
2024-06-03 23:04:16,866 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:04:16,866 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,866 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:04:16,866 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 23:04:16,866 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:04:16,867 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 23:04:16,867 DEBUG PropertyBinder: Building property questId
2024-06-03 23:04:16,867 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,867 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 23:04:16,867 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 23:04:16,867 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 23:04:16,867 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 23:04:16,867 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 23:04:16,868 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:04:16,869 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 23:04:16,869 DEBUG EntityBinder: Import with entity name User
2024-06-03 23:04:16,870 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 23:04:16,870 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:04:16,874 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,874 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:04:16,874 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:04:16,874 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:04:16,874 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 23:04:16,875 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:04:16,875 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 23:04:16,875 DEBUG PropertyBinder: Building property id
2024-06-03 23:04:16,875 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:04:16,875 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,875 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 23:04:16,875 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 23:04:16,875 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 23:04:16,876 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 23:04:16,876 DEBUG PropertyBinder: Building property login
2024-06-03 23:04:16,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,876 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:04:16,876 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 23:04:16,876 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:04:16,876 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 23:04:16,876 DEBUG PropertyBinder: Building property name
2024-06-03 23:04:16,877 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,877 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 23:04:16,877 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 23:04:16,877 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 23:04:16,877 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 23:04:16,877 DEBUG PropertyBinder: Building property password
2024-06-03 23:04:16,877 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:04:16,878 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 23:04:16,878 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 23:04:16,878 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 23:04:16,878 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 23:04:16,878 DEBUG PropertyBinder: Building property role
2024-06-03 23:04:16,879 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:04:16,881 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:04:16,885 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 23:04:16,885 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 23:04:16,886 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:04:16,889 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 23:04:16,890 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 23:04:16,890 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:04:16,890 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 23:04:16,890 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:04:16,890 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:04:16,890 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:04:16,890 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:04:16,891 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 23:04:16,892 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:04:16,892 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 23:04:16,892 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 23:04:16,897 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 23:04:16,897 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 23:04:16,897 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 23:04:16,897 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 23:04:16,897 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 23:04:16,965 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 23:04:17,133 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 23:04:17,177 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:04:17,177 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.repository.UserRepositoryTest,get, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2bc7db89, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 23:04:17,188 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 23:04:17,197 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:04:17,244 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 23:04:17,244 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 23:04:17,245 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 23:04:17,245 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 23:04:17,247 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73041b7d] under count; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5529ff44] under every; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14447be] under any; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 23:04:17,249 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 23:04:17,250 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 23:04:17,250 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 23:04:17,250 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 23:04:17,250 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 23:04:17,251 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 23:04:17,251 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 23:04:17,251 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 23:04:17,251 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 23:04:17,251 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 23:04:17,254 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b] under sinh; prior registration was null
2024-06-03 23:04:17,254 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a] under cosh; prior registration was null
2024-06-03 23:04:17,254 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5] under tanh; prior registration was null
2024-06-03 23:04:17,254 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2] under pi; prior registration was null
2024-06-03 23:04:17,254 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0] under log; prior registration was null
2024-06-03 23:04:17,255 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 23:04:17,255 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 23:04:17,255 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 23:04:17,255 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 23:04:17,255 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 23:04:17,255 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 23:04:17,255 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 23:04:17,256 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 23:04:17,256 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 23:04:17,256 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 23:04:17,256 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 23:04:17,256 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:04:17,257 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7945b206] under position; prior registration was null
2024-06-03 23:04:17,259 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5] under overlay; prior registration was null
2024-06-03 23:04:17,259 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@65629ac6] under trim; prior registration was null
2024-06-03 23:04:17,260 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1946384] under cast; prior registration was null
2024-06-03 23:04:17,260 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ac4c3f7] under collate; prior registration was null
2024-06-03 23:04:17,261 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70029d2d] under extract; prior registration was null
2024-06-03 23:04:17,261 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 23:04:17,261 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 23:04:17,262 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14168e1] under ifnull; prior registration was null
2024-06-03 23:04:17,262 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 23:04:17,262 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 23:04:17,262 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a2dc0a] under pad; prior registration was null
2024-06-03 23:04:17,262 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5f366587] under str; prior registration was null
2024-06-03 23:04:17,263 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13bdf540] under format; prior registration was null
2024-06-03 23:04:17,264 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7ca16adc] under timestampadd; prior registration was null
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1903b5d] under timestampdiff; prior registration was null
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b57479] under current_date; prior registration was null
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29a33620] under current_time; prior registration was null
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ea04cab] under current_timestamp; prior registration was null
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@134f8ef6] under local_date; prior registration was null
2024-06-03 23:04:17,265 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a90265a] under local_time; prior registration was null
2024-06-03 23:04:17,266 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a32191e] under local_datetime; prior registration was null
2024-06-03 23:04:17,266 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66fbc5e7] under offset_datetime; prior registration was null
2024-06-03 23:04:17,266 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 23:04:17,266 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 23:04:17,266 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 23:04:17,266 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 23:04:17,266 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9accff0] under instant; prior registration was null
2024-06-03 23:04:17,266 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f85217c] under sql; prior registration was null
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fd7a37] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5
2024-06-03 23:04:17,267 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 23:04:17,268 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 23:04:17,269 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 23:04:17,269 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 23:04:17,269 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 23:04:17,269 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 23:04:17,269 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 23:04:17,269 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 23:04:17,269 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 23:04:17,269 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 23:04:17,272 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6436e181] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 23:04:17,272 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 23:04:17,272 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 23:04:17,273 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5a90265a
2024-06-03 23:04:17,273 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a32191e
2024-06-03 23:04:17,273 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36068727] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 23:04:17,273 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@72543547] under bit_length; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3d88e6b9] under octet_length; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22bf9122] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7945b206
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@208205ed] under bitand; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73afe2b7] under bitor; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9687f55] under bitxor; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5700c9db] under bitnot; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 23:04:17,274 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@671d03bb] under median; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 23:04:17,275 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 23:04:17,276 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2173a742] under insert; prior registration was null
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@77f4c040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@606a1bc4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 23:04:17,277 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 23:04:17,278 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@41b64020] under listagg; prior registration was null
2024-06-03 23:04:17,279 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@773014d3] under array; prior registration was null
2024-06-03 23:04:17,279 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7fedb795] under array_list; prior registration was null
2024-06-03 23:04:17,280 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@34451ed8] under array_agg; prior registration was null
2024-06-03 23:04:17,282 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@996a546] under array_position; prior registration was null
2024-06-03 23:04:17,285 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5ff6dd3c] under array_positions; prior registration was null
2024-06-03 23:04:17,287 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11c713b7] under array_positions_list; prior registration was null
2024-06-03 23:04:17,287 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2251b3bc] under array_length; prior registration was null
2024-06-03 23:04:17,288 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6042d663] under array_concat; prior registration was null
2024-06-03 23:04:17,289 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@3a4aadf8] under array_prepend; prior registration was null
2024-06-03 23:04:17,289 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7bbfc5ff] under array_append; prior registration was null
2024-06-03 23:04:17,291 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@67332b1e] under array_contains; prior registration was null
2024-06-03 23:04:17,291 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7e34b127] under array_contains_nullable; prior registration was null
2024-06-03 23:04:17,292 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ac91282] under array_overlaps; prior registration was null
2024-06-03 23:04:17,292 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f79edee] under array_overlaps_nullable; prior registration was null
2024-06-03 23:04:17,292 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bfae028] under array_get; prior registration was null
2024-06-03 23:04:17,293 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7a1b8a46] under array_set; prior registration was null
2024-06-03 23:04:17,293 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 23:04:17,293 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@59fc6d05] under array_remove_index; prior registration was null
2024-06-03 23:04:17,293 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78307a56] under array_slice; prior registration was null
2024-06-03 23:04:17,293 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 23:04:17,293 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40d52be7] under array_trim; prior registration was null
2024-06-03 23:04:17,294 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@286855ea] under array_fill; prior registration was null
2024-06-03 23:04:17,295 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64aeaf29] under array_fill_list; prior registration was null
2024-06-03 23:04:17,295 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1e1232cf] under array_to_string; prior registration was null
2024-06-03 23:04:17,295 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 23:04:17,295 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 23:04:17,295 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 23:04:17,295 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 23:04:17,296 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3730f716] under mode; prior registration was null
2024-06-03 23:04:17,296 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7730ef88] under percentile_cont; prior registration was null
2024-06-03 23:04:17,296 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@66f5a02e] under percentile_disc; prior registration was null
2024-06-03 23:04:17,296 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45843650] under rank; prior registration was null
2024-06-03 23:04:17,296 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@72443081] under dense_rank; prior registration was null
2024-06-03 23:04:17,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@33feda48] under percent_rank; prior registration was null
2024-06-03 23:04:17,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6588b715] under cume_dist; prior registration was null
2024-06-03 23:04:17,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@373052b5] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 23:04:17,297 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67e0ff3a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 23:04:17,298 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3a8cea24] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 23:04:17,299 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2b73bd6b] under trunc; prior registration was null
2024-06-03 23:04:17,300 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 23:04:17,300 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45] under date_trunc; prior registration was null
2024-06-03 23:04:17,303 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 23:04:17,304 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,305 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,306 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 23:04:17,307 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 23:04:17,308 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 23:04:17,309 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 23:04:17,310 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,311 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 23:04:17,312 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 23:04:17,313 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 23:04:17,314 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 23:04:17,315 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 23:04:17,324 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 23:04:17,413 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:04:17,414 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 23:04:17,503 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:04:17,503 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:04:17,727 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 23:04:17,753 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:04:17,753 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:04:17,773 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 23:04:17,775 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:04:17,775 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:04:17,797 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 23:04:17,797 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:04:17,797 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:04:17,814 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 23:04:17,815 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:04:17,815 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:04:17,830 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 23:04:17,862 DEBUG creation: Starting post-init callbacks
2024-06-03 23:04:17,862 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 23:04:17,863 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 23:04:17,863 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 23:04:17,863 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 23:04:17,863 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 23:04:17,956 DEBUG create: Created new SQL alias : g1_0
2024-06-03 23:04:17,959 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 23:04:17,976 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 23:04:17,979 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 23:04:17,989 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 23:04:17,989 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 23:04:17,989 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 23:04:17,990 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 23:04:17,990 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 23:04:17,990 DEBUG create: Created new SQL alias : a1_0
2024-06-03 23:04:17,990 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 23:04:17,990 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 23:04:17,990 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 23:04:17,990 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 23:04:17,990 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 23:04:17,990 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 23:04:17,990 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 23:04:17,990 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 23:04:17,991 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:04:17,991 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 23:04:17,991 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 23:04:17,991 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 23:04:17,991 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 23:04:17,991 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 23:04:17,991 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 23:04:17,991 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 23:04:17,991 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 23:04:17,991 DEBUG create: Created new SQL alias : u1_0
2024-06-03 23:04:17,991 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 23:04:17,992 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 23:04:17,992 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 23:04:17,992 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 23:04:17,992 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 23:04:17,992 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 23:04:17,992 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 23:04:17,992 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 23:04:17,992 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:04:17,992 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 23:04:17,992 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 23:04:17,992 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 23:04:17,993 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 23:04:17,993 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 23:04:17,993 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 23:04:17,993 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 23:04:17,993 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 23:04:18,028 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 23:04:18,028 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 23:04:18,033 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 23:04:18,034 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 23:04:18,034 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49fe3142] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@73b74615]
2024-06-03 23:04:18,047 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 23:04:18,047 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 23:04:18,052 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 23:04:18,058 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 23:04:18,315 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 23:04:18,315 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 23:04:18,397 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 23:04:18,406 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 23:04:18,418 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 23:04:18,427 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 23:04:18,428 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:04:18,428 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 23:04:18,431 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e029a04
2024-06-03 23:04:18,431 DEBUG SessionFactoryRegistry: Registering SessionFactory: 50fa1815-0f48-402c-a0ad-6f9dfb0dcf68 (<unnamed>)
2024-06-03 23:04:18,431 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 23:04:18,431 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 23:04:18,520 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:04:18,520 DEBUG TransactionImpl: begin
2024-06-03 23:04:18,534 DEBUG ActionQueue: Executing identity-insert immediately
2024-06-03 23:04:18,549 DEBUG SQL: 
    insert 
    into
        users
        (login, name, password, role) 
    values
        (?, ?, ?, ?)
2024-06-03 23:04:18,571 DEBUG IdentifierGeneratorHelper: Natively generated identity (com.javarush.nikolenko.entity.User) : 6
2024-06-03 23:04:18,573 DEBUG ResourceRegistryStandardImpl: HHH000387: ResultSet's statement was not registered
2024-06-03 23:04:18,580 DEBUG ResourceRegistryStandardImpl: Exception clearing maxRows/queryTimeout [Этот statement был закрыт.]
2024-06-03 23:04:18,585 DEBUG TransactionImpl: committing
2024-06-03 23:04:18,586 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:04:18,587 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:04:18,594 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:04:18,594 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:04:18,595 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:04:18,596 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=6, login=testLodin}
2024-06-03 23:04:18,657 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:04:18,658 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:04:18,661 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:04:18,661 DEBUG TransactionImpl: begin
2024-06-03 23:04:18,698 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 23:04:18,730 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1002881295 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 23:04:18,738 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 23:04:18,746 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 6
2024-06-03 23:04:18,748 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#6] : 1717491482
2024-06-03 23:04:18,748 DEBUG results: Extracted JDBC value [1] - [testLodin]
2024-06-03 23:04:18,749 DEBUG results: Extracted JDBC value [2] - [TestName]
2024-06-03 23:04:18,749 DEBUG results: Extracted JDBC value [3] - [testPassword]
2024-06-03 23:04:18,749 DEBUG results: Extracted JDBC value [4] - [ADMIN]
2024-06-03 23:04:18,751 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#6
2024-06-03 23:04:18,751 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6aae82cc
2024-06-03 23:04:18,754 DEBUG TransactionImpl: committing
2024-06-03 23:04:18,754 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:04:18,754 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:04:18,754 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:04:18,754 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:04:18,754 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:04:18,754 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=6, login=testLodin}
2024-06-03 23:04:18,757 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:04:18,757 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:04:18,781 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:04:18,781 DEBUG TransactionImpl: begin
2024-06-03 23:04:18,791 DEBUG TransactionImpl: committing
2024-06-03 23:04:18,791 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:04:18,791 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:04:18,791 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2024-06-03 23:04:18,791 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:04:18,791 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:04:18,791 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=6, login=testLodin}
2024-06-03 23:04:18,797 DEBUG SQL: 
    delete 
    from
        users 
    where
        id=?
2024-06-03 23:04:18,912 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:04:18,912 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:05:55,407 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 23:05:55,435 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 23:05:55,443 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 23:05:55,555 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 23:05:55,558 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 23:05:55,616 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 23:05:55,633 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 23:05:55,898 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 23:05:55,909 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 23:05:55,918 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 23:05:55,924 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 23:05:55,925 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 23:05:55,926 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:05:55,926 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:05:55,927 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 23:05:55,929 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 23:05:55,930 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 23:05:55,931 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:05:55,932 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 23:05:55,933 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 23:05:55,933 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:05:55,934 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 23:05:55,944 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 23:05:55,945 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 23:05:56,126 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:05:56,127 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:05:56,127 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:05:56,127 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77a281fc
2024-06-03 23:05:56,127 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77a281fc
2024-06-03 23:05:56,127 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4912d525
2024-06-03 23:05:56,127 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4912d525
2024-06-03 23:05:56,127 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:05:56,127 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4a7761b1
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4a7761b1
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@3e850122
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@27fde870
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@27fde870
2024-06-03 23:05:56,128 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b4c3c29
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5ac7aa18
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:05:56,129 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 23:05:56,130 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5e39850
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@1603dc2f
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1603dc2f
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@398474a2
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:05:56,131 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@78c1a023
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@70abf9b0
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6a10b263
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1d12b024
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@72fe8a4f
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@43effd89
2024-06-03 23:05:56,132 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c16fadb
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@248deced
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2227a6c1
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 23:05:56,133 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@f8f56b9
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@f8f56b9
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15fa55a6
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f186450
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7fab4be7
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7fab4be7
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@a64e035
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-06-03 23:05:56,134 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41c204a0
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@64138b0c
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@64138b0c
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22d9c961
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:05:56,135 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:05:56,136 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@28d79cba
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@782168b7
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 23:05:56,137 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 23:05:56,138 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 23:05:56,138 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 23:05:56,138 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b214b94
2024-06-03 23:05:56,138 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-06-03 23:05:56,143 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@25a73de1
2024-06-03 23:05:56,144 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25a73de1
2024-06-03 23:05:56,145 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@298d9a05
2024-06-03 23:05:56,145 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@58399d82
2024-06-03 23:05:56,145 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@26f96b85
2024-06-03 23:05:56,145 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@46d8f407
2024-06-03 23:05:56,145 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3c0036b
2024-06-03 23:05:56,145 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@17814b1c
2024-06-03 23:05:56,146 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7ac9af2a
2024-06-03 23:05:56,146 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7bb004b8
2024-06-03 23:05:56,146 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@78e89bfe
2024-06-03 23:05:56,182 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 23:05:56,188 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 23:05:56,188 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 23:05:56,188 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 23:05:56,188 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 23:05:56,192 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 23:05:56,192 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 23:05:56,450 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 23:05:56,450 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 23:05:56,451 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 23:05:56,530 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 23:05:56,543 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 23:05:56,565 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 23:05:56,582 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@319c3a25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@238bfd6c)
2024-06-03 23:05:56,583 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ef1695a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58860997)
2024-06-03 23:05:56,587 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 23:05:56,587 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 23:05:56,607 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@8f2098e
2024-06-03 23:05:56,607 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@8f2098e
2024-06-03 23:05:56,608 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@25a73de1`
2024-06-03 23:05:56,617 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 23:05:56,617 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:05:56,617 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:05:56,623 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:05:56,623 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:05:56,623 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:05:56,623 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:05:56,623 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:05:56,623 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:05:56,624 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:05:56,625 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:05:56,625 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:05:56,628 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49fe3142] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@13fed1ec]
2024-06-03 23:05:56,718 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 23:05:56,761 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 23:05:56,773 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 23:05:56,785 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 23:05:56,810 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:05:56,841 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,843 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:05:56,843 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:05:56,848 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:05:56,856 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 23:05:56,861 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:05:56,866 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 23:05:56,867 DEBUG PropertyBinder: Building property id
2024-06-03 23:05:56,872 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:05:56,874 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,874 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 23:05:56,874 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 23:05:56,874 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 23:05:56,874 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 23:05:56,875 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 23:05:56,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,876 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 23:05:56,876 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 23:05:56,876 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 23:05:56,876 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 23:05:56,877 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 23:05:56,877 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,877 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:05:56,877 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 23:05:56,878 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:05:56,878 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 23:05:56,878 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:05:56,878 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,878 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 23:05:56,878 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 23:05:56,878 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 23:05:56,878 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 23:05:56,878 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 23:05:56,879 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,879 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 23:05:56,879 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 23:05:56,879 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 23:05:56,879 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 23:05:56,879 DEBUG PropertyBinder: Building property questionId
2024-06-03 23:05:56,881 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:05:56,891 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 23:05:56,892 DEBUG EntityBinder: Import with entity name Game
2024-06-03 23:05:56,892 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 23:05:56,892 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:05:56,894 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,895 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:05:56,895 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:05:56,918 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:05:56,919 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 23:05:56,919 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:05:56,919 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 23:05:56,919 DEBUG PropertyBinder: Building property id
2024-06-03 23:05:56,920 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:05:56,920 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,920 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 23:05:56,920 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 23:05:56,920 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 23:05:56,920 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 23:05:56,920 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 23:05:56,921 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,921 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:05:56,921 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 23:05:56,921 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:05:56,921 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 23:05:56,921 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:05:56,921 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,921 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:05:56,922 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 23:05:56,922 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:05:56,922 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 23:05:56,922 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:05:56,922 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,922 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:05:56,922 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 23:05:56,923 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:05:56,923 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 23:05:56,923 DEBUG PropertyBinder: Building property questId
2024-06-03 23:05:56,923 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,923 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 23:05:56,924 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 23:05:56,924 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 23:05:56,924 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 23:05:56,924 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 23:05:56,925 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:05:56,926 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 23:05:56,934 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 23:05:56,934 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 23:05:56,934 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 23:05:56,935 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:05:56,940 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,941 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:05:56,941 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:05:56,941 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:05:56,941 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 23:05:56,941 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:05:56,941 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 23:05:56,941 DEBUG PropertyBinder: Building property id
2024-06-03 23:05:56,942 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:05:56,942 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,942 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 23:05:56,942 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 23:05:56,942 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 23:05:56,942 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 23:05:56,942 DEBUG PropertyBinder: Building property description
2024-06-03 23:05:56,943 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 23:05:56,943 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:05:56,943 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 23:05:56,943 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:05:56,943 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 23:05:56,943 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:05:56,944 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,944 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:05:56,944 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 23:05:56,944 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:05:56,944 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 23:05:56,945 DEBUG PropertyBinder: Building property name
2024-06-03 23:05:56,945 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 23:05:56,945 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 23:05:56,945 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 23:05:56,945 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 23:05:56,945 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 23:05:56,945 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 23:05:56,946 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:05:56,947 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 23:05:56,947 DEBUG EntityBinder: Import with entity name Question
2024-06-03 23:05:56,947 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 23:05:56,948 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:05:56,950 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,950 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:05:56,951 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:05:56,951 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:05:56,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 23:05:56,951 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:05:56,951 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 23:05:56,951 DEBUG PropertyBinder: Building property id
2024-06-03 23:05:56,951 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:05:56,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,951 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:05:56,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 23:05:56,951 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:05:56,951 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 23:05:56,951 DEBUG PropertyBinder: Building property questId
2024-06-03 23:05:56,952 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,952 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 23:05:56,952 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 23:05:56,952 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 23:05:56,952 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 23:05:56,952 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 23:05:56,953 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:05:56,954 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 23:05:56,955 DEBUG EntityBinder: Import with entity name User
2024-06-03 23:05:56,955 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 23:05:56,955 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:05:56,958 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,958 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:05:56,958 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:05:56,958 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:05:56,958 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 23:05:56,958 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:05:56,959 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 23:05:56,959 DEBUG PropertyBinder: Building property id
2024-06-03 23:05:56,959 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:05:56,959 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,959 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 23:05:56,959 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 23:05:56,959 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 23:05:56,959 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 23:05:56,959 DEBUG PropertyBinder: Building property login
2024-06-03 23:05:56,960 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,960 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:05:56,960 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 23:05:56,960 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:05:56,960 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 23:05:56,960 DEBUG PropertyBinder: Building property name
2024-06-03 23:05:56,960 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,960 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 23:05:56,960 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 23:05:56,960 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 23:05:56,960 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 23:05:56,961 DEBUG PropertyBinder: Building property password
2024-06-03 23:05:56,961 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:05:56,961 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 23:05:56,961 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 23:05:56,961 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 23:05:56,961 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 23:05:56,961 DEBUG PropertyBinder: Building property role
2024-06-03 23:05:56,962 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:05:56,964 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:05:56,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 23:05:56,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 23:05:56,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:05:56,969 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 23:05:56,969 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 23:05:56,969 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:05:56,969 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:05:56,970 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 23:05:56,971 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:05:56,971 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 23:05:56,971 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 23:05:56,974 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 23:05:56,974 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 23:05:56,974 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 23:05:56,974 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 23:05:56,974 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 23:05:57,019 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 23:05:57,196 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 23:05:57,250 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:05:57,250 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.repository.UserRepositoryTest,get, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2bc7db89, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 23:05:57,267 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 23:05:57,277 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:05:57,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 23:05:57,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 23:05:57,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 23:05:57,332 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 23:05:57,334 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73041b7d] under count; prior registration was null
2024-06-03 23:05:57,334 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5529ff44] under every; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14447be] under any; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 23:05:57,335 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 23:05:57,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 23:05:57,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 23:05:57,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 23:05:57,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 23:05:57,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 23:05:57,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 23:05:57,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 23:05:57,336 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 23:05:57,338 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b] under sinh; prior registration was null
2024-06-03 23:05:57,338 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a] under cosh; prior registration was null
2024-06-03 23:05:57,338 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5] under tanh; prior registration was null
2024-06-03 23:05:57,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2] under pi; prior registration was null
2024-06-03 23:05:57,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0] under log; prior registration was null
2024-06-03 23:05:57,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 23:05:57,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 23:05:57,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 23:05:57,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 23:05:57,339 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 23:05:57,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 23:05:57,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 23:05:57,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 23:05:57,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 23:05:57,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 23:05:57,340 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 23:05:57,340 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:05:57,341 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7945b206] under position; prior registration was null
2024-06-03 23:05:57,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5] under overlay; prior registration was null
2024-06-03 23:05:57,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@65629ac6] under trim; prior registration was null
2024-06-03 23:05:57,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1946384] under cast; prior registration was null
2024-06-03 23:05:57,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ac4c3f7] under collate; prior registration was null
2024-06-03 23:05:57,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70029d2d] under extract; prior registration was null
2024-06-03 23:05:57,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 23:05:57,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 23:05:57,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14168e1] under ifnull; prior registration was null
2024-06-03 23:05:57,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 23:05:57,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 23:05:57,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a2dc0a] under pad; prior registration was null
2024-06-03 23:05:57,349 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5f366587] under str; prior registration was null
2024-06-03 23:05:57,350 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13bdf540] under format; prior registration was null
2024-06-03 23:05:57,351 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7ca16adc] under timestampadd; prior registration was null
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1903b5d] under timestampdiff; prior registration was null
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b57479] under current_date; prior registration was null
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29a33620] under current_time; prior registration was null
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ea04cab] under current_timestamp; prior registration was null
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@134f8ef6] under local_date; prior registration was null
2024-06-03 23:05:57,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a90265a] under local_time; prior registration was null
2024-06-03 23:05:57,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a32191e] under local_datetime; prior registration was null
2024-06-03 23:05:57,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66fbc5e7] under offset_datetime; prior registration was null
2024-06-03 23:05:57,353 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 23:05:57,353 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 23:05:57,353 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 23:05:57,353 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 23:05:57,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9accff0] under instant; prior registration was null
2024-06-03 23:05:57,353 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 23:05:57,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f85217c] under sql; prior registration was null
2024-06-03 23:05:57,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fd7a37] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 23:05:57,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2
2024-06-03 23:05:57,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 23:05:57,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 23:05:57,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 23:05:57,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 23:05:57,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 23:05:57,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 23:05:57,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 23:05:57,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 23:05:57,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 23:05:57,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 23:05:57,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 23:05:57,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 23:05:57,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6436e181] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 23:05:57,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 23:05:57,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 23:05:57,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5a90265a
2024-06-03 23:05:57,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a32191e
2024-06-03 23:05:57,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36068727] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 23:05:57,361 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:05:57,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@72543547] under bit_length; prior registration was null
2024-06-03 23:05:57,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3d88e6b9] under octet_length; prior registration was null
2024-06-03 23:05:57,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 23:05:57,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 23:05:57,362 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 23:05:57,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22bf9122] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7945b206
2024-06-03 23:05:57,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@208205ed] under bitand; prior registration was null
2024-06-03 23:05:57,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73afe2b7] under bitor; prior registration was null
2024-06-03 23:05:57,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9687f55] under bitxor; prior registration was null
2024-06-03 23:05:57,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5700c9db] under bitnot; prior registration was null
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@671d03bb] under median; prior registration was null
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 23:05:57,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 23:05:57,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 23:05:57,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 23:05:57,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 23:05:57,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 23:05:57,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 23:05:57,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 23:05:57,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2173a742] under insert; prior registration was null
2024-06-03 23:05:57,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@77f4c040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5
2024-06-03 23:05:57,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 23:05:57,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@606a1bc4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 23:05:57,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 23:05:57,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 23:05:57,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 23:05:57,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 23:05:57,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 23:05:57,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 23:05:57,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@41b64020] under listagg; prior registration was null
2024-06-03 23:05:57,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@773014d3] under array; prior registration was null
2024-06-03 23:05:57,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7fedb795] under array_list; prior registration was null
2024-06-03 23:05:57,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@34451ed8] under array_agg; prior registration was null
2024-06-03 23:05:57,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@996a546] under array_position; prior registration was null
2024-06-03 23:05:57,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5ff6dd3c] under array_positions; prior registration was null
2024-06-03 23:05:57,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11c713b7] under array_positions_list; prior registration was null
2024-06-03 23:05:57,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2251b3bc] under array_length; prior registration was null
2024-06-03 23:05:57,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6042d663] under array_concat; prior registration was null
2024-06-03 23:05:57,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@3a4aadf8] under array_prepend; prior registration was null
2024-06-03 23:05:57,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7bbfc5ff] under array_append; prior registration was null
2024-06-03 23:05:57,386 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@67332b1e] under array_contains; prior registration was null
2024-06-03 23:05:57,386 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7e34b127] under array_contains_nullable; prior registration was null
2024-06-03 23:05:57,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ac91282] under array_overlaps; prior registration was null
2024-06-03 23:05:57,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f79edee] under array_overlaps_nullable; prior registration was null
2024-06-03 23:05:57,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bfae028] under array_get; prior registration was null
2024-06-03 23:05:57,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7a1b8a46] under array_set; prior registration was null
2024-06-03 23:05:57,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 23:05:57,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@59fc6d05] under array_remove_index; prior registration was null
2024-06-03 23:05:57,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78307a56] under array_slice; prior registration was null
2024-06-03 23:05:57,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 23:05:57,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40d52be7] under array_trim; prior registration was null
2024-06-03 23:05:57,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@286855ea] under array_fill; prior registration was null
2024-06-03 23:05:57,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64aeaf29] under array_fill_list; prior registration was null
2024-06-03 23:05:57,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1e1232cf] under array_to_string; prior registration was null
2024-06-03 23:05:57,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 23:05:57,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 23:05:57,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 23:05:57,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 23:05:57,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3730f716] under mode; prior registration was null
2024-06-03 23:05:57,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7730ef88] under percentile_cont; prior registration was null
2024-06-03 23:05:57,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@66f5a02e] under percentile_disc; prior registration was null
2024-06-03 23:05:57,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45843650] under rank; prior registration was null
2024-06-03 23:05:57,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@72443081] under dense_rank; prior registration was null
2024-06-03 23:05:57,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@33feda48] under percent_rank; prior registration was null
2024-06-03 23:05:57,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6588b715] under cume_dist; prior registration was null
2024-06-03 23:05:57,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@373052b5] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 23:05:57,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67e0ff3a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 23:05:57,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3a8cea24] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 23:05:57,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2b73bd6b] under trunc; prior registration was null
2024-06-03 23:05:57,398 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 23:05:57,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45] under date_trunc; prior registration was null
2024-06-03 23:05:57,403 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 23:05:57,403 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 23:05:57,403 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 23:05:57,403 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 23:05:57,404 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 23:05:57,405 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 23:05:57,406 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 23:05:57,407 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 23:05:57,408 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 23:05:57,409 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 23:05:57,410 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 23:05:57,411 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,412 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 23:05:57,413 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:05:57,414 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 23:05:57,415 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 23:05:57,423 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 23:05:57,499 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:05:57,500 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 23:05:57,592 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:05:57,592 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:05:57,819 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 23:05:57,843 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:05:57,843 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:05:57,865 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 23:05:57,866 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:05:57,866 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:05:57,887 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 23:05:57,888 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:05:57,888 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:05:57,902 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 23:05:57,903 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:05:57,903 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:05:57,920 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 23:05:57,962 DEBUG creation: Starting post-init callbacks
2024-06-03 23:05:57,962 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 23:05:57,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 23:05:57,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 23:05:57,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 23:05:57,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 23:05:58,077 DEBUG create: Created new SQL alias : g1_0
2024-06-03 23:05:58,079 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 23:05:58,100 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 23:05:58,104 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 23:05:58,114 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 23:05:58,114 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 23:05:58,114 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 23:05:58,114 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 23:05:58,114 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 23:05:58,114 DEBUG create: Created new SQL alias : a1_0
2024-06-03 23:05:58,114 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 23:05:58,115 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 23:05:58,115 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 23:05:58,115 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 23:05:58,115 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 23:05:58,115 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 23:05:58,115 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 23:05:58,115 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 23:05:58,115 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:05:58,115 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 23:05:58,116 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 23:05:58,116 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 23:05:58,116 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 23:05:58,116 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 23:05:58,116 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 23:05:58,116 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 23:05:58,116 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 23:05:58,116 DEBUG create: Created new SQL alias : u1_0
2024-06-03 23:05:58,116 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 23:05:58,116 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 23:05:58,116 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 23:05:58,117 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 23:05:58,117 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 23:05:58,117 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 23:05:58,117 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 23:05:58,117 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 23:05:58,117 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:05:58,117 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 23:05:58,117 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 23:05:58,117 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 23:05:58,117 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 23:05:58,118 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 23:05:58,118 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 23:05:58,118 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 23:05:58,118 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 23:05:58,148 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 23:05:58,148 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 23:05:58,153 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 23:05:58,153 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 23:05:58,154 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49fe3142] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@73b74615]
2024-06-03 23:05:58,164 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 23:05:58,164 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 23:05:58,169 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 23:05:58,174 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 23:05:58,430 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 23:05:58,431 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 23:05:58,498 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 23:05:58,509 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 23:05:58,523 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 23:05:58,544 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 23:05:58,545 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:05:58,545 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 23:05:58,548 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e029a04
2024-06-03 23:05:58,548 DEBUG SessionFactoryRegistry: Registering SessionFactory: 9b986781-1bb2-4dfc-bfc3-f2273e4d0a21 (<unnamed>)
2024-06-03 23:05:58,548 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 23:05:58,548 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 23:05:58,606 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:05:58,606 DEBUG TransactionImpl: begin
2024-06-03 23:05:58,626 DEBUG ActionQueue: Executing identity-insert immediately
2024-06-03 23:05:58,639 DEBUG SQL: 
    insert 
    into
        users
        (login, name, password, role) 
    values
        (?, ?, ?, ?)
2024-06-03 23:05:58,658 DEBUG IdentifierGeneratorHelper: Natively generated identity (com.javarush.nikolenko.entity.User) : 7
2024-06-03 23:05:58,660 DEBUG ResourceRegistryStandardImpl: HHH000387: ResultSet's statement was not registered
2024-06-03 23:05:58,666 DEBUG ResourceRegistryStandardImpl: Exception clearing maxRows/queryTimeout [Этот statement был закрыт.]
2024-06-03 23:05:58,671 DEBUG TransactionImpl: committing
2024-06-03 23:05:58,672 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:05:58,672 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:05:58,678 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:05:58,679 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:05:58,680 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:05:58,681 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=7, login=testLodin}
2024-06-03 23:05:58,747 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:05:58,748 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:05:58,751 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:05:58,751 DEBUG TransactionImpl: begin
2024-06-03 23:05:58,786 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 23:05:58,808 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1002881295 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 23:05:58,812 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 23:05:58,818 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 7
2024-06-03 23:05:58,819 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#7] : 1717491482
2024-06-03 23:05:58,819 DEBUG results: Extracted JDBC value [1] - [testLodin]
2024-06-03 23:05:58,819 DEBUG results: Extracted JDBC value [2] - [TestName]
2024-06-03 23:05:58,819 DEBUG results: Extracted JDBC value [3] - [testPassword]
2024-06-03 23:05:58,819 DEBUG results: Extracted JDBC value [4] - [ADMIN]
2024-06-03 23:05:58,820 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#7
2024-06-03 23:05:58,821 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6aae82cc
2024-06-03 23:05:58,822 DEBUG TransactionImpl: committing
2024-06-03 23:05:58,823 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:05:58,823 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:05:58,823 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:05:58,823 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:05:58,823 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:05:58,823 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=7, login=testLodin}
2024-06-03 23:05:58,824 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:05:58,824 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:05:58,831 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:05:58,831 DEBUG TransactionImpl: begin
2024-06-03 23:05:58,835 DEBUG TransactionImpl: committing
2024-06-03 23:05:58,835 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:05:58,835 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:05:58,835 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2024-06-03 23:05:58,835 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:05:58,835 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:05:58,835 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=7, login=testLodin}
2024-06-03 23:05:58,839 DEBUG SQL: 
    delete 
    from
        users 
    where
        id=?
2024-06-03 23:05:58,891 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:05:58,891 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:34,293 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 23:08:34,321 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 23:08:34,331 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 23:08:34,437 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 23:08:34,442 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 23:08:34,496 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 23:08:34,504 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 23:08:34,803 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 23:08:34,817 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 23:08:34,835 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 23:08:34,841 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 23:08:34,842 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 23:08:34,843 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:08:34,843 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:08:34,844 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 23:08:34,845 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 23:08:34,846 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 23:08:34,849 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:08:34,850 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 23:08:34,851 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 23:08:34,852 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:08:34,853 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 23:08:34,871 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 23:08:34,873 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 23:08:35,174 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@388b401d
2024-06-03 23:08:35,174 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@388b401d
2024-06-03 23:08:35,174 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@388b401d
2024-06-03 23:08:35,174 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2bcec6a6
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@77a281fc
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@77a281fc
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4912d525
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4912d525
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2bfbffb2
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@765df79d
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@151335cb
2024-06-03 23:08:35,176 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@4a7761b1
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@3e850122
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3e850122
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@27fde870
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2b4c3c29
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@5ac7aa18
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@5ac7aa18
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ac7aa18
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4cdd2c73
2024-06-03 23:08:35,177 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:08:35,178 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:08:35,178 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4abf3f0
2024-06-03 23:08:35,178 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:08:35,178 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:08:35,178 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4e4c3a38
2024-06-03 23:08:35,178 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:08:35,178 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@293cde83
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@c27d163
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@57c88764
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@78faea5f
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@37fdfb05
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@5e39850
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5e39850
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1603dc2f
2024-06-03 23:08:35,180 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@398474a2
2024-06-03 23:08:35,182 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@398474a2
2024-06-03 23:08:35,182 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@398474a2
2024-06-03 23:08:35,182 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@61799544
2024-06-03 23:08:35,182 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@78c1a023
2024-06-03 23:08:35,182 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@70abf9b0
2024-06-03 23:08:35,183 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@6a10b263
2024-06-03 23:08:35,183 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6a10b263
2024-06-03 23:08:35,183 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 23:08:35,183 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@476ec9d0
2024-06-03 23:08:35,183 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@325bb9a6
2024-06-03 23:08:35,183 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1d12b024
2024-06-03 23:08:35,184 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@72fe8a4f
2024-06-03 23:08:35,184 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@43effd89
2024-06-03 23:08:35,184 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2c16fadb
2024-06-03 23:08:35,184 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@248deced
2024-06-03 23:08:35,184 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2227a6c1
2024-06-03 23:08:35,184 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2227a6c1
2024-06-03 23:08:35,184 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 23:08:35,185 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1e9804b9
2024-06-03 23:08:35,185 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 23:08:35,185 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@543e593
2024-06-03 23:08:35,186 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 23:08:35,186 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4e628b52
2024-06-03 23:08:35,186 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 23:08:35,186 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@51ec2df1
2024-06-03 23:08:35,186 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f8f56b9
2024-06-03 23:08:35,187 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15fa55a6
2024-06-03 23:08:35,187 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4f186450
2024-06-03 23:08:35,187 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4f186450
2024-06-03 23:08:35,187 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7fab4be7
2024-06-03 23:08:35,187 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a64e035
2024-06-03 23:08:35,188 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-06-03 23:08:35,188 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@41c204a0
2024-06-03 23:08:35,188 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@41c204a0
2024-06-03 23:08:35,188 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@64138b0c
2024-06-03 23:08:35,188 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-06-03 23:08:35,189 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@22d9c961
2024-06-03 23:08:35,189 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@22d9c961
2024-06-03 23:08:35,189 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 23:08:35,189 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-06-03 23:08:35,189 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@bdc8014
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1f443fae
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-06-03 23:08:35,190 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:08:35,191 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:08:35,191 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@281f23f2
2024-06-03 23:08:35,191 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@87abc48
2024-06-03 23:08:35,191 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@28d79cba
2024-06-03 23:08:35,191 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@782168b7
2024-06-03 23:08:35,191 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@782168b7
2024-06-03 23:08:35,192 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:08:35,192 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:08:35,192 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-06-03 23:08:35,192 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:08:35,192 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7435a578
2024-06-03 23:08:35,192 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 23:08:35,192 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6093d508
2024-06-03 23:08:35,192 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 23:08:35,193 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@13047d7d
2024-06-03 23:08:35,193 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 23:08:35,193 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-06-03 23:08:35,193 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 23:08:35,193 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65bb9029
2024-06-03 23:08:35,194 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-06-03 23:08:35,194 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2b214b94
2024-06-03 23:08:35,206 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@50d3bf39
2024-06-03 23:08:35,206 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@50d3bf39
2024-06-03 23:08:35,209 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@6bd16207
2024-06-03 23:08:35,209 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@298d9a05
2024-06-03 23:08:35,211 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@58399d82
2024-06-03 23:08:35,211 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@26f96b85
2024-06-03 23:08:35,211 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@46d8f407
2024-06-03 23:08:35,211 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3c0036b
2024-06-03 23:08:35,211 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@17814b1c
2024-06-03 23:08:35,211 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7ac9af2a
2024-06-03 23:08:35,211 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7bb004b8
2024-06-03 23:08:35,264 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 23:08:35,274 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 23:08:35,275 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 23:08:35,275 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 23:08:35,276 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 23:08:35,283 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 23:08:35,284 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 23:08:35,569 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-06-03 23:08:35,613 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-06-03 23:08:35,627 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-06-03 23:08:35,690 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 23:08:35,690 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 23:08:35,691 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 23:08:35,759 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-06-03 23:08:35,765 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-06-03 23:08:35,811 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 23:08:35,841 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 23:08:35,865 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-06-03 23:08:35,872 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 23:08:35,884 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-06-03 23:08:35,898 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@68e7c8c3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@319c3a25)
2024-06-03 23:08:35,899 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@238bfd6c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ef1695a)
2024-06-03 23:08:35,904 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 23:08:35,905 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 23:08:35,928 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@44c13103
2024-06-03 23:08:35,928 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@44c13103
2024-06-03 23:08:35,928 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@50d3bf39`
2024-06-03 23:08:35,938 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 23:08:35,939 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:08:35,939 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:08:35,949 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:08:35,949 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:08:35,949 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:08:35,949 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:08:35,949 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:08:35,950 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:08:35,952 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:08:35,952 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:08:35,952 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:08:35,955 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@381d7219] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@49fe3142]
2024-06-03 23:08:36,067 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 23:08:36,144 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 23:08:36,167 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 23:08:36,186 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 23:08:36,213 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:36,262 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,266 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:08:36,267 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:08:36,277 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:36,287 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 23:08:36,295 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:36,303 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 23:08:36,305 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:36,313 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:36,317 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,317 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 23:08:36,317 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 23:08:36,317 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 23:08:36,317 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 23:08:36,317 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 23:08:36,319 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,319 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 23:08:36,319 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 23:08:36,320 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 23:08:36,320 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 23:08:36,320 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 23:08:36,320 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,321 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:08:36,321 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 23:08:36,321 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:08:36,321 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 23:08:36,321 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:08:36,322 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,322 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 23:08:36,322 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 23:08:36,322 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 23:08:36,323 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 23:08:36,323 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 23:08:36,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,324 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 23:08:36,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 23:08:36,324 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 23:08:36,324 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 23:08:36,325 DEBUG PropertyBinder: Building property questionId
2024-06-03 23:08:36,326 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:36,337 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 23:08:36,338 DEBUG EntityBinder: Import with entity name Game
2024-06-03 23:08:36,338 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 23:08:36,339 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:36,343 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,344 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:08:36,344 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:08:36,369 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:36,369 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 23:08:36,369 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:36,370 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 23:08:36,370 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:36,370 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:36,371 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,371 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 23:08:36,371 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 23:08:36,371 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 23:08:36,371 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 23:08:36,372 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 23:08:36,372 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,372 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:08:36,373 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 23:08:36,373 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:08:36,373 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 23:08:36,373 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:08:36,374 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,374 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:08:36,374 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 23:08:36,374 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:08:36,374 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 23:08:36,375 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:08:36,375 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,375 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:08:36,375 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 23:08:36,376 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:08:36,376 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 23:08:36,376 DEBUG PropertyBinder: Building property questId
2024-06-03 23:08:36,376 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,377 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 23:08:36,377 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 23:08:36,377 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 23:08:36,377 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 23:08:36,377 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 23:08:36,378 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:36,379 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 23:08:36,388 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 23:08:36,389 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 23:08:36,390 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 23:08:36,390 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:36,397 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,397 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:08:36,397 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:08:36,398 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:36,398 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 23:08:36,398 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:36,398 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 23:08:36,398 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:36,398 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:36,399 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,399 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 23:08:36,399 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 23:08:36,399 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 23:08:36,400 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 23:08:36,400 DEBUG PropertyBinder: Building property description
2024-06-03 23:08:36,401 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 23:08:36,401 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:08:36,401 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 23:08:36,401 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:08:36,402 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 23:08:36,402 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:08:36,402 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,403 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:08:36,403 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 23:08:36,403 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:08:36,403 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 23:08:36,403 DEBUG PropertyBinder: Building property name
2024-06-03 23:08:36,404 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 23:08:36,404 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 23:08:36,404 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 23:08:36,404 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 23:08:36,404 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 23:08:36,404 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 23:08:36,405 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:36,406 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 23:08:36,407 DEBUG EntityBinder: Import with entity name Question
2024-06-03 23:08:36,407 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 23:08:36,407 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:36,411 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,411 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:08:36,411 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:08:36,412 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:36,412 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 23:08:36,412 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:36,412 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 23:08:36,412 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:36,412 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:36,413 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,413 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:08:36,413 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 23:08:36,413 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:08:36,413 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 23:08:36,413 DEBUG PropertyBinder: Building property questId
2024-06-03 23:08:36,414 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,414 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 23:08:36,414 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 23:08:36,414 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 23:08:36,414 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 23:08:36,414 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 23:08:36,415 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:36,417 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 23:08:36,418 DEBUG EntityBinder: Import with entity name User
2024-06-03 23:08:36,418 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 23:08:36,419 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:36,422 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,423 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:08:36,423 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:08:36,423 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:36,423 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 23:08:36,423 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:36,424 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 23:08:36,424 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:36,424 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:36,424 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,425 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 23:08:36,425 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 23:08:36,425 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 23:08:36,425 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 23:08:36,425 DEBUG PropertyBinder: Building property login
2024-06-03 23:08:36,425 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,425 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:08:36,425 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 23:08:36,426 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:08:36,426 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 23:08:36,426 DEBUG PropertyBinder: Building property name
2024-06-03 23:08:36,426 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,427 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 23:08:36,427 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 23:08:36,427 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 23:08:36,427 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 23:08:36,427 DEBUG PropertyBinder: Building property password
2024-06-03 23:08:36,427 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:36,428 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 23:08:36,428 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 23:08:36,428 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 23:08:36,428 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 23:08:36,428 DEBUG PropertyBinder: Building property role
2024-06-03 23:08:36,429 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:36,430 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:36,432 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 23:08:36,433 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 23:08:36,433 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:08:36,437 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:36,438 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 23:08:36,439 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:08:36,440 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 23:08:36,440 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 23:08:36,446 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 23:08:36,446 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 23:08:36,446 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 23:08:36,446 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 23:08:36,446 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 23:08:36,454 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-06-03 23:08:36,470 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-06-03 23:08:36,496 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-06-03 23:08:36,507 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-06-03 23:08:36,508 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-06-03 23:08:36,510 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:08:36,510 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-06-03 23:08:36,511 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-06-03 23:08:36,513 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-06-03 23:08:36,514 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-06-03 23:08:36,517 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:08:36,519 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-06-03 23:08:36,520 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-06-03 23:08:36,520 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-06-03 23:08:36,522 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-06-03 23:08:36,542 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 23:08:36,542 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-06-03 23:08:36,545 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-06-03 23:08:36,797 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 23:08:36,862 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:08:36,862 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.repository.UserRepositoryTest,get, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@66223d94, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 23:08:36,875 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 23:08:36,887 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:08:36,964 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 23:08:36,964 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 23:08:36,964 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@34fe326d
2024-06-03 23:08:36,964 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@34fe326d
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@34fe326d
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@30a7c98f
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@30a7c98f
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@36361ddb
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@36361ddb
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@41fed14f
2024-06-03 23:08:36,965 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@41fed14f
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d6ee47
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d6ee47
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d6ee47
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@a33b4e3
2024-06-03 23:08:36,965 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@a33b4e3
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@a33b4e3
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@c6da8bb
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@c6da8bb
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@3bae64d0
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@8b91134
2024-06-03 23:08:36,966 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@8b91134
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1fba386c
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7e736350
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@36b310aa
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@36b310aa
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@36b310aa
2024-06-03 23:08:36,966 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@76c387f9
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@76c387f9
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@76c387f9
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@3874b815
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@3874b815
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3874b815
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@5d7835a8
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@5d7835a8
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5d7835a8
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@736048ed
2024-06-03 23:08:36,967 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@736048ed
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@736048ed
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1976f537
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1976f537
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@45f421c
2024-06-03 23:08:36,968 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7e1ffe70] under count; prior registration was null
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@45f421c
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@1816e24a
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@1816e24a
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1816e24a
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6940f685
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@47b179d7
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@47b179d7
2024-06-03 23:08:36,968 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@39008c9f
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@162b3d47
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@162b3d47
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@162b3d47
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@783115d9
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@3402b4c9
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@95bb2a2
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@46d567cb
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@46d567cb
2024-06-03 23:08:36,969 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72906e] under every; prior registration was null
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@363a3d15
2024-06-03 23:08:36,969 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5529ff44] under any; prior registration was null
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@363a3d15
2024-06-03 23:08:36,969 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@173f73e7
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@43a51d00
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e23c180
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@499683c4
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@25da615a
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4efc25fc
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ee3d262
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ee3d262
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@396e6d9
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@396e6d9
2024-06-03 23:08:36,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 23:08:36,970 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@75308740
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@75308740
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5acc9fdf
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5acc9fdf
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a5c2626
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a5c2626
2024-06-03 23:08:36,971 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e48bf9a
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7fb33394
2024-06-03 23:08:36,971 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 23:08:36,971 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@41bf79da
2024-06-03 23:08:36,971 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 23:08:36,971 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 23:08:36,971 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@41bf79da
2024-06-03 23:08:36,972 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a891add
2024-06-03 23:08:36,972 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 23:08:36,972 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5176d279
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@373f7450
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@d74bac4
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@d74bac4
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5ff90645
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@387bf2d9
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@74aa9c72
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@74aa9c72
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@5c20aab9
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5c20aab9
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b7c4456
2024-06-03 23:08:36,972 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b7c4456
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b7c4456
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2c768ada
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2c768ada
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2c768ada
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@c1fca2a
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5533dc72
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@7c447c76
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7c447c76
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@64fc097e
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@64fc097e
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@64fc097e
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1640c151
2024-06-03 23:08:36,973 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5d5b5fa7
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@2a32fb6
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a32fb6
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@6107165
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6107165
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6107165
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@164a62bf
2024-06-03 23:08:36,974 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3635099] under sinh; prior registration was null
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@164a62bf
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@11ebb1b6
2024-06-03 23:08:36,974 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b] under cosh; prior registration was null
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@11ebb1b6
2024-06-03 23:08:36,974 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a] under tanh; prior registration was null
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@aaee2a2
2024-06-03 23:08:36,974 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5] under pi; prior registration was null
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@aaee2a2
2024-06-03 23:08:36,974 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2] under log; prior registration was null
2024-06-03 23:08:36,974 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f3021cb
2024-06-03 23:08:36,975 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f3021cb
2024-06-03 23:08:36,975 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@4aaae508
2024-06-03 23:08:36,975 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4aaae508
2024-06-03 23:08:36,975 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@6009bea
2024-06-03 23:08:36,975 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7bc6d27a
2024-06-03 23:08:36,975 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 23:08:36,975 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 23:08:36,975 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 23:08:36,975 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 23:08:36,975 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 23:08:36,976 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 23:08:36,976 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 23:08:36,976 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 23:08:36,976 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 23:08:36,976 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 23:08:36,976 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 23:08:36,976 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:08:36,977 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4aa31ffc] under position; prior registration was null
2024-06-03 23:08:36,980 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2a8a3ada] under overlay; prior registration was null
2024-06-03 23:08:36,981 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@373e6b9d] under trim; prior registration was null
2024-06-03 23:08:36,983 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@33bb3f86] under cast; prior registration was null
2024-06-03 23:08:36,984 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1946384] under collate; prior registration was null
2024-06-03 23:08:36,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3c952a33] under extract; prior registration was null
2024-06-03 23:08:36,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 23:08:36,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 23:08:36,986 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@7aa9e414
2024-06-03 23:08:36,986 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7aa9e414
2024-06-03 23:08:36,987 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654e6a90] under ifnull; prior registration was null
2024-06-03 23:08:36,987 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 23:08:36,987 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 23:08:36,988 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@8aeab9e] under pad; prior registration was null
2024-06-03 23:08:36,989 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4be0a27d] under str; prior registration was null
2024-06-03 23:08:36,989 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@4e73b552
2024-06-03 23:08:36,989 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@221dad51
2024-06-03 23:08:36,989 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2cec704c
2024-06-03 23:08:36,990 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@771cbb1a
2024-06-03 23:08:36,990 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2416498e
2024-06-03 23:08:36,990 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6b2e0f78
2024-06-03 23:08:36,990 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@240f6c41
2024-06-03 23:08:36,990 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3659d7b1
2024-06-03 23:08:36,990 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2015b2cd
2024-06-03 23:08:36,991 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@71179b6f] under format; prior registration was null
2024-06-03 23:08:36,992 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4a9860] under timestampadd; prior registration was null
2024-06-03 23:08:36,993 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@34414ffc] under timestampdiff; prior registration was null
2024-06-03 23:08:36,993 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 23:08:36,993 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@627ff1b8] under current_date; prior registration was null
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b57479] under current_time; prior registration was null
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29a33620] under current_timestamp; prior registration was null
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ea04cab] under local_date; prior registration was null
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@134f8ef6] under local_time; prior registration was null
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a90265a] under local_datetime; prior registration was null
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a32191e] under offset_datetime; prior registration was null
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 23:08:36,994 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66fbc5e7] under instant; prior registration was null
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1039bfc4] under sql; prior registration was null
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 23:08:36,995 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f85217c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3635099
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 23:08:36,996 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 23:08:36,997 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 23:08:36,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@e700eba] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 23:08:36,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 23:08:36,998 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 23:08:36,999 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@134f8ef6
2024-06-03 23:08:36,999 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5a90265a
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@65ef48f2] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36068727] under bit_length; prior registration was null
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@72543547] under octet_length; prior registration was null
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d88e6b9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4aa31ffc
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22bf9122] under bitand; prior registration was null
2024-06-03 23:08:37,000 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@208205ed] under bitor; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73afe2b7] under bitxor; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9687f55] under bitnot; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5700c9db] under median; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 23:08:37,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 23:08:37,002 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 23:08:37,003 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 23:08:37,003 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 23:08:37,003 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 23:08:37,003 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 23:08:37,003 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 23:08:37,003 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6babffb5] under insert; prior registration was null
2024-06-03 23:08:37,004 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4b8137c5] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2a8a3ada
2024-06-03 23:08:37,004 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 23:08:37,004 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@77f4c040] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 23:08:37,004 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 23:08:37,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 23:08:37,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 23:08:37,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 23:08:37,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 23:08:37,005 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 23:08:37,006 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@e29f4f6] under listagg; prior registration was null
2024-06-03 23:08:37,008 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@79e7188e] under array; prior registration was null
2024-06-03 23:08:37,008 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@773014d3] under array_list; prior registration was null
2024-06-03 23:08:37,008 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@26865482] under array_agg; prior registration was null
2024-06-03 23:08:37,011 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@750f64fe] under array_position; prior registration was null
2024-06-03 23:08:37,016 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12f279b5] under array_positions; prior registration was null
2024-06-03 23:08:37,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@28157173] under array_positions_list; prior registration was null
2024-06-03 23:08:37,020 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11c713b7] under array_length; prior registration was null
2024-06-03 23:08:37,021 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@18dd5ed3] under array_concat; prior registration was null
2024-06-03 23:08:37,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@38f981b6] under array_prepend; prior registration was null
2024-06-03 23:08:37,023 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@3a4aadf8] under array_append; prior registration was null
2024-06-03 23:08:37,025 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6f5d0190] under array_contains; prior registration was null
2024-06-03 23:08:37,025 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@67332b1e] under array_contains_nullable; prior registration was null
2024-06-03 23:08:37,026 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3d8d17a3] under array_overlaps; prior registration was null
2024-06-03 23:08:37,026 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ac91282] under array_overlaps_nullable; prior registration was null
2024-06-03 23:08:37,027 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5c6a30] under array_get; prior registration was null
2024-06-03 23:08:37,028 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@43f03c23] under array_set; prior registration was null
2024-06-03 23:08:37,028 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 23:08:37,029 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@7f13811b] under array_remove_index; prior registration was null
2024-06-03 23:08:37,029 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59fc6d05] under array_slice; prior registration was null
2024-06-03 23:08:37,030 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 23:08:37,030 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78307a56] under array_trim; prior registration was null
2024-06-03 23:08:37,032 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@7c40ffef] under array_fill; prior registration was null
2024-06-03 23:08:37,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@286855ea] under array_fill_list; prior registration was null
2024-06-03 23:08:37,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@fd413fb] under array_to_string; prior registration was null
2024-06-03 23:08:37,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 23:08:37,034 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 23:08:37,034 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 23:08:37,034 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 23:08:37,035 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7c1a8f0f] under mode; prior registration was null
2024-06-03 23:08:37,036 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3730f716] under percentile_cont; prior registration was null
2024-06-03 23:08:37,036 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7730ef88] under percentile_disc; prior registration was null
2024-06-03 23:08:37,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@e3b0369] under rank; prior registration was null
2024-06-03 23:08:37,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45843650] under dense_rank; prior registration was null
2024-06-03 23:08:37,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@72443081] under percent_rank; prior registration was null
2024-06-03 23:08:37,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@33feda48] under cume_dist; prior registration was null
2024-06-03 23:08:37,038 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@17207f5b] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 23:08:37,038 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@373052b5] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 23:08:37,039 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-06-03 23:08:37,039 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@5af5d76f] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 23:08:37,042 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2921a36a] under trunc; prior registration was null
2024-06-03 23:08:37,042 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 23:08:37,042 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b73bd6b] under date_trunc; prior registration was null
2024-06-03 23:08:37,047 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-06-03 23:08:37,048 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-06-03 23:08:37,048 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-06-03 23:08:37,048 INFO pooling: HHH10001003: Autocommit mode: false
2024-06-03 23:08:37,052 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 23:08:37,052 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 23:08:37,052 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 23:08:37,053 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 23:08:37,054 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 23:08:37,055 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 23:08:37,055 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 23:08:37,055 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 23:08:37,055 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 23:08:37,055 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 23:08:37,055 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 23:08:37,056 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,057 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 23:08:37,057 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 23:08:37,058 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:08:37,058 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:08:37,059 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 23:08:37,060 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:08:37,061 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:08:37,062 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 23:08:37,062 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 23:08:37,062 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 23:08:37,062 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 23:08:37,062 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 23:08:37,062 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 23:08:37,062 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 23:08:37,062 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 23:08:37,063 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,064 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 23:08:37,064 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 23:08:37,064 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,064 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,064 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,064 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,064 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:08:37,065 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 23:08:37,066 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:08:37,067 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 23:08:37,068 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 23:08:37,068 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 23:08:37,068 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 23:08:37,068 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 23:08:37,068 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 23:08:37,068 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 23:08:37,068 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 23:08:37,074 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 23:08:37,200 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:08:37,203 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 23:08:37,329 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:08:37,330 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:08:37,441 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-06-03 23:08:37,441 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-06-03 23:08:37,442 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-06-03 23:08:37,547 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-06-03 23:08:37,566 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-06-03 23:08:37,592 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-06-03 23:08:37,616 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@57f9b467) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6d5c2745)
2024-06-03 23:08:37,616 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@44b29496) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1947596f)
2024-06-03 23:08:37,623 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-06-03 23:08:37,623 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-06-03 23:08:37,648 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4d18b73a
2024-06-03 23:08:37,649 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4d18b73a
2024-06-03 23:08:37,649 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7aa9e414`
2024-06-03 23:08:37,656 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-06-03 23:08:37,656 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:08:37,657 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-06-03 23:08:37,664 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:08:37,665 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:08:37,665 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-06-03 23:08:37,665 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:08:37,665 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:08:37,665 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-06-03 23:08:37,668 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:08:37,668 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:08:37,668 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-06-03 23:08:37,671 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68ac9ec5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a50d709]
2024-06-03 23:08:37,676 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 23:08:37,707 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:08:37,707 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:08:37,734 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 23:08:37,736 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:08:37,736 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:08:37,746 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-06-03 23:08:37,774 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 23:08:37,775 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:08:37,775 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:08:37,799 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 23:08:37,800 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:08:37,800 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:08:37,807 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-06-03 23:08:37,816 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 23:08:37,826 DEBUG EntityBinder: Import with entity name Answer
2024-06-03 23:08:37,838 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-06-03 23:08:37,844 DEBUG creation: Starting post-init callbacks
2024-06-03 23:08:37,844 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 23:08:37,845 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 23:08:37,845 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 23:08:37,845 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 23:08:37,845 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 23:08:37,856 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:37,907 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:37,908 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:08:37,908 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:08:37,914 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:37,921 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-06-03 23:08:37,925 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:37,932 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-06-03 23:08:37,934 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:37,945 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:37,949 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:37,950 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-06-03 23:08:37,950 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-06-03 23:08:37,951 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-06-03 23:08:37,951 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-06-03 23:08:37,951 DEBUG PropertyBinder: Building property answerMessage
2024-06-03 23:08:37,952 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:37,952 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-06-03 23:08:37,953 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-06-03 23:08:37,953 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-06-03 23:08:37,953 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-06-03 23:08:37,953 DEBUG PropertyBinder: Building property finalMessage
2024-06-03 23:08:37,954 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:37,954 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:08:37,955 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-06-03 23:08:37,955 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:08:37,955 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-06-03 23:08:37,956 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:08:37,956 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:37,957 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-06-03 23:08:37,957 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-06-03 23:08:37,957 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-06-03 23:08:37,957 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-06-03 23:08:37,958 DEBUG PropertyBinder: Building property nextQuestionId
2024-06-03 23:08:37,958 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:37,959 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-06-03 23:08:37,959 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-06-03 23:08:37,959 DEBUG BasicValueBinder: building BasicValue for questionId
2024-06-03 23:08:37,959 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-06-03 23:08:37,959 DEBUG PropertyBinder: Building property questionId
2024-06-03 23:08:37,963 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:37,975 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-06-03 23:08:37,976 DEBUG EntityBinder: Import with entity name Game
2024-06-03 23:08:37,976 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-06-03 23:08:37,976 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:37,980 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:37,981 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:08:37,981 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:08:38,004 DEBUG create: Created new SQL alias : g1_0
2024-06-03 23:08:38,005 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:38,005 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-06-03 23:08:38,006 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:38,006 DEBUG BasicValue: Skipping column re-registration: game.id
2024-06-03 23:08:38,006 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:38,006 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:38,006 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,006 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-06-03 23:08:38,006 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-06-03 23:08:38,007 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-06-03 23:08:38,007 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-06-03 23:08:38,007 DEBUG PropertyBinder: Building property currentQuestionId
2024-06-03 23:08:38,007 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,007 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:08:38,007 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-06-03 23:08:38,007 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:08:38,007 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-06-03 23:08:38,007 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:08:38,008 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,008 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-06-03 23:08:38,008 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-06-03 23:08:38,008 DEBUG BasicValueBinder: building BasicValue for gameState
2024-06-03 23:08:38,008 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-06-03 23:08:38,008 DEBUG PropertyBinder: Building property gameState
2024-06-03 23:08:38,009 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,009 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:08:38,009 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-06-03 23:08:38,009 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:08:38,009 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-06-03 23:08:38,009 DEBUG PropertyBinder: Building property questId
2024-06-03 23:08:38,009 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,010 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-06-03 23:08:38,010 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-06-03 23:08:38,010 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-06-03 23:08:38,010 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-06-03 23:08:38,009 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 23:08:38,010 DEBUG PropertyBinder: Building property userPlayerId
2024-06-03 23:08:38,011 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:38,012 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-06-03 23:08:38,020 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-06-03 23:08:38,021 DEBUG EntityBinder: Import with entity name Quest
2024-06-03 23:08:38,022 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-06-03 23:08:38,022 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:38,028 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,028 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:08:38,028 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:08:38,028 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:38,029 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-06-03 23:08:38,029 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:38,029 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-06-03 23:08:38,029 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:38,029 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:38,030 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,030 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-06-03 23:08:38,030 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-06-03 23:08:38,030 DEBUG BasicValueBinder: building BasicValue for description
2024-06-03 23:08:38,030 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-06-03 23:08:38,030 DEBUG PropertyBinder: Building property description
2024-06-03 23:08:38,031 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-06-03 23:08:38,031 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-06-03 23:08:38,032 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-06-03 23:08:38,032 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-06-03 23:08:38,032 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-06-03 23:08:38,032 DEBUG PropertyBinder: Building property firstQuestionId
2024-06-03 23:08:38,032 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,032 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:08:38,033 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-06-03 23:08:38,033 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:08:38,033 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-06-03 23:08:38,033 DEBUG PropertyBinder: Building property name
2024-06-03 23:08:38,033 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-06-03 23:08:38,034 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-06-03 23:08:38,034 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-06-03 23:08:38,034 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-06-03 23:08:38,034 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-06-03 23:08:38,034 DEBUG PropertyBinder: Building property userAuthorId
2024-06-03 23:08:38,035 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:38,036 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-06-03 23:08:38,036 DEBUG EntityBinder: Import with entity name Question
2024-06-03 23:08:38,037 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-06-03 23:08:38,037 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:38,040 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,040 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:08:38,040 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:08:38,040 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:38,040 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-06-03 23:08:38,041 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:38,041 DEBUG BasicValue: Skipping column re-registration: question.id
2024-06-03 23:08:38,041 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:38,041 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:38,041 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,041 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-06-03 23:08:38,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-06-03 23:08:38,042 DEBUG BasicValueBinder: building BasicValue for questId
2024-06-03 23:08:38,042 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-06-03 23:08:38,042 DEBUG PropertyBinder: Building property questId
2024-06-03 23:08:38,042 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,042 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-06-03 23:08:38,043 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-06-03 23:08:38,043 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-06-03 23:08:38,043 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-06-03 23:08:38,043 DEBUG PropertyBinder: Building property questionMessage
2024-06-03 23:08:38,044 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:38,046 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 23:08:38,046 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-06-03 23:08:38,046 DEBUG EntityBinder: Import with entity name User
2024-06-03 23:08:38,047 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-06-03 23:08:38,047 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-06-03 23:08:38,049 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,049 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:08:38,049 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:08:38,050 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-06-03 23:08:38,050 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-06-03 23:08:38,050 DEBUG BasicValueBinder: building BasicValue for id
2024-06-03 23:08:38,050 DEBUG BasicValue: Skipping column re-registration: users.id
2024-06-03 23:08:38,050 DEBUG PropertyBinder: Building property id
2024-06-03 23:08:38,050 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-06-03 23:08:38,050 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,051 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-06-03 23:08:38,051 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-06-03 23:08:38,051 DEBUG BasicValueBinder: building BasicValue for login
2024-06-03 23:08:38,051 DEBUG BasicValue: Skipping column re-registration: users.login
2024-06-03 23:08:38,051 DEBUG PropertyBinder: Building property login
2024-06-03 23:08:38,051 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,051 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-06-03 23:08:38,051 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-06-03 23:08:38,051 DEBUG BasicValueBinder: building BasicValue for name
2024-06-03 23:08:38,051 DEBUG BasicValue: Skipping column re-registration: users.name
2024-06-03 23:08:38,051 DEBUG PropertyBinder: Building property name
2024-06-03 23:08:38,051 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 23:08:38,052 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,052 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-06-03 23:08:38,052 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-06-03 23:08:38,052 DEBUG BasicValueBinder: building BasicValue for password
2024-06-03 23:08:38,052 DEBUG BasicValue: Skipping column re-registration: users.password
2024-06-03 23:08:38,052 DEBUG PropertyBinder: Building property password
2024-06-03 23:08:38,052 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-06-03 23:08:38,053 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-06-03 23:08:38,053 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-06-03 23:08:38,053 DEBUG BasicValueBinder: building BasicValue for role
2024-06-03 23:08:38,053 DEBUG BasicValue: Skipping column re-registration: users.role
2024-06-03 23:08:38,053 DEBUG PropertyBinder: Building property role
2024-06-03 23:08:38,054 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-06-03 23:08:38,056 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:38,059 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-06-03 23:08:38,060 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-06-03 23:08:38,060 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:08:38,064 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-06-03 23:08:38,064 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-06-03 23:08:38,064 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:38,064 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-06-03 23:08:38,064 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:08:38,064 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-06-03 23:08:38,065 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-06-03 23:08:38,066 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-06-03 23:08:38,066 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-06-03 23:08:38,072 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-06-03 23:08:38,072 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-06-03 23:08:38,073 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-06-03 23:08:38,073 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-06-03 23:08:38,073 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-06-03 23:08:38,073 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 23:08:38,074 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 23:08:38,074 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 23:08:38,074 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 23:08:38,074 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 23:08:38,074 DEBUG create: Created new SQL alias : a1_0
2024-06-03 23:08:38,074 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 23:08:38,075 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 23:08:38,075 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 23:08:38,076 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 23:08:38,076 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 23:08:38,076 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 23:08:38,076 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 23:08:38,076 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 23:08:38,076 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:08:38,076 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 23:08:38,077 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 23:08:38,077 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 23:08:38,077 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 23:08:38,077 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 23:08:38,077 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 23:08:38,078 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 23:08:38,078 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 23:08:38,078 DEBUG create: Created new SQL alias : u1_0
2024-06-03 23:08:38,078 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 23:08:38,078 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 23:08:38,079 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 23:08:38,079 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 23:08:38,079 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 23:08:38,079 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 23:08:38,079 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 23:08:38,079 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 23:08:38,080 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:08:38,080 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 23:08:38,080 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 23:08:38,081 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 23:08:38,082 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 23:08:38,082 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 23:08:38,082 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 23:08:38,082 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 23:08:38,082 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 23:08:38,127 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 23:08:38,128 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 23:08:38,139 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 23:08:38,139 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 23:08:38,140 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@381d7219] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4492b393]
2024-06-03 23:08:38,154 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-06-03 23:08:38,156 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 23:08:38,157 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 23:08:38,164 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 23:08:38,174 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 23:08:38,554 DEBUG SessionFactoryImpl: Building session factory
2024-06-03 23:08:38,580 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 23:08:38,581 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 23:08:38,667 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 23:08:38,684 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 23:08:38,702 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:08:38,703 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.repository.UserRepositoryTest,get, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, jboss.modules.system.pkgs=com.intellij.rt, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4ef4f627, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-06-03 23:08:38,705 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 23:08:38,716 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-06-03 23:08:38,720 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 23:08:38,721 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:08:38,721 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 23:08:38,727 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@74a74070
2024-06-03 23:08:38,728 DEBUG SessionFactoryRegistry: Registering SessionFactory: 04f75154-9dd0-4ef0-8063-90d714c2bc03 (<unnamed>)
2024-06-03 23:08:38,728 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 23:08:38,728 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 23:08:38,731 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:08:38,806 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-06-03 23:08:38,806 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-06-03 23:08:38,807 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-06-03 23:08:38,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-06-03 23:08:38,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@100aa331] under count; prior registration was null
2024-06-03 23:08:38,812 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5dbbb292] under every; prior registration was null
2024-06-03 23:08:38,812 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@613f7eb7] under any; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-06-03 23:08:38,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-06-03 23:08:38,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-06-03 23:08:38,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-06-03 23:08:38,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-06-03 23:08:38,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-06-03 23:08:38,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-06-03 23:08:38,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-06-03 23:08:38,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-06-03 23:08:38,816 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-06-03 23:08:38,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dbddbe3] under sinh; prior registration was null
2024-06-03 23:08:38,825 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a83ccd2] under cosh; prior registration was null
2024-06-03 23:08:38,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44aa2e13] under tanh; prior registration was null
2024-06-03 23:08:38,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@599a9cb2] under pi; prior registration was null
2024-06-03 23:08:38,826 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a1b36a1] under log; prior registration was null
2024-06-03 23:08:38,827 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-06-03 23:08:38,828 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-06-03 23:08:38,828 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-06-03 23:08:38,829 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-06-03 23:08:38,829 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-06-03 23:08:38,832 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-06-03 23:08:38,832 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-06-03 23:08:38,833 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-06-03 23:08:38,833 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-06-03 23:08:38,833 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-06-03 23:08:38,833 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-06-03 23:08:38,833 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:08:38,836 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@68af87ad] under position; prior registration was null
2024-06-03 23:08:38,841 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@773c2214] under overlay; prior registration was null
2024-06-03 23:08:38,843 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@78d23d6a] under trim; prior registration was null
2024-06-03 23:08:38,844 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:08:38,844 DEBUG TransactionImpl: begin
2024-06-03 23:08:38,845 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b41587d] under cast; prior registration was null
2024-06-03 23:08:38,846 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4aebee4b] under collate; prior registration was null
2024-06-03 23:08:38,849 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7cf63b9a] under extract; prior registration was null
2024-06-03 23:08:38,849 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-06-03 23:08:38,850 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-06-03 23:08:38,852 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5234b61a] under ifnull; prior registration was null
2024-06-03 23:08:38,853 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-06-03 23:08:38,853 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-06-03 23:08:38,854 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2744dcae] under pad; prior registration was null
2024-06-03 23:08:38,856 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@b14b60a] under str; prior registration was null
2024-06-03 23:08:38,860 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@35cec305] under format; prior registration was null
2024-06-03 23:08:38,861 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4fa86cb8] under timestampadd; prior registration was null
2024-06-03 23:08:38,864 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7f977fba] under timestampdiff; prior registration was null
2024-06-03 23:08:38,864 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-06-03 23:08:38,864 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-06-03 23:08:38,866 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f5614f9] under current_date; prior registration was null
2024-06-03 23:08:38,866 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@480cbe2e] under current_time; prior registration was null
2024-06-03 23:08:38,867 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c3f1658] under current_timestamp; prior registration was null
2024-06-03 23:08:38,867 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-06-03 23:08:38,867 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-06-03 23:08:38,867 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-06-03 23:08:38,867 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@110e9982] under local_date; prior registration was null
2024-06-03 23:08:38,867 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5eb0a686] under local_time; prior registration was null
2024-06-03 23:08:38,868 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73608eb0] under local_datetime; prior registration was null
2024-06-03 23:08:38,868 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67f9cb52] under offset_datetime; prior registration was null
2024-06-03 23:08:38,868 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-06-03 23:08:38,868 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-06-03 23:08:38,868 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-06-03 23:08:38,868 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-06-03 23:08:38,868 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2de9ca6] under instant; prior registration was null
2024-06-03 23:08:38,868 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-06-03 23:08:38,869 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@71a4f441] under sql; prior registration was null
2024-06-03 23:08:38,870 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-06-03 23:08:38,870 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-06-03 23:08:38,870 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-06-03 23:08:38,870 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a1b36a1
2024-06-03 23:08:38,870 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24876a7e] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-06-03 23:08:38,870 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44aa2e13
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dbddbe3
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a83ccd2
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@599a9cb2
2024-06-03 23:08:38,871 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-06-03 23:08:38,872 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-06-03 23:08:38,872 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-06-03 23:08:38,872 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-06-03 23:08:38,872 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-06-03 23:08:38,872 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-06-03 23:08:38,873 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-06-03 23:08:38,873 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-06-03 23:08:38,873 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-06-03 23:08:38,873 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-06-03 23:08:38,873 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-06-03 23:08:38,873 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-06-03 23:08:38,873 DEBUG ActionQueue: Executing identity-insert immediately
2024-06-03 23:08:38,875 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@13866329] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-06-03 23:08:38,876 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-06-03 23:08:38,876 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-06-03 23:08:38,876 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5eb0a686
2024-06-03 23:08:38,876 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@73608eb0
2024-06-03 23:08:38,877 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5f6b53ed] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-06-03 23:08:38,878 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-06-03 23:08:38,878 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@20cdb152] under bit_length; prior registration was null
2024-06-03 23:08:38,878 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4cffd3fd] under octet_length; prior registration was null
2024-06-03 23:08:38,878 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-06-03 23:08:38,878 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-06-03 23:08:38,878 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-06-03 23:08:38,878 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b31e37] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@68af87ad
2024-06-03 23:08:38,878 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1142d377] under bitand; prior registration was null
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c48b72c] under bitor; prior registration was null
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e1ae763] under bitxor; prior registration was null
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62d40e31] under bitnot; prior registration was null
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-06-03 23:08:38,879 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-06-03 23:08:38,880 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@650aa077] under median; prior registration was null
2024-06-03 23:08:38,881 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-06-03 23:08:38,881 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-06-03 23:08:38,881 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-06-03 23:08:38,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-06-03 23:08:38,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-06-03 23:08:38,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-06-03 23:08:38,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-06-03 23:08:38,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-06-03 23:08:38,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-06-03 23:08:38,882 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-06-03 23:08:38,883 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457a5b2d] under insert; prior registration was null
2024-06-03 23:08:38,884 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@48cb2d73] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@773c2214
2024-06-03 23:08:38,884 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-06-03 23:08:38,884 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@243bf087] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-06-03 23:08:38,884 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-06-03 23:08:38,885 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-06-03 23:08:38,885 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-06-03 23:08:38,885 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-06-03 23:08:38,886 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-06-03 23:08:38,886 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-06-03 23:08:38,886 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@662be9f7] under listagg; prior registration was null
2024-06-03 23:08:38,889 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@67688110] under array; prior registration was null
2024-06-03 23:08:38,890 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6d293993] under array_list; prior registration was null
2024-06-03 23:08:38,891 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@66e827a8] under array_agg; prior registration was null
2024-06-03 23:08:38,900 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@5efe47fd] under array_position; prior registration was null
2024-06-03 23:08:38,901 DEBUG SQL: 
    insert 
    into
        users
        (login, name, password, role) 
    values
        (?, ?, ?, ?)
2024-06-03 23:08:38,909 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@60dc1a4e] under array_positions; prior registration was null
2024-06-03 23:08:38,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@fb5aeed] under array_positions_list; prior registration was null
2024-06-03 23:08:38,915 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73893ec1] under array_length; prior registration was null
2024-06-03 23:08:38,918 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@14fc9bd] under array_concat; prior registration was null
2024-06-03 23:08:38,921 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@67e0fd6d] under array_prepend; prior registration was null
2024-06-03 23:08:38,922 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@21390938] under array_append; prior registration was null
2024-06-03 23:08:38,925 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@101cf747] under array_contains; prior registration was null
2024-06-03 23:08:38,925 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@790d8fdd] under array_contains_nullable; prior registration was null
2024-06-03 23:08:38,926 DEBUG IdentifierGeneratorHelper: Natively generated identity (com.javarush.nikolenko.entity.User) : 8
2024-06-03 23:08:38,927 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@18709cb2] under array_overlaps; prior registration was null
2024-06-03 23:08:38,927 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@a90e2c1] under array_overlaps_nullable; prior registration was null
2024-06-03 23:08:38,928 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@268c030f] under array_get; prior registration was null
2024-06-03 23:08:38,929 DEBUG ResourceRegistryStandardImpl: HHH000387: ResultSet's statement was not registered
2024-06-03 23:08:38,930 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@2d313c8c] under array_set; prior registration was null
2024-06-03 23:08:38,930 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-06-03 23:08:38,931 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@586495f1] under array_remove_index; prior registration was null
2024-06-03 23:08:38,931 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47df5041] under array_slice; prior registration was null
2024-06-03 23:08:38,931 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-06-03 23:08:38,932 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a0ea492] under array_trim; prior registration was null
2024-06-03 23:08:38,934 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@49671897] under array_fill; prior registration was null
2024-06-03 23:08:38,935 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@168142da] under array_fill_list; prior registration was null
2024-06-03 23:08:38,936 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@2afdf6b7] under array_to_string; prior registration was null
2024-06-03 23:08:38,936 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-06-03 23:08:38,936 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-06-03 23:08:38,937 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-06-03 23:08:38,937 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-06-03 23:08:38,938 DEBUG ResourceRegistryStandardImpl: Exception clearing maxRows/queryTimeout [Этот statement был закрыт.]
2024-06-03 23:08:38,939 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6de004f1] under mode; prior registration was null
2024-06-03 23:08:38,939 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@45d56062] under percentile_cont; prior registration was null
2024-06-03 23:08:38,939 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4026461d] under percentile_disc; prior registration was null
2024-06-03 23:08:38,940 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@68ea253b] under rank; prior registration was null
2024-06-03 23:08:38,941 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@12fcb2c3] under dense_rank; prior registration was null
2024-06-03 23:08:38,941 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@57bd6a8f] under percent_rank; prior registration was null
2024-06-03 23:08:38,941 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@39ab5ef7] under cume_dist; prior registration was null
2024-06-03 23:08:38,942 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@28a6e171] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-06-03 23:08:38,942 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@23444a36] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-06-03 23:08:38,943 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2e0fdbe9] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-06-03 23:08:38,945 DEBUG TransactionImpl: committing
2024-06-03 23:08:38,947 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:08:38,948 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@14b528b6] under trunc; prior registration was null
2024-06-03 23:08:38,948 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-06-03 23:08:38,948 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:08:38,948 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c412556] under date_trunc; prior registration was null
2024-06-03 23:08:38,960 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:08:38,961 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:08:38,963 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:08:38,965 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=8, login=testLodin}
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: array( ... )
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-06-03 23:08:38,977 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-06-03 23:08:38,978 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: avg(arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-06-03 23:08:38,979 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-06-03 23:08:38,980 DEBUG HQL_FUNCTIONS: Date current date
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Time current time
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Date current_date
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Time current_time
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-06-03 23:08:38,981 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: Instant instant
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: Time localtime
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-06-03 23:08:38,982 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: mode()
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-06-03 23:08:38,983 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double pi
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,984 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Long row_number()
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Object sql
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: String str(arg)
2024-06-03 23:08:38,985 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: sum(arg)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-06-03 23:08:38,986 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-06-03 23:08:38,995 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-06-03 23:08:39,014 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:39,015 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:39,019 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:08:39,019 DEBUG TransactionImpl: begin
2024-06-03 23:08:39,055 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 23:08:39,075 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1876619012 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 23:08:39,082 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 23:08:39,091 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 8
2024-06-03 23:08:39,093 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#8] : 871895680
2024-06-03 23:08:39,093 DEBUG results: Extracted JDBC value [1] - [testLodin]
2024-06-03 23:08:39,093 DEBUG results: Extracted JDBC value [2] - [TestName]
2024-06-03 23:08:39,093 DEBUG results: Extracted JDBC value [3] - [testPassword]
2024-06-03 23:08:39,093 DEBUG results: Extracted JDBC value [4] - [ADMIN]
2024-06-03 23:08:39,094 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#8
2024-06-03 23:08:39,094 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@665ed71a
2024-06-03 23:08:39,097 DEBUG TransactionImpl: committing
2024-06-03 23:08:39,097 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:08:39,097 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:08:39,097 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:08:39,097 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:08:39,097 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:08:39,097 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=8, login=testLodin}
2024-06-03 23:08:39,099 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:39,100 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:39,114 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:08:39,115 DEBUG TransactionImpl: begin
2024-06-03 23:08:39,126 DEBUG TransactionImpl: committing
2024-06-03 23:08:39,126 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:08:39,126 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:08:39,126 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2024-06-03 23:08:39,126 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:08:39,126 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:08:39,126 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=8, login=testLodin}
2024-06-03 23:08:39,135 DEBUG SQL: 
    delete 
    from
        users 
    where
        id=?
2024-06-03 23:08:39,144 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-06-03 23:08:39,149 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-06-03 23:08:39,179 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:39,179 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:39,286 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-06-03 23:08:39,286 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-06-03 23:08:39,602 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-06-03 23:08:39,630 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-06-03 23:08:39,630 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-06-03 23:08:39,656 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-06-03 23:08:39,657 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-06-03 23:08:39,657 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-06-03 23:08:39,685 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-06-03 23:08:39,686 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-06-03 23:08:39,686 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-06-03 23:08:39,711 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-06-03 23:08:39,712 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-06-03 23:08:39,712 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-06-03 23:08:39,729 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-06-03 23:08:39,781 DEBUG creation: Starting post-init callbacks
2024-06-03 23:08:39,781 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-06-03 23:08:39,782 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-06-03 23:08:39,782 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-06-03 23:08:39,782 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-06-03 23:08:39,782 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-06-03 23:08:39,926 DEBUG create: Created new SQL alias : g1_0
2024-06-03 23:08:39,930 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-06-03 23:08:39,951 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-06-03 23:08:39,954 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-06-03 23:08:39,966 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-06-03 23:08:39,967 DEBUG create: Created new SQL alias : a1_0
2024-06-03 23:08:39,967 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-06-03 23:08:39,967 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-06-03 23:08:39,967 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-06-03 23:08:39,967 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-06-03 23:08:39,968 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:08:39,968 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-06-03 23:08:39,968 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-06-03 23:08:39,968 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-06-03 23:08:39,968 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-06-03 23:08:39,968 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-06-03 23:08:39,968 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-06-03 23:08:39,968 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-06-03 23:08:39,968 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-06-03 23:08:39,968 DEBUG create: Created new SQL alias : u1_0
2024-06-03 23:08:39,968 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-06-03 23:08:39,968 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-06-03 23:08:39,969 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-06-03 23:08:39,969 DEBUG create: Created new SQL alias : q1_0
2024-06-03 23:08:39,969 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-06-03 23:08:39,969 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-06-03 23:08:39,969 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-06-03 23:08:39,969 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-06-03 23:08:40,009 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-06-03 23:08:40,009 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-06-03 23:08:40,016 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-03 23:08:40,016 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-06-03 23:08:40,017 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68ac9ec5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@22e813fc]
2024-06-03 23:08:40,035 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-06-03 23:08:40,035 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-06-03 23:08:40,045 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-06-03 23:08:40,075 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-06-03 23:08:40,598 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-06-03 23:08:40,600 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-06-03 23:08:40,709 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-06-03 23:08:40,727 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-06-03 23:08:40,753 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-06-03 23:08:40,770 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-06-03 23:08:40,771 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-06-03 23:08:40,772 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-06-03 23:08:40,778 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ea0a7a9
2024-06-03 23:08:40,778 DEBUG SessionFactoryRegistry: Registering SessionFactory: 7f4f296c-7ede-4d36-bd70-e9cd6a90fa87 (<unnamed>)
2024-06-03 23:08:40,778 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-06-03 23:08:40,778 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-06-03 23:08:40,913 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:08:40,913 DEBUG TransactionImpl: begin
2024-06-03 23:08:40,950 DEBUG ActionQueue: Executing identity-insert immediately
2024-06-03 23:08:40,999 DEBUG SQL: 
    insert 
    into
        users
        (login, name, password, role) 
    values
        (?, ?, ?, ?)
2024-06-03 23:08:41,030 DEBUG IdentifierGeneratorHelper: Natively generated identity (com.javarush.nikolenko.entity.User) : 9
2024-06-03 23:08:41,032 DEBUG ResourceRegistryStandardImpl: HHH000387: ResultSet's statement was not registered
2024-06-03 23:08:41,041 DEBUG ResourceRegistryStandardImpl: Exception clearing maxRows/queryTimeout [Этот statement был закрыт.]
2024-06-03 23:08:41,048 DEBUG TransactionImpl: committing
2024-06-03 23:08:41,049 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:08:41,051 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:08:41,059 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:08:41,059 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:08:41,060 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:08:41,062 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=9, login=testLodin}
2024-06-03 23:08:41,113 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:41,114 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:41,120 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:08:41,120 DEBUG TransactionImpl: begin
2024-06-03 23:08:41,162 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-06-03 23:08:41,186 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User -> EntityResultInitializer(com.javarush.nikolenko.entity.User)@1562384731 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-06-03 23:08:41,197 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.id=?
2024-06-03 23:08:41,209 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User): 9
2024-06-03 23:08:41,212 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User#9] : 1659475032
2024-06-03 23:08:41,212 DEBUG results: Extracted JDBC value [1] - [testLodin]
2024-06-03 23:08:41,212 DEBUG results: Extracted JDBC value [2] - [TestName]
2024-06-03 23:08:41,212 DEBUG results: Extracted JDBC value [3] - [testPassword]
2024-06-03 23:08:41,213 DEBUG results: Extracted JDBC value [4] - [ADMIN]
2024-06-03 23:08:41,214 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User#9
2024-06-03 23:08:41,214 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@581e8969
2024-06-03 23:08:41,216 DEBUG TransactionImpl: committing
2024-06-03 23:08:41,216 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:08:41,216 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:08:41,217 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-06-03 23:08:41,217 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:08:41,217 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:08:41,217 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=9, login=testLodin}
2024-06-03 23:08:41,219 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:41,219 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:41,229 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-06-03 23:08:41,229 DEBUG TransactionImpl: begin
2024-06-03 23:08:41,237 DEBUG TransactionImpl: committing
2024-06-03 23:08:41,237 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-06-03 23:08:41,237 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-06-03 23:08:41,237 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2024-06-03 23:08:41,237 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-06-03 23:08:41,237 DEBUG EntityPrinter: Listing entities:
2024-06-03 23:08:41,237 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=testPassword, role=ADMIN, name=TestName, id=9, login=testLodin}
2024-06-03 23:08:41,243 DEBUG SQL: 
    delete 
    from
        users 
    where
        id=?
2024-06-03 23:08:41,338 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-06-03 23:08:41,338 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
