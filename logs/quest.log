2024-05-27 21:42:01,983 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-27 21:42:02,092 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-27 21:42:02,134 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-27 21:42:02,455 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-27 21:42:02,467 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-27 21:42:02,783 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-27 21:42:02,870 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-27 21:42:03,856 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-27 21:42:03,914 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-27 21:42:03,970 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-27 21:42:03,995 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-27 21:42:03,996 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-27 21:42:03,997 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:42:03,997 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:42:03,998 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-27 21:42:03,999 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-27 21:42:04,000 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-27 21:42:04,004 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:42:04,005 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-27 21:42:04,006 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-27 21:42:04,006 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:42:04,007 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-27 21:42:04,066 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-27 21:42:04,068 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-27 21:42:04,808 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-27 21:42:04,808 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-27 21:42:04,808 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-27 21:42:04,808 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:42:04,808 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:42:04,808 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-27 21:42:04,808 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-27 21:42:04,808 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-27 21:42:04,809 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@432034a
2024-05-27 21:42:04,810 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@432034a
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@432034a
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:42:04,811 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:42:04,812 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@985696
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@985696
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:42:04,813 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-27 21:42:04,814 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-27 21:42:04,815 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@6e1f8469
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6e1f8469
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@2e380628
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2e380628
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b6c624
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b6c624
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b6c624
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1eaf1e62
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1eaf1e62
2024-05-27 21:42:04,816 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1eaf1e62
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@c81fd12
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@62e6a3ec
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@5754de72
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5754de72
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31ee96f4
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31ee96f4
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31ee96f4
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@320494b6
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@652ab8d9
2024-05-27 21:42:04,817 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@14fc5d40
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@14fc5d40
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@51e0301d
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@51e0301d
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@51e0301d
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@47d7bfb3
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47d7bfb3
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@770b3be0
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@770b3be0
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1eb6e1c
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1eb6e1c
2024-05-27 21:42:04,818 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@51dbd6e4
2024-05-27 21:42:04,819 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@51dbd6e4
2024-05-27 21:42:04,819 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@2b8bd14b
2024-05-27 21:42:04,819 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2b8bd14b
2024-05-27 21:42:04,819 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@5f13be1
2024-05-27 21:42:04,819 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5f303ecd
2024-05-27 21:42:04,828 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@769a58e5
2024-05-27 21:42:04,828 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@769a58e5
2024-05-27 21:42:04,829 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@7573e12f
2024-05-27 21:42:04,829 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@51b1a8f6
2024-05-27 21:42:04,830 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2a389173
2024-05-27 21:42:04,830 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@213860b8
2024-05-27 21:42:04,830 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ba89729
2024-05-27 21:42:04,830 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@178270b2
2024-05-27 21:42:04,830 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@795fd838
2024-05-27 21:42:04,830 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1b005a0b
2024-05-27 21:42:04,830 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@141e879d
2024-05-27 21:42:04,931 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-27 21:42:04,938 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-27 21:42:04,938 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:42:04,938 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-27 21:42:04,938 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-27 21:42:04,948 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-27 21:42:04,948 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-27 21:42:05,443 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-27 21:42:05,443 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-27 21:42:05,444 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-27 21:42:05,680 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-27 21:42:05,709 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-27 21:42:05,755 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-27 21:42:05,790 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@62573c86) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2418ba04)
2024-05-27 21:42:05,790 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14229fa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ab0702e)
2024-05-27 21:42:05,794 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-27 21:42:05,794 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-27 21:42:05,837 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@43e1692f
2024-05-27 21:42:05,837 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@43e1692f
2024-05-27 21:42:05,838 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@769a58e5`
2024-05-27 21:42:05,846 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-27 21:42:05,846 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:42:05,846 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:42:05,855 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:42:05,856 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:42:05,856 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:42:05,856 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:42:05,856 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:42:05,856 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:42:05,857 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:42:05,857 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:42:05,857 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:42:05,860 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@13275d8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15b82644]
2024-05-27 21:42:06,068 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-27 21:42:06,164 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-27 21:42:06,178 DEBUG EntityBinder: Import with entity name Answer
2024-05-27 21:42:06,191 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-27 21:42:06,213 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:06,257 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,258 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:42:06,258 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:42:06,263 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:06,269 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-27 21:42:06,273 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:06,301 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-27 21:42:06,302 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:06,307 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:06,315 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,315 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-27 21:42:06,315 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-27 21:42:06,315 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-27 21:42:06,315 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-27 21:42:06,315 DEBUG PropertyBinder: Building property answerMessage
2024-05-27 21:42:06,316 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,316 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-27 21:42:06,316 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-27 21:42:06,317 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-27 21:42:06,317 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-27 21:42:06,317 DEBUG PropertyBinder: Building property finalMessage
2024-05-27 21:42:06,317 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,317 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:42:06,317 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-27 21:42:06,318 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:42:06,318 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-27 21:42:06,318 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:42:06,318 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,318 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-27 21:42:06,318 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-27 21:42:06,319 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-27 21:42:06,319 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-27 21:42:06,319 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-27 21:42:06,319 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,320 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-27 21:42:06,320 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-27 21:42:06,320 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-27 21:42:06,320 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-27 21:42:06,320 DEBUG PropertyBinder: Building property questionId
2024-05-27 21:42:06,322 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:06,342 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-27 21:42:06,342 DEBUG EntityBinder: Import with entity name Game
2024-05-27 21:42:06,342 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-27 21:42:06,343 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:06,344 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,345 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:42:06,345 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:42:06,359 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:06,359 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-27 21:42:06,359 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:06,359 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-27 21:42:06,359 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:06,359 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:06,360 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,360 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-27 21:42:06,360 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-27 21:42:06,360 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-27 21:42:06,360 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-27 21:42:06,360 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-27 21:42:06,361 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,361 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:42:06,361 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-27 21:42:06,361 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:42:06,361 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-27 21:42:06,361 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:42:06,361 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,362 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:42:06,362 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-27 21:42:06,362 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:42:06,362 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-27 21:42:06,362 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:42:06,362 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,362 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:42:06,362 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-27 21:42:06,362 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:42:06,363 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-27 21:42:06,363 DEBUG PropertyBinder: Building property questId
2024-05-27 21:42:06,363 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,363 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-27 21:42:06,363 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-27 21:42:06,363 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-27 21:42:06,363 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-27 21:42:06,363 DEBUG PropertyBinder: Building property userPlayerId
2024-05-27 21:42:06,364 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:06,364 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-27 21:42:06,365 DEBUG EntityBinder: Import with entity name Quest
2024-05-27 21:42:06,365 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-27 21:42:06,365 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:06,370 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,371 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:42:06,371 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:42:06,371 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:06,371 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-27 21:42:06,371 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:06,372 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-27 21:42:06,372 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:06,372 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:06,372 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,372 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-27 21:42:06,372 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-27 21:42:06,372 DEBUG BasicValueBinder: building BasicValue for description
2024-05-27 21:42:06,373 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-27 21:42:06,373 DEBUG PropertyBinder: Building property description
2024-05-27 21:42:06,373 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-27 21:42:06,374 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:42:06,374 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-27 21:42:06,374 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:42:06,374 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-27 21:42:06,374 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:42:06,374 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,375 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:42:06,375 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-27 21:42:06,375 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:42:06,375 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-27 21:42:06,375 DEBUG PropertyBinder: Building property name
2024-05-27 21:42:06,375 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-27 21:42:06,375 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-27 21:42:06,376 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-27 21:42:06,376 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-27 21:42:06,376 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-27 21:42:06,376 DEBUG PropertyBinder: Building property userAuthorId
2024-05-27 21:42:06,376 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:06,377 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-27 21:42:06,378 DEBUG EntityBinder: Import with entity name Question
2024-05-27 21:42:06,378 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-27 21:42:06,378 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:06,426 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,426 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:42:06,426 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:42:06,427 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:06,427 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-27 21:42:06,427 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:06,427 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-27 21:42:06,427 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:06,427 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:06,427 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,427 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:42:06,427 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-27 21:42:06,427 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:42:06,428 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-27 21:42:06,428 DEBUG PropertyBinder: Building property questId
2024-05-27 21:42:06,428 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,428 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-27 21:42:06,428 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-27 21:42:06,428 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-27 21:42:06,428 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-27 21:42:06,428 DEBUG PropertyBinder: Building property questionMessage
2024-05-27 21:42:06,429 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:06,429 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-27 21:42:06,430 DEBUG EntityBinder: Import with entity name User
2024-05-27 21:42:06,430 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-27 21:42:06,431 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:06,434 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,434 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:42:06,434 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:42:06,435 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:06,435 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-27 21:42:06,435 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:06,435 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-27 21:42:06,435 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:06,435 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:06,436 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,436 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-27 21:42:06,436 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-27 21:42:06,436 DEBUG BasicValueBinder: building BasicValue for login
2024-05-27 21:42:06,436 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-27 21:42:06,436 DEBUG PropertyBinder: Building property login
2024-05-27 21:42:06,437 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,437 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:42:06,437 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-27 21:42:06,437 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:42:06,437 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-27 21:42:06,437 DEBUG PropertyBinder: Building property name
2024-05-27 21:42:06,438 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,438 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-27 21:42:06,438 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-27 21:42:06,438 DEBUG BasicValueBinder: building BasicValue for password
2024-05-27 21:42:06,438 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-27 21:42:06,438 DEBUG PropertyBinder: Building property password
2024-05-27 21:42:06,439 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:06,439 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-27 21:42:06,439 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-27 21:42:06,439 DEBUG BasicValueBinder: building BasicValue for role
2024-05-27 21:42:06,439 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-27 21:42:06,439 DEBUG PropertyBinder: Building property role
2024-05-27 21:42:06,440 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:06,441 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:06,444 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-27 21:42:06,444 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-27 21:42:06,444 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-27 21:42:06,465 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-27 21:42:06,466 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-27 21:42:06,471 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-27 21:42:06,471 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-27 21:42:06,471 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-27 21:42:06,471 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-27 21:42:06,471 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-27 21:42:06,563 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-27 21:42:07,666 DEBUG SessionFactoryImpl: Building session factory
2024-05-27 21:42:07,841 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:42:07,841 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson10HQL.QuestDbDaoTest,getQueryWithParam, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6cbbb9c4, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-27 21:42:07,872 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-27 21:42:08,185 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:42:08,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-27 21:42:08,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-27 21:42:08,317 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-27 21:42:08,318 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-27 21:42:08,320 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@8a6631b] under count; prior registration was null
2024-05-27 21:42:08,321 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1095d23a] under every; prior registration was null
2024-05-27 21:42:08,321 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3332c7a5] under any; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-27 21:42:08,322 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-27 21:42:08,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-27 21:42:08,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-27 21:42:08,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-27 21:42:08,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-27 21:42:08,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-27 21:42:08,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-27 21:42:08,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-27 21:42:08,323 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-27 21:42:08,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b862408] under sinh; prior registration was null
2024-05-27 21:42:08,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ddee60f] under cosh; prior registration was null
2024-05-27 21:42:08,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e829e50] under tanh; prior registration was null
2024-05-27 21:42:08,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4aa2877c] under pi; prior registration was null
2024-05-27 21:42:08,326 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@307e4c44] under log; prior registration was null
2024-05-27 21:42:08,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-27 21:42:08,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-27 21:42:08,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-27 21:42:08,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-27 21:42:08,327 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-27 21:42:08,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-27 21:42:08,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-27 21:42:08,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-27 21:42:08,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-27 21:42:08,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-27 21:42:08,328 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-27 21:42:08,328 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:42:08,329 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@61615b4a] under position; prior registration was null
2024-05-27 21:42:08,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@709f0202] under overlay; prior registration was null
2024-05-27 21:42:08,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1e225820] under trim; prior registration was null
2024-05-27 21:42:08,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6003ad65] under cast; prior registration was null
2024-05-27 21:42:08,344 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ec99035] under collate; prior registration was null
2024-05-27 21:42:08,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@13bdf540] under extract; prior registration was null
2024-05-27 21:42:08,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-27 21:42:08,345 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-27 21:42:08,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7ca16adc] under ifnull; prior registration was null
2024-05-27 21:42:08,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-27 21:42:08,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-27 21:42:08,346 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@691500ab] under pad; prior registration was null
2024-05-27 21:42:08,352 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4041739c] under str; prior registration was null
2024-05-27 21:42:08,354 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@134f8ef6] under format; prior registration was null
2024-05-27 21:42:08,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@9accff0] under timestampadd; prior registration was null
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@58a84a12] under timestampdiff; prior registration was null
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b649efa] under current_date; prior registration was null
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65ef48f2] under current_time; prior registration was null
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36068727] under current_timestamp; prior registration was null
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-27 21:42:08,356 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@72543547] under local_date; prior registration was null
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d88e6b9] under local_time; prior registration was null
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@22bf9122] under local_datetime; prior registration was null
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@208205ed] under offset_datetime; prior registration was null
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73afe2b7] under instant; prior registration was null
2024-05-27 21:42:08,357 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-27 21:42:08,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6babffb5] under sql; prior registration was null
2024-05-27 21:42:08,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-27 21:42:08,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@307e4c44
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2173a742] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e829e50
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b862408
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ddee60f
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4aa2877c
2024-05-27 21:42:08,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-27 21:42:08,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-27 21:42:08,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-27 21:42:08,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-27 21:42:08,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-27 21:42:08,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-27 21:42:08,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-27 21:42:08,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-27 21:42:08,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-27 21:42:08,361 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-27 21:42:08,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-27 21:42:08,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-27 21:42:08,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@77f4c040] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-27 21:42:08,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-27 21:42:08,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-27 21:42:08,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3d88e6b9
2024-05-27 21:42:08,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@22bf9122
2024-05-27 21:42:08,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@15fb4566] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-27 21:42:08,366 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:42:08,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@25ffd826] under bit_length; prior registration was null
2024-05-27 21:42:08,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@29896529] under octet_length; prior registration was null
2024-05-27 21:42:08,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-27 21:42:08,366 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-27 21:42:08,366 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e29f4f6] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@61615b4a
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41b64020] under bitand; prior registration was null
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a538ed8] under bitor; prior registration was null
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78910096] under bitxor; prior registration was null
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39dec536] under bitnot; prior registration was null
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-27 21:42:08,367 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-27 21:42:08,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-27 21:42:08,368 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-27 21:42:08,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a1a256d] under median; prior registration was null
2024-05-27 21:42:08,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-27 21:42:08,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-27 21:42:08,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-27 21:42:08,368 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-27 21:42:08,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-27 21:42:08,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-27 21:42:08,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-27 21:42:08,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-27 21:42:08,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-27 21:42:08,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-27 21:42:08,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-27 21:42:08,369 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-27 21:42:08,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-27 21:42:08,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-27 21:42:08,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-27 21:42:08,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-27 21:42:08,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-27 21:42:08,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-27 21:42:08,370 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3cdc7b09] under insert; prior registration was null
2024-05-27 21:42:08,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@31973858] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@709f0202
2024-05-27 21:42:08,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-27 21:42:08,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@65514add] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-27 21:42:08,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-27 21:42:08,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-27 21:42:08,371 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-27 21:42:08,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-27 21:42:08,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-27 21:42:08,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-27 21:42:08,372 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@34451ed8] under listagg; prior registration was null
2024-05-27 21:42:08,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@67fa5045] under array; prior registration was null
2024-05-27 21:42:08,392 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6f347d7] under array_list; prior registration was null
2024-05-27 21:42:08,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@750f64fe] under array_agg; prior registration was null
2024-05-27 21:42:08,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2785db06] under array_position; prior registration was null
2024-05-27 21:42:08,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@3ab35b9c] under array_positions; prior registration was null
2024-05-27 21:42:08,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@2287395] under array_positions_list; prior registration was null
2024-05-27 21:42:08,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@535a518c] under array_length; prior registration was null
2024-05-27 21:42:08,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@62b09715] under array_concat; prior registration was null
2024-05-27 21:42:08,405 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7e34b127] under array_prepend; prior registration was null
2024-05-27 21:42:08,406 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@679dd234] under array_append; prior registration was null
2024-05-27 21:42:08,407 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@47829d6d] under array_contains; prior registration was null
2024-05-27 21:42:08,407 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@2f677247] under array_contains_nullable; prior registration was null
2024-05-27 21:42:08,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@1983b48a] under array_overlaps; prior registration was null
2024-05-27 21:42:08,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@629a9f26] under array_overlaps_nullable; prior registration was null
2024-05-27 21:42:08,410 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71e7adbb] under array_get; prior registration was null
2024-05-27 21:42:08,411 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@1e3df614] under array_set; prior registration was null
2024-05-27 21:42:08,411 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-27 21:42:08,411 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@6f6efa4f] under array_remove_index; prior registration was null
2024-05-27 21:42:08,411 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4451f60c] under array_slice; prior registration was null
2024-05-27 21:42:08,411 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-27 21:42:08,412 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b357eb6] under array_trim; prior registration was null
2024-05-27 21:42:08,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@72443081] under array_fill; prior registration was null
2024-05-27 21:42:08,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@33feda48] under array_fill_list; prior registration was null
2024-05-27 21:42:08,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@17207f5b] under array_to_string; prior registration was null
2024-05-27 21:42:08,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-27 21:42:08,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-27 21:42:08,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-27 21:42:08,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-27 21:42:08,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3a8cea24] under mode; prior registration was null
2024-05-27 21:42:08,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1eb9a3ef] under percentile_cont; prior registration was null
2024-05-27 21:42:08,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d318e91] under percentile_disc; prior registration was null
2024-05-27 21:42:08,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@766a52f5] under rank; prior registration was null
2024-05-27 21:42:08,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4342c13] under dense_rank; prior registration was null
2024-05-27 21:42:08,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ba1209b] under percent_rank; prior registration was null
2024-05-27 21:42:08,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c241a9f] under cume_dist; prior registration was null
2024-05-27 21:42:08,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3a7b2e2] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-27 21:42:08,416 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@337a6d30] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-27 21:42:08,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@750ed637] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-27 21:42:08,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@261bd7b] under trunc; prior registration was null
2024-05-27 21:42:08,420 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-27 21:42:08,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f9e08d4] under date_trunc; prior registration was null
2024-05-27 21:42:08,439 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-27 21:42:08,439 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-27 21:42:08,439 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-27 21:42:08,439 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-27 21:42:08,439 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-27 21:42:08,439 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-27 21:42:08,439 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-27 21:42:08,440 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-27 21:42:08,441 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,442 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Date current date
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Time current time
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:42:08,443 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-27 21:42:08,444 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-27 21:42:08,445 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: mode()
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-27 21:42:08,446 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double pi
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-27 21:42:08,447 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Object sql
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-27 21:42:08,448 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-27 21:42:08,449 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-27 21:42:08,470 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-27 21:42:08,604 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:42:08,616 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-27 21:42:08,844 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:42:08,844 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:42:09,260 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-27 21:42:09,359 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:42:09,359 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:42:09,385 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-27 21:42:09,386 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:42:09,386 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:42:09,411 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-27 21:42:09,412 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:42:09,412 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:42:09,433 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-27 21:42:09,434 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:42:09,434 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:42:09,470 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-27 21:42:09,527 DEBUG creation: Starting post-init callbacks
2024-05-27 21:42:09,527 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-27 21:42:09,527 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-27 21:42:09,527 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-27 21:42:09,527 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-27 21:42:09,527 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-27 21:42:09,723 DEBUG create: Created new SQL alias : g1_0
2024-05-27 21:42:09,726 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-27 21:42:09,775 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-27 21:42:09,782 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-27 21:42:09,807 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-27 21:42:09,807 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-27 21:42:09,807 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-27 21:42:09,807 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-27 21:42:09,807 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-27 21:42:09,807 DEBUG create: Created new SQL alias : a1_0
2024-05-27 21:42:09,807 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-27 21:42:09,808 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-27 21:42:09,808 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-27 21:42:09,808 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-27 21:42:09,808 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-27 21:42:09,808 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-27 21:42:09,808 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-27 21:42:09,808 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-27 21:42:09,808 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:42:09,808 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:42:09,809 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-27 21:42:09,809 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:42:09,809 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-27 21:42:09,809 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-27 21:42:09,809 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-27 21:42:09,809 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-27 21:42:09,809 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-27 21:42:09,809 DEBUG create: Created new SQL alias : u1_0
2024-05-27 21:42:09,809 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-27 21:42:09,809 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-27 21:42:09,810 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-27 21:42:09,810 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:42:09,810 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-27 21:42:09,810 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-27 21:42:09,810 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-27 21:42:09,810 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-27 21:42:09,811 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-27 21:42:09,912 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-27 21:42:09,913 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-27 21:42:09,919 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-27 21:42:09,919 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-27 21:42:09,921 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@13275d8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6003220a]
2024-05-27 21:42:09,923 DEBUG NamedObjectRepository: Checking 0 named HQL queries
2024-05-27 21:42:09,923 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-27 21:42:09,924 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:42:09,924 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-27 21:42:10,005 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@283d3628
2024-05-27 21:42:10,005 DEBUG SessionFactoryRegistry: Registering SessionFactory: 152b2de4-c65f-4aaa-a1c3-0e3fbda72a8c (<unnamed>)
2024-05-27 21:42:10,005 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-27 21:42:10,005 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-27 21:42:10,092 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-27 21:42:10,119 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-27 21:42:10,119 DEBUG TransactionImpl: begin
2024-05-27 21:42:10,131 DEBUG hql: HQL : SELECT q FROM Quest q
2024-05-27 21:42:10,635 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
      <- [query-spec]
    <- [select]

2024-05-27 21:42:10,715 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:42:10,715 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest(q))] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:42:10,725 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest(q)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest(q).userAuthorId]

2024-05-27 21:42:10,725 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest(q)) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:42:10,747 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-27 21:42:10,768 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.Quest(q) -> EntityResultInitializer(com.javarush.nikolenko.entity.Quest(q))@2042744055 (SingleTableEntityPersister(com.javarush.nikolenko.entity.Quest))

2024-05-27 21:42:10,782 DEBUG SQL: 
    select
        q1_0.id,
        q1_0.description,
        q1_0.first_question_id,
        q1_0.name,
        q1_0.user_author_id 
    from
        quest q1_0
2024-05-27 21:42:10,792 DEBUG results: Extracted JDBC value [0] - [1]
2024-05-27 21:42:10,794 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(q)): 1
2024-05-27 21:42:10,795 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(q)#1] : 1995042520
2024-05-27 21:42:10,807 DEBUG results: Extracted JDBC value [1] - [FirstQuest description]
2024-05-27 21:42:10,807 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-27 21:42:10,808 DEBUG results: Extracted JDBC value [3] - [FirstQuest]
2024-05-27 21:42:10,808 DEBUG results: Extracted JDBC value [4] - [1]
2024-05-27 21:42:10,837 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(q)#1
2024-05-27 21:42:10,837 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28b2e4d8
2024-05-27 21:42:10,838 DEBUG results: Extracted JDBC value [0] - [2]
2024-05-27 21:42:10,838 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(q)): 2
2024-05-27 21:42:10,838 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(q)#2] : 806005031
2024-05-27 21:42:10,838 DEBUG results: Extracted JDBC value [1] - [SecondQuest description]
2024-05-27 21:42:10,838 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-27 21:42:10,838 DEBUG results: Extracted JDBC value [3] - [SecondQuest]
2024-05-27 21:42:10,838 DEBUG results: Extracted JDBC value [4] - [1]
2024-05-27 21:42:10,839 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(q)#2
2024-05-27 21:42:10,839 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28b2e4d8
2024-05-27 21:42:10,855 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-27 21:42:10,857 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@153c6603] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6003220a]
2024-05-27 21:42:10,857 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-27 21:42:10,857 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:42:10,858 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-27 21:42:46,724 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-27 21:42:46,757 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-27 21:42:46,767 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-27 21:42:46,927 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-27 21:42:46,932 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-27 21:42:47,050 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-27 21:42:47,066 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-27 21:42:47,489 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-27 21:42:47,501 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-27 21:42:47,511 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-27 21:42:47,517 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-27 21:42:47,517 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-27 21:42:47,518 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:42:47,518 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:42:47,519 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-27 21:42:47,520 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-27 21:42:47,522 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-27 21:42:47,524 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:42:47,524 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-27 21:42:47,525 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-27 21:42:47,525 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:42:47,526 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-27 21:42:47,538 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-27 21:42:47,539 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-27 21:42:47,744 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:42:47,744 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:42:47,744 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:42:47,744 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-27 21:42:47,744 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-27 21:42:47,744 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-27 21:42:47,744 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-27 21:42:47,744 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-27 21:42:47,745 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:42:47,746 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:42:47,747 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:42:47,747 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:42:47,747 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:42:47,747 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:42:47,747 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:42:47,747 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:42:47,747 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:42:47,747 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-27 21:42:47,748 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-27 21:42:47,748 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-27 21:42:47,748 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-27 21:42:47,749 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:42:47,749 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:42:47,749 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:42:47,749 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-27 21:42:47,749 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:42:47,749 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:42:47,749 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:42:47,750 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-27 21:42:47,751 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-27 21:42:47,751 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-27 21:42:47,751 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-27 21:42:47,751 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-27 21:42:47,751 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-27 21:42:47,751 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:42:47,752 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:42:47,752 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:42:47,752 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:42:47,752 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:42:47,752 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:42:47,752 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:42:47,752 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:42:47,753 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:42:47,753 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:42:47,753 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-27 21:42:47,753 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-27 21:42:47,753 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:42:47,753 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:42:47,753 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-27 21:42:47,753 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:42:47,754 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-27 21:42:47,755 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:42:47,756 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:42:47,756 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:42:47,756 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:42:47,756 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:42:47,756 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-27 21:42:47,756 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-27 21:42:47,756 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:42:47,756 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:42:47,757 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:42:47,758 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:42:47,758 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-27 21:42:47,758 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-27 21:42:47,767 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-27 21:42:47,767 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-27 21:42:47,768 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26e412ef
2024-05-27 21:42:47,769 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-27 21:42:47,769 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-27 21:42:47,769 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-27 21:42:47,769 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@769d513
2024-05-27 21:42:47,769 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-27 21:42:47,769 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-27 21:42:47,769 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-27 21:42:47,769 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@769a58e5
2024-05-27 21:42:47,805 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-27 21:42:47,810 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-27 21:42:47,810 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:42:47,811 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-27 21:42:47,811 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-27 21:42:47,814 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-27 21:42:47,814 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-27 21:42:48,134 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-27 21:42:48,135 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-27 21:42:48,135 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-27 21:42:48,215 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-27 21:42:48,231 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-27 21:42:48,251 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-27 21:42:48,268 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1d75e7af)
2024-05-27 21:42:48,269 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fc142ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34b27915)
2024-05-27 21:42:48,272 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-27 21:42:48,272 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-27 21:42:48,286 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@56380231
2024-05-27 21:42:48,286 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@56380231
2024-05-27 21:42:48,286 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5bdd5689`
2024-05-27 21:42:48,294 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-27 21:42:48,294 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:42:48,294 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:42:48,300 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:42:48,300 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:42:48,300 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:42:48,300 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:42:48,300 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:42:48,301 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:42:48,302 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:42:48,303 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:42:48,303 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:42:48,305 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43a0a32d]
2024-05-27 21:42:48,383 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-27 21:42:48,426 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-27 21:42:48,440 DEBUG EntityBinder: Import with entity name Answer
2024-05-27 21:42:48,454 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-27 21:42:48,471 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:48,513 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,514 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:42:48,514 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:42:48,521 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:48,528 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-27 21:42:48,533 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:48,540 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-27 21:42:48,542 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:48,549 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:48,552 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,552 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-27 21:42:48,553 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-27 21:42:48,553 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-27 21:42:48,553 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-27 21:42:48,553 DEBUG PropertyBinder: Building property answerMessage
2024-05-27 21:42:48,554 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,554 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-27 21:42:48,554 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-27 21:42:48,555 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-27 21:42:48,555 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-27 21:42:48,555 DEBUG PropertyBinder: Building property finalMessage
2024-05-27 21:42:48,556 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,556 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:42:48,556 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-27 21:42:48,556 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:42:48,556 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-27 21:42:48,557 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:42:48,557 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,557 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-27 21:42:48,557 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-27 21:42:48,557 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-27 21:42:48,557 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-27 21:42:48,557 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-27 21:42:48,558 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,558 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-27 21:42:48,558 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-27 21:42:48,558 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-27 21:42:48,558 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-27 21:42:48,558 DEBUG PropertyBinder: Building property questionId
2024-05-27 21:42:48,560 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:48,572 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-27 21:42:48,573 DEBUG EntityBinder: Import with entity name Game
2024-05-27 21:42:48,573 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-27 21:42:48,574 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:48,577 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,577 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:42:48,578 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:42:48,603 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:48,603 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-27 21:42:48,603 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:48,604 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-27 21:42:48,604 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:48,604 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:48,604 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,604 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-27 21:42:48,604 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-27 21:42:48,605 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-27 21:42:48,605 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-27 21:42:48,605 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-27 21:42:48,605 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,605 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:42:48,605 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-27 21:42:48,606 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:42:48,606 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-27 21:42:48,606 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:42:48,606 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,606 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:42:48,606 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-27 21:42:48,607 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:42:48,607 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-27 21:42:48,607 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:42:48,607 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,607 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:42:48,607 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-27 21:42:48,608 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:42:48,608 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-27 21:42:48,608 DEBUG PropertyBinder: Building property questId
2024-05-27 21:42:48,608 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,608 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-27 21:42:48,608 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-27 21:42:48,608 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-27 21:42:48,609 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-27 21:42:48,609 DEBUG PropertyBinder: Building property userPlayerId
2024-05-27 21:42:48,609 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:48,610 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-27 21:42:48,611 DEBUG EntityBinder: Import with entity name Quest
2024-05-27 21:42:48,611 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-27 21:42:48,612 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:48,656 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,656 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:42:48,656 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:42:48,656 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:48,656 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-27 21:42:48,657 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:48,657 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-27 21:42:48,657 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:48,657 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:48,657 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,658 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-27 21:42:48,658 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-27 21:42:48,658 DEBUG BasicValueBinder: building BasicValue for description
2024-05-27 21:42:48,658 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-27 21:42:48,658 DEBUG PropertyBinder: Building property description
2024-05-27 21:42:48,659 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-27 21:42:48,659 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:42:48,659 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-27 21:42:48,659 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:42:48,659 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-27 21:42:48,659 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:42:48,660 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,660 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:42:48,660 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-27 21:42:48,660 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:42:48,660 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-27 21:42:48,660 DEBUG PropertyBinder: Building property name
2024-05-27 21:42:48,661 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-27 21:42:48,661 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-27 21:42:48,661 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-27 21:42:48,661 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-27 21:42:48,661 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-27 21:42:48,661 DEBUG PropertyBinder: Building property userAuthorId
2024-05-27 21:42:48,662 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:48,663 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-27 21:42:48,663 DEBUG EntityBinder: Import with entity name Question
2024-05-27 21:42:48,664 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-27 21:42:48,664 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:48,671 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,671 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:42:48,671 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:42:48,671 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:48,671 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-27 21:42:48,671 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:48,672 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-27 21:42:48,672 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:48,672 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:48,672 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,672 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:42:48,672 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-27 21:42:48,672 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:42:48,673 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-27 21:42:48,673 DEBUG PropertyBinder: Building property questId
2024-05-27 21:42:48,673 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,673 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-27 21:42:48,673 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-27 21:42:48,673 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-27 21:42:48,673 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-27 21:42:48,674 DEBUG PropertyBinder: Building property questionMessage
2024-05-27 21:42:48,674 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:48,675 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-27 21:42:48,676 DEBUG EntityBinder: Import with entity name User
2024-05-27 21:42:48,676 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-27 21:42:48,676 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:42:48,680 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,680 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:42:48,680 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:42:48,681 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:42:48,681 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-27 21:42:48,681 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:42:48,681 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-27 21:42:48,681 DEBUG PropertyBinder: Building property id
2024-05-27 21:42:48,681 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:42:48,682 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,682 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-27 21:42:48,682 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-27 21:42:48,682 DEBUG BasicValueBinder: building BasicValue for login
2024-05-27 21:42:48,682 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-27 21:42:48,682 DEBUG PropertyBinder: Building property login
2024-05-27 21:42:48,683 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,683 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:42:48,683 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-27 21:42:48,683 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:42:48,683 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-27 21:42:48,683 DEBUG PropertyBinder: Building property name
2024-05-27 21:42:48,683 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,683 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-27 21:42:48,683 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-27 21:42:48,684 DEBUG BasicValueBinder: building BasicValue for password
2024-05-27 21:42:48,684 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-27 21:42:48,684 DEBUG PropertyBinder: Building property password
2024-05-27 21:42:48,684 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:42:48,684 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-27 21:42:48,684 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-27 21:42:48,684 DEBUG BasicValueBinder: building BasicValue for role
2024-05-27 21:42:48,685 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-27 21:42:48,685 DEBUG PropertyBinder: Building property role
2024-05-27 21:42:48,686 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:42:48,687 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:48,691 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-27 21:42:48,691 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-27 21:42:48,692 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-27 21:42:48,696 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:42:48,697 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-27 21:42:48,698 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-27 21:42:48,705 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-27 21:42:48,705 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-27 21:42:48,705 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-27 21:42:48,705 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-27 21:42:48,706 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-27 21:42:48,781 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-27 21:42:49,002 DEBUG SessionFactoryImpl: Building session factory
2024-05-27 21:42:49,060 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:42:49,060 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson10HQL.QuestDbDaoTest,getQueryWithParam, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@76cf841, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-27 21:42:49,074 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-27 21:42:49,088 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:42:49,148 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-27 21:42:49,148 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-27 21:42:49,148 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-27 21:42:49,149 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-27 21:42:49,151 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73041b7d] under count; prior registration was null
2024-05-27 21:42:49,152 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5529ff44] under every; prior registration was null
2024-05-27 21:42:49,152 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14447be] under any; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-27 21:42:49,153 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-27 21:42:49,154 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-27 21:42:49,154 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-27 21:42:49,154 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-27 21:42:49,154 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-27 21:42:49,154 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-27 21:42:49,154 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-27 21:42:49,154 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-27 21:42:49,155 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-27 21:42:49,157 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b] under sinh; prior registration was null
2024-05-27 21:42:49,157 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a] under cosh; prior registration was null
2024-05-27 21:42:49,157 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5] under tanh; prior registration was null
2024-05-27 21:42:49,157 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2] under pi; prior registration was null
2024-05-27 21:42:49,158 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0] under log; prior registration was null
2024-05-27 21:42:49,159 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-27 21:42:49,159 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-27 21:42:49,159 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-27 21:42:49,159 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-27 21:42:49,159 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-27 21:42:49,159 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-27 21:42:49,160 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-27 21:42:49,160 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-27 21:42:49,160 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-27 21:42:49,160 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-27 21:42:49,160 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-27 21:42:49,160 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:42:49,161 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7945b206] under position; prior registration was null
2024-05-27 21:42:49,163 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5] under overlay; prior registration was null
2024-05-27 21:42:49,164 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@65629ac6] under trim; prior registration was null
2024-05-27 21:42:49,165 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1946384] under cast; prior registration was null
2024-05-27 21:42:49,165 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ac4c3f7] under collate; prior registration was null
2024-05-27 21:42:49,166 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70029d2d] under extract; prior registration was null
2024-05-27 21:42:49,167 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-27 21:42:49,167 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-27 21:42:49,167 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14168e1] under ifnull; prior registration was null
2024-05-27 21:42:49,167 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-27 21:42:49,167 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-27 21:42:49,168 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a2dc0a] under pad; prior registration was null
2024-05-27 21:42:49,168 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5f366587] under str; prior registration was null
2024-05-27 21:42:49,170 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13bdf540] under format; prior registration was null
2024-05-27 21:42:49,170 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7ca16adc] under timestampadd; prior registration was null
2024-05-27 21:42:49,171 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1903b5d] under timestampdiff; prior registration was null
2024-05-27 21:42:49,171 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-27 21:42:49,171 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b57479] under current_date; prior registration was null
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29a33620] under current_time; prior registration was null
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ea04cab] under current_timestamp; prior registration was null
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@134f8ef6] under local_date; prior registration was null
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a90265a] under local_time; prior registration was null
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a32191e] under local_datetime; prior registration was null
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66fbc5e7] under offset_datetime; prior registration was null
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-27 21:42:49,172 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9accff0] under instant; prior registration was null
2024-05-27 21:42:49,173 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-27 21:42:49,173 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f85217c] under sql; prior registration was null
2024-05-27 21:42:49,173 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-27 21:42:49,173 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-27 21:42:49,173 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-27 21:42:49,173 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fd7a37] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-27 21:42:49,174 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-27 21:42:49,175 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-27 21:42:49,177 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6436e181] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-27 21:42:49,177 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-27 21:42:49,177 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-27 21:42:49,177 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5a90265a
2024-05-27 21:42:49,178 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a32191e
2024-05-27 21:42:49,178 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36068727] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-27 21:42:49,178 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@72543547] under bit_length; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3d88e6b9] under octet_length; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22bf9122] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7945b206
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@208205ed] under bitand; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73afe2b7] under bitor; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9687f55] under bitxor; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5700c9db] under bitnot; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-27 21:42:49,179 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@671d03bb] under median; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-27 21:42:49,180 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-27 21:42:49,182 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2173a742] under insert; prior registration was null
2024-05-27 21:42:49,183 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@77f4c040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5
2024-05-27 21:42:49,183 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-27 21:42:49,184 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@606a1bc4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-27 21:42:49,184 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-27 21:42:49,184 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-27 21:42:49,185 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-27 21:42:49,186 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-27 21:42:49,186 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-27 21:42:49,186 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-27 21:42:49,186 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@41b64020] under listagg; prior registration was null
2024-05-27 21:42:49,188 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@773014d3] under array; prior registration was null
2024-05-27 21:42:49,188 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7fedb795] under array_list; prior registration was null
2024-05-27 21:42:49,188 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@34451ed8] under array_agg; prior registration was null
2024-05-27 21:42:49,191 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@996a546] under array_position; prior registration was null
2024-05-27 21:42:49,196 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5ff6dd3c] under array_positions; prior registration was null
2024-05-27 21:42:49,198 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11c713b7] under array_positions_list; prior registration was null
2024-05-27 21:42:49,198 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2251b3bc] under array_length; prior registration was null
2024-05-27 21:42:49,199 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6042d663] under array_concat; prior registration was null
2024-05-27 21:42:49,201 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@3a4aadf8] under array_prepend; prior registration was null
2024-05-27 21:42:49,201 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7bbfc5ff] under array_append; prior registration was null
2024-05-27 21:42:49,203 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@67332b1e] under array_contains; prior registration was null
2024-05-27 21:42:49,203 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7e34b127] under array_contains_nullable; prior registration was null
2024-05-27 21:42:49,204 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ac91282] under array_overlaps; prior registration was null
2024-05-27 21:42:49,204 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f79edee] under array_overlaps_nullable; prior registration was null
2024-05-27 21:42:49,204 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bfae028] under array_get; prior registration was null
2024-05-27 21:42:49,205 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7a1b8a46] under array_set; prior registration was null
2024-05-27 21:42:49,205 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-27 21:42:49,206 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@59fc6d05] under array_remove_index; prior registration was null
2024-05-27 21:42:49,206 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78307a56] under array_slice; prior registration was null
2024-05-27 21:42:49,206 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-27 21:42:49,206 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40d52be7] under array_trim; prior registration was null
2024-05-27 21:42:49,207 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@286855ea] under array_fill; prior registration was null
2024-05-27 21:42:49,207 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64aeaf29] under array_fill_list; prior registration was null
2024-05-27 21:42:49,208 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1e1232cf] under array_to_string; prior registration was null
2024-05-27 21:42:49,208 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-27 21:42:49,208 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-27 21:42:49,208 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-27 21:42:49,208 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-27 21:42:49,209 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3730f716] under mode; prior registration was null
2024-05-27 21:42:49,209 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7730ef88] under percentile_cont; prior registration was null
2024-05-27 21:42:49,209 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@66f5a02e] under percentile_disc; prior registration was null
2024-05-27 21:42:49,210 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45843650] under rank; prior registration was null
2024-05-27 21:42:49,210 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@72443081] under dense_rank; prior registration was null
2024-05-27 21:42:49,210 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@33feda48] under percent_rank; prior registration was null
2024-05-27 21:42:49,210 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6588b715] under cume_dist; prior registration was null
2024-05-27 21:42:49,211 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@373052b5] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-27 21:42:49,211 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67e0ff3a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-27 21:42:49,212 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3a8cea24] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-27 21:42:49,213 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2b73bd6b] under trunc; prior registration was null
2024-05-27 21:42:49,213 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-27 21:42:49,214 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45] under date_trunc; prior registration was null
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-27 21:42:49,221 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-27 21:42:49,222 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-27 21:42:49,223 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Date current date
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Time current time
2024-05-27 21:42:49,224 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-27 21:42:49,225 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-27 21:42:49,226 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-27 21:42:49,227 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: mode()
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: Double pi
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-27 21:42:49,228 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-27 21:42:49,229 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Object sql
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-27 21:42:49,230 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-27 21:42:49,231 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-27 21:42:49,246 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-27 21:42:49,347 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:42:49,349 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-27 21:42:49,466 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:42:49,467 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:42:49,785 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-27 21:42:49,829 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:42:49,829 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:42:49,855 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-27 21:42:49,856 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:42:49,856 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:42:49,896 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-27 21:42:49,897 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:42:49,897 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:42:49,916 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-27 21:42:49,917 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:42:49,917 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:42:49,931 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-27 21:42:49,963 DEBUG creation: Starting post-init callbacks
2024-05-27 21:42:49,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-27 21:42:49,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-27 21:42:49,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-27 21:42:49,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-27 21:42:49,964 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-27 21:42:50,075 DEBUG create: Created new SQL alias : g1_0
2024-05-27 21:42:50,078 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-27 21:42:50,102 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-27 21:42:50,105 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-27 21:42:50,119 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-27 21:42:50,119 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-27 21:42:50,119 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-27 21:42:50,119 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-27 21:42:50,119 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-27 21:42:50,119 DEBUG create: Created new SQL alias : a1_0
2024-05-27 21:42:50,119 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-27 21:42:50,120 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-27 21:42:50,120 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-27 21:42:50,120 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-27 21:42:50,120 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-27 21:42:50,120 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-27 21:42:50,120 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-27 21:42:50,120 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-27 21:42:50,120 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:42:50,120 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:42:50,121 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-27 21:42:50,121 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:42:50,121 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-27 21:42:50,121 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-27 21:42:50,121 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-27 21:42:50,121 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-27 21:42:50,121 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-27 21:42:50,121 DEBUG create: Created new SQL alias : u1_0
2024-05-27 21:42:50,121 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-27 21:42:50,122 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-27 21:42:50,122 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-27 21:42:50,122 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-27 21:42:50,122 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-27 21:42:50,122 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-27 21:42:50,122 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-27 21:42:50,122 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-27 21:42:50,122 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:42:50,122 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-27 21:42:50,122 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-27 21:42:50,123 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-27 21:42:50,123 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-27 21:42:50,123 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-27 21:42:50,123 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-27 21:42:50,123 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-27 21:42:50,123 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-27 21:42:50,157 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-27 21:42:50,157 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-27 21:42:50,163 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-27 21:42:50,163 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-27 21:42:50,164 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@192b472d]
2024-05-27 21:42:50,167 DEBUG NamedObjectRepository: Checking 0 named HQL queries
2024-05-27 21:42:50,167 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-27 21:42:50,168 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:42:50,168 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-27 21:42:50,171 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ef2cbe6
2024-05-27 21:42:50,172 DEBUG SessionFactoryRegistry: Registering SessionFactory: 179dd41f-0eb2-4831-9dc5-26b3c1c3206b (<unnamed>)
2024-05-27 21:42:50,172 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-27 21:42:50,172 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-27 21:42:50,239 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-27 21:42:50,260 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-27 21:42:50,260 DEBUG TransactionImpl: begin
2024-05-27 21:42:50,262 DEBUG hql: HQL : SELECT q FROM Quest q order by q.id
2024-05-27 21:42:50,572 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-27 21:42:50,727 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
      <- [query-spec]
    <- [select]

2024-05-27 21:42:50,825 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:42:50,825 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest(q))] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:42:50,843 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest(q)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest(q).userAuthorId]

2024-05-27 21:42:50,844 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest(q)) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:42:50,862 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-27 21:42:50,888 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.Quest(q) -> EntityResultInitializer(com.javarush.nikolenko.entity.Quest(q))@649913869 (SingleTableEntityPersister(com.javarush.nikolenko.entity.Quest))

2024-05-27 21:42:50,899 DEBUG SQL: 
    select
        q1_0.id,
        q1_0.description,
        q1_0.first_question_id,
        q1_0.name,
        q1_0.user_author_id 
    from
        quest q1_0 
    order by
        q1_0.id
2024-05-27 21:42:50,911 DEBUG results: Extracted JDBC value [0] - [1]
2024-05-27 21:42:50,912 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(q)): 1
2024-05-27 21:42:50,916 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(q)#1] : 52313140
2024-05-27 21:42:50,917 DEBUG results: Extracted JDBC value [1] - [FirstQuest description]
2024-05-27 21:42:50,917 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-27 21:42:50,917 DEBUG results: Extracted JDBC value [3] - [FirstQuest]
2024-05-27 21:42:50,917 DEBUG results: Extracted JDBC value [4] - [1]
2024-05-27 21:42:50,923 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(q)#1
2024-05-27 21:42:50,924 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@249a45fd
2024-05-27 21:42:50,924 DEBUG results: Extracted JDBC value [0] - [2]
2024-05-27 21:42:50,924 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(q)): 2
2024-05-27 21:42:50,925 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(q)#2] : 1040733616
2024-05-27 21:42:50,925 DEBUG results: Extracted JDBC value [1] - [SecondQuest description]
2024-05-27 21:42:50,925 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-27 21:42:50,925 DEBUG results: Extracted JDBC value [3] - [SecondQuest]
2024-05-27 21:42:50,925 DEBUG results: Extracted JDBC value [4] - [1]
2024-05-27 21:42:50,925 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(q)#2
2024-05-27 21:42:50,925 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@249a45fd
2024-05-27 21:42:50,940 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-27 21:42:50,942 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@56ba8e8c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@192b472d]
2024-05-27 21:42:50,942 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-27 21:42:50,942 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:42:50,944 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-27 21:43:05,415 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-27 21:43:05,456 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-27 21:43:05,462 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-27 21:43:05,606 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-27 21:43:05,610 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-27 21:43:05,751 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-27 21:43:05,766 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-27 21:43:06,091 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-27 21:43:06,105 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-27 21:43:06,118 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-27 21:43:06,123 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-27 21:43:06,124 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-27 21:43:06,125 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:43:06,125 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:43:06,125 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-27 21:43:06,127 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-27 21:43:06,127 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-27 21:43:06,129 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:43:06,130 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-27 21:43:06,130 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-27 21:43:06,130 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:43:06,132 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-27 21:43:06,145 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-27 21:43:06,148 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-27 21:43:06,351 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:43:06,351 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:43:06,351 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:43:06,352 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:43:06,353 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:43:06,354 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:43:06,355 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:43:06,356 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:43:06,357 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:43:06,358 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:43:06,359 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:43:06,360 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:43:06,361 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-27 21:43:06,362 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-27 21:43:06,369 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-27 21:43:06,369 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26e412ef
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@769d513
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-27 21:43:06,371 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@769a58e5
2024-05-27 21:43:06,406 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-27 21:43:06,411 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-27 21:43:06,411 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:43:06,412 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-27 21:43:06,412 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-27 21:43:06,415 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-27 21:43:06,415 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-27 21:43:06,710 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-27 21:43:06,711 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-27 21:43:06,711 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-27 21:43:06,798 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-27 21:43:06,816 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-27 21:43:06,840 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-27 21:43:06,870 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1d75e7af)
2024-05-27 21:43:06,871 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fc142ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34b27915)
2024-05-27 21:43:06,876 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-27 21:43:06,876 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-27 21:43:06,902 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@56380231
2024-05-27 21:43:06,902 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@56380231
2024-05-27 21:43:06,902 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5bdd5689`
2024-05-27 21:43:06,911 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-27 21:43:06,911 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:43:06,912 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:43:06,921 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:43:06,921 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:43:06,921 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:43:06,921 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:43:06,921 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:43:06,921 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:43:06,923 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:43:06,923 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:43:06,924 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:43:06,927 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43a0a32d]
2024-05-27 21:43:07,005 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-27 21:43:07,068 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-27 21:43:07,082 DEBUG EntityBinder: Import with entity name Answer
2024-05-27 21:43:07,095 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-27 21:43:07,111 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:43:07,140 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,141 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:43:07,141 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:43:07,148 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:43:07,158 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-27 21:43:07,162 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:43:07,169 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-27 21:43:07,170 DEBUG PropertyBinder: Building property id
2024-05-27 21:43:07,175 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:43:07,178 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,178 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-27 21:43:07,178 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-27 21:43:07,178 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-27 21:43:07,178 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-27 21:43:07,178 DEBUG PropertyBinder: Building property answerMessage
2024-05-27 21:43:07,179 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,179 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-27 21:43:07,179 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-27 21:43:07,179 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-27 21:43:07,179 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-27 21:43:07,180 DEBUG PropertyBinder: Building property finalMessage
2024-05-27 21:43:07,180 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,180 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:43:07,181 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-27 21:43:07,182 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:43:07,182 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-27 21:43:07,183 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:43:07,183 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,184 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-27 21:43:07,184 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-27 21:43:07,184 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-27 21:43:07,184 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-27 21:43:07,185 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-27 21:43:07,185 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,185 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-27 21:43:07,186 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-27 21:43:07,186 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-27 21:43:07,186 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-27 21:43:07,187 DEBUG PropertyBinder: Building property questionId
2024-05-27 21:43:07,188 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:43:07,199 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-27 21:43:07,200 DEBUG EntityBinder: Import with entity name Game
2024-05-27 21:43:07,200 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-27 21:43:07,201 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:43:07,204 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,204 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:43:07,204 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:43:07,241 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:43:07,242 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-27 21:43:07,242 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:43:07,242 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-27 21:43:07,242 DEBUG PropertyBinder: Building property id
2024-05-27 21:43:07,242 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:43:07,243 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,243 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-27 21:43:07,243 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-27 21:43:07,243 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-27 21:43:07,243 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-27 21:43:07,243 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-27 21:43:07,244 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,244 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:43:07,244 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-27 21:43:07,244 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:43:07,244 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-27 21:43:07,244 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:43:07,245 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,245 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:43:07,245 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-27 21:43:07,245 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:43:07,245 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-27 21:43:07,246 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:43:07,246 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,246 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:43:07,246 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-27 21:43:07,246 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:43:07,246 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-27 21:43:07,246 DEBUG PropertyBinder: Building property questId
2024-05-27 21:43:07,247 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,247 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-27 21:43:07,247 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-27 21:43:07,247 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-27 21:43:07,247 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-27 21:43:07,247 DEBUG PropertyBinder: Building property userPlayerId
2024-05-27 21:43:07,248 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:43:07,251 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-27 21:43:07,252 DEBUG EntityBinder: Import with entity name Quest
2024-05-27 21:43:07,252 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-27 21:43:07,253 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:43:07,260 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,260 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:43:07,260 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:43:07,261 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:43:07,261 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-27 21:43:07,261 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:43:07,261 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-27 21:43:07,261 DEBUG PropertyBinder: Building property id
2024-05-27 21:43:07,261 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:43:07,262 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,262 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-27 21:43:07,262 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-27 21:43:07,262 DEBUG BasicValueBinder: building BasicValue for description
2024-05-27 21:43:07,262 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-27 21:43:07,263 DEBUG PropertyBinder: Building property description
2024-05-27 21:43:07,264 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-27 21:43:07,265 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:43:07,265 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-27 21:43:07,265 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:43:07,265 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-27 21:43:07,265 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:43:07,266 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,266 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:43:07,266 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-27 21:43:07,266 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:43:07,266 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-27 21:43:07,266 DEBUG PropertyBinder: Building property name
2024-05-27 21:43:07,267 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-27 21:43:07,267 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-27 21:43:07,267 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-27 21:43:07,268 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-27 21:43:07,268 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-27 21:43:07,268 DEBUG PropertyBinder: Building property userAuthorId
2024-05-27 21:43:07,269 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:43:07,271 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-27 21:43:07,272 DEBUG EntityBinder: Import with entity name Question
2024-05-27 21:43:07,272 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-27 21:43:07,273 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:43:07,276 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,276 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:43:07,277 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:43:07,277 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:43:07,277 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-27 21:43:07,277 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:43:07,277 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-27 21:43:07,277 DEBUG PropertyBinder: Building property id
2024-05-27 21:43:07,277 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:43:07,278 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,278 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:43:07,278 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-27 21:43:07,278 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:43:07,278 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-27 21:43:07,278 DEBUG PropertyBinder: Building property questId
2024-05-27 21:43:07,278 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,278 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-27 21:43:07,278 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-27 21:43:07,279 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-27 21:43:07,279 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-27 21:43:07,279 DEBUG PropertyBinder: Building property questionMessage
2024-05-27 21:43:07,279 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:43:07,281 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-27 21:43:07,283 DEBUG EntityBinder: Import with entity name User
2024-05-27 21:43:07,283 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-27 21:43:07,284 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:43:07,288 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,288 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:43:07,288 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:43:07,289 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:43:07,289 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-27 21:43:07,289 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:43:07,290 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-27 21:43:07,290 DEBUG PropertyBinder: Building property id
2024-05-27 21:43:07,290 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:43:07,291 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,291 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-27 21:43:07,291 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-27 21:43:07,291 DEBUG BasicValueBinder: building BasicValue for login
2024-05-27 21:43:07,291 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-27 21:43:07,291 DEBUG PropertyBinder: Building property login
2024-05-27 21:43:07,292 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,292 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:43:07,292 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-27 21:43:07,293 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:43:07,293 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-27 21:43:07,293 DEBUG PropertyBinder: Building property name
2024-05-27 21:43:07,294 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,294 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-27 21:43:07,294 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-27 21:43:07,294 DEBUG BasicValueBinder: building BasicValue for password
2024-05-27 21:43:07,295 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-27 21:43:07,295 DEBUG PropertyBinder: Building property password
2024-05-27 21:43:07,296 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:43:07,296 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-27 21:43:07,297 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-27 21:43:07,297 DEBUG BasicValueBinder: building BasicValue for role
2024-05-27 21:43:07,297 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-27 21:43:07,297 DEBUG PropertyBinder: Building property role
2024-05-27 21:43:07,299 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:43:07,302 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:43:07,305 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-27 21:43:07,306 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-27 21:43:07,306 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:43:07,310 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-27 21:43:07,311 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-27 21:43:07,311 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:43:07,311 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-27 21:43:07,311 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:43:07,311 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:43:07,312 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:43:07,312 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-27 21:43:07,312 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:43:07,312 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-27 21:43:07,312 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:43:07,312 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:43:07,312 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-27 21:43:07,312 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:43:07,313 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:43:07,313 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-27 21:43:07,313 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:43:07,313 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-27 21:43:07,313 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:43:07,313 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-27 21:43:07,313 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-27 21:43:07,320 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-27 21:43:07,320 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-27 21:43:07,320 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-27 21:43:07,320 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-27 21:43:07,320 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-27 21:43:07,392 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-27 21:43:07,610 DEBUG SessionFactoryImpl: Building session factory
2024-05-27 21:43:07,675 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:43:07,675 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson10HQL.QuestDbDaoTest,getQueryWithParam, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@76cf841, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-27 21:43:07,685 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-27 21:43:07,697 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:43:07,750 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-27 21:43:07,750 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-27 21:43:07,750 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-27 21:43:07,751 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-27 21:43:07,753 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73041b7d] under count; prior registration was null
2024-05-27 21:43:07,754 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5529ff44] under every; prior registration was null
2024-05-27 21:43:07,754 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14447be] under any; prior registration was null
2024-05-27 21:43:07,754 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-27 21:43:07,754 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-27 21:43:07,754 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-27 21:43:07,754 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-27 21:43:07,755 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-27 21:43:07,756 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-27 21:43:07,756 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-27 21:43:07,756 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-27 21:43:07,756 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-27 21:43:07,758 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b] under sinh; prior registration was null
2024-05-27 21:43:07,758 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a] under cosh; prior registration was null
2024-05-27 21:43:07,758 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5] under tanh; prior registration was null
2024-05-27 21:43:07,758 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2] under pi; prior registration was null
2024-05-27 21:43:07,758 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0] under log; prior registration was null
2024-05-27 21:43:07,759 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-27 21:43:07,759 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-27 21:43:07,759 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-27 21:43:07,759 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-27 21:43:07,759 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-27 21:43:07,759 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-27 21:43:07,760 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-27 21:43:07,760 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-27 21:43:07,760 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-27 21:43:07,760 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-27 21:43:07,760 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-27 21:43:07,760 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:43:07,761 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7945b206] under position; prior registration was null
2024-05-27 21:43:07,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5] under overlay; prior registration was null
2024-05-27 21:43:07,763 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@65629ac6] under trim; prior registration was null
2024-05-27 21:43:07,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1946384] under cast; prior registration was null
2024-05-27 21:43:07,764 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ac4c3f7] under collate; prior registration was null
2024-05-27 21:43:07,765 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70029d2d] under extract; prior registration was null
2024-05-27 21:43:07,765 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-27 21:43:07,765 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-27 21:43:07,766 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14168e1] under ifnull; prior registration was null
2024-05-27 21:43:07,766 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-27 21:43:07,766 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-27 21:43:07,766 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a2dc0a] under pad; prior registration was null
2024-05-27 21:43:07,767 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5f366587] under str; prior registration was null
2024-05-27 21:43:07,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13bdf540] under format; prior registration was null
2024-05-27 21:43:07,768 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7ca16adc] under timestampadd; prior registration was null
2024-05-27 21:43:07,769 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1903b5d] under timestampdiff; prior registration was null
2024-05-27 21:43:07,769 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b57479] under current_date; prior registration was null
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29a33620] under current_time; prior registration was null
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ea04cab] under current_timestamp; prior registration was null
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@134f8ef6] under local_date; prior registration was null
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a90265a] under local_time; prior registration was null
2024-05-27 21:43:07,770 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a32191e] under local_datetime; prior registration was null
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66fbc5e7] under offset_datetime; prior registration was null
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9accff0] under instant; prior registration was null
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f85217c] under sql; prior registration was null
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-27 21:43:07,771 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fd7a37] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-27 21:43:07,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-27 21:43:07,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-27 21:43:07,774 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-27 21:43:07,774 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-27 21:43:07,774 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-27 21:43:07,775 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6436e181] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-27 21:43:07,775 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-27 21:43:07,776 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-27 21:43:07,776 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5a90265a
2024-05-27 21:43:07,776 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a32191e
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36068727] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@72543547] under bit_length; prior registration was null
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3d88e6b9] under octet_length; prior registration was null
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22bf9122] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7945b206
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@208205ed] under bitand; prior registration was null
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73afe2b7] under bitor; prior registration was null
2024-05-27 21:43:07,777 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9687f55] under bitxor; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5700c9db] under bitnot; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@671d03bb] under median; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-27 21:43:07,778 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-27 21:43:07,779 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2173a742] under insert; prior registration was null
2024-05-27 21:43:07,780 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@77f4c040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5
2024-05-27 21:43:07,780 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-27 21:43:07,780 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@606a1bc4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-27 21:43:07,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-27 21:43:07,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-27 21:43:07,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-27 21:43:07,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-27 21:43:07,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-27 21:43:07,781 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-27 21:43:07,782 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@41b64020] under listagg; prior registration was null
2024-05-27 21:43:07,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@773014d3] under array; prior registration was null
2024-05-27 21:43:07,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7fedb795] under array_list; prior registration was null
2024-05-27 21:43:07,795 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@34451ed8] under array_agg; prior registration was null
2024-05-27 21:43:07,798 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@996a546] under array_position; prior registration was null
2024-05-27 21:43:07,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5ff6dd3c] under array_positions; prior registration was null
2024-05-27 21:43:07,806 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11c713b7] under array_positions_list; prior registration was null
2024-05-27 21:43:07,806 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2251b3bc] under array_length; prior registration was null
2024-05-27 21:43:07,807 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6042d663] under array_concat; prior registration was null
2024-05-27 21:43:07,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@3a4aadf8] under array_prepend; prior registration was null
2024-05-27 21:43:07,809 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7bbfc5ff] under array_append; prior registration was null
2024-05-27 21:43:07,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@67332b1e] under array_contains; prior registration was null
2024-05-27 21:43:07,811 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7e34b127] under array_contains_nullable; prior registration was null
2024-05-27 21:43:07,812 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ac91282] under array_overlaps; prior registration was null
2024-05-27 21:43:07,812 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f79edee] under array_overlaps_nullable; prior registration was null
2024-05-27 21:43:07,813 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bfae028] under array_get; prior registration was null
2024-05-27 21:43:07,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7a1b8a46] under array_set; prior registration was null
2024-05-27 21:43:07,814 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-27 21:43:07,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@59fc6d05] under array_remove_index; prior registration was null
2024-05-27 21:43:07,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78307a56] under array_slice; prior registration was null
2024-05-27 21:43:07,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-27 21:43:07,815 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40d52be7] under array_trim; prior registration was null
2024-05-27 21:43:07,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@286855ea] under array_fill; prior registration was null
2024-05-27 21:43:07,817 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64aeaf29] under array_fill_list; prior registration was null
2024-05-27 21:43:07,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1e1232cf] under array_to_string; prior registration was null
2024-05-27 21:43:07,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-27 21:43:07,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-27 21:43:07,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-27 21:43:07,818 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-27 21:43:07,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3730f716] under mode; prior registration was null
2024-05-27 21:43:07,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7730ef88] under percentile_cont; prior registration was null
2024-05-27 21:43:07,819 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@66f5a02e] under percentile_disc; prior registration was null
2024-05-27 21:43:07,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45843650] under rank; prior registration was null
2024-05-27 21:43:07,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@72443081] under dense_rank; prior registration was null
2024-05-27 21:43:07,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@33feda48] under percent_rank; prior registration was null
2024-05-27 21:43:07,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6588b715] under cume_dist; prior registration was null
2024-05-27 21:43:07,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@373052b5] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-27 21:43:07,820 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67e0ff3a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-27 21:43:07,821 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3a8cea24] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-27 21:43:07,823 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2b73bd6b] under trunc; prior registration was null
2024-05-27 21:43:07,823 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-27 21:43:07,823 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45] under date_trunc; prior registration was null
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-27 21:43:07,829 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-27 21:43:07,830 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-27 21:43:07,831 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-27 21:43:07,831 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-27 21:43:07,831 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-27 21:43:07,831 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-27 21:43:07,831 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-27 21:43:07,831 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-27 21:43:07,832 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-27 21:43:07,833 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Date current date
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Time current time
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-27 21:43:07,834 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-27 21:43:07,835 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:43:07,836 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: mode()
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-27 21:43:07,837 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double pi
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:43:07,838 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-27 21:43:07,839 DEBUG HQL_FUNCTIONS: Object sql
2024-05-27 21:43:07,840 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-27 21:43:07,840 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-27 21:43:07,840 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-27 21:43:07,840 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-27 21:43:07,840 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-27 21:43:07,840 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-27 21:43:07,840 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-27 21:43:07,841 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-27 21:43:07,852 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-27 21:43:07,960 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:43:07,962 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-27 21:43:08,075 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:43:08,075 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:43:08,354 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-27 21:43:08,385 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:43:08,385 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:43:08,410 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-27 21:43:08,411 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:43:08,411 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:43:08,441 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-27 21:43:08,442 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:43:08,442 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:43:08,460 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-27 21:43:08,461 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:43:08,461 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:43:08,476 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-27 21:43:08,504 DEBUG creation: Starting post-init callbacks
2024-05-27 21:43:08,505 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-27 21:43:08,505 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-27 21:43:08,505 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-27 21:43:08,505 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-27 21:43:08,505 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-27 21:43:08,632 DEBUG create: Created new SQL alias : g1_0
2024-05-27 21:43:08,634 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-27 21:43:08,654 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-27 21:43:08,658 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-27 21:43:08,671 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-27 21:43:08,671 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-27 21:43:08,672 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-27 21:43:08,672 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-27 21:43:08,672 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-27 21:43:08,672 DEBUG create: Created new SQL alias : a1_0
2024-05-27 21:43:08,672 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-27 21:43:08,672 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-27 21:43:08,672 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-27 21:43:08,672 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-27 21:43:08,673 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:43:08,673 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:43:08,673 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-27 21:43:08,673 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-27 21:43:08,673 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-27 21:43:08,673 DEBUG create: Created new SQL alias : u1_0
2024-05-27 21:43:08,674 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-27 21:43:08,674 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-27 21:43:08,674 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-27 21:43:08,674 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-27 21:43:08,674 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-27 21:43:08,674 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-27 21:43:08,674 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-27 21:43:08,674 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-27 21:43:08,674 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:43:08,674 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-27 21:43:08,674 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-27 21:43:08,675 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-27 21:43:08,675 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-27 21:43:08,675 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-27 21:43:08,675 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-27 21:43:08,675 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-27 21:43:08,675 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-27 21:43:08,710 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-27 21:43:08,710 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-27 21:43:08,718 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-27 21:43:08,718 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-27 21:43:08,719 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@192b472d]
2024-05-27 21:43:08,721 DEBUG NamedObjectRepository: Checking 0 named HQL queries
2024-05-27 21:43:08,721 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-27 21:43:08,721 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:43:08,721 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-27 21:43:08,725 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ef2cbe6
2024-05-27 21:43:08,725 DEBUG SessionFactoryRegistry: Registering SessionFactory: bc7b5710-06e8-44a8-a5be-9a4151342cb1 (<unnamed>)
2024-05-27 21:43:08,725 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-27 21:43:08,725 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-27 21:43:08,787 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-27 21:43:08,804 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-27 21:43:08,804 DEBUG TransactionImpl: begin
2024-05-27 21:43:08,807 DEBUG hql: HQL : SELECT q FROM Quest q order by q.id desc
2024-05-27 21:43:09,122 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : desc
2024-05-27 21:43:09,261 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
      <- [query-spec]
    <- [select]

2024-05-27 21:43:09,344 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:43:09,345 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest(q))] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:43:09,360 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest(q)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest(q).userAuthorId]

2024-05-27 21:43:09,361 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest(q)) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:43:09,376 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-27 21:43:09,393 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.Quest(q) -> EntityResultInitializer(com.javarush.nikolenko.entity.Quest(q))@1050247219 (SingleTableEntityPersister(com.javarush.nikolenko.entity.Quest))

2024-05-27 21:43:09,404 DEBUG SQL: 
    select
        q1_0.id,
        q1_0.description,
        q1_0.first_question_id,
        q1_0.name,
        q1_0.user_author_id 
    from
        quest q1_0 
    order by
        q1_0.id desc
2024-05-27 21:43:09,426 DEBUG results: Extracted JDBC value [0] - [2]
2024-05-27 21:43:09,426 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(q)): 2
2024-05-27 21:43:09,429 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(q)#2] : 614090237
2024-05-27 21:43:09,430 DEBUG results: Extracted JDBC value [1] - [SecondQuest description]
2024-05-27 21:43:09,430 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-27 21:43:09,430 DEBUG results: Extracted JDBC value [3] - [SecondQuest]
2024-05-27 21:43:09,430 DEBUG results: Extracted JDBC value [4] - [1]
2024-05-27 21:43:09,436 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(q)#2
2024-05-27 21:43:09,436 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b849fa6
2024-05-27 21:43:09,437 DEBUG results: Extracted JDBC value [0] - [1]
2024-05-27 21:43:09,437 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(q)): 1
2024-05-27 21:43:09,437 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(q)#1] : 2045532088
2024-05-27 21:43:09,437 DEBUG results: Extracted JDBC value [1] - [FirstQuest description]
2024-05-27 21:43:09,437 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-27 21:43:09,437 DEBUG results: Extracted JDBC value [3] - [FirstQuest]
2024-05-27 21:43:09,437 DEBUG results: Extracted JDBC value [4] - [1]
2024-05-27 21:43:09,437 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(q)#1
2024-05-27 21:43:09,437 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b849fa6
2024-05-27 21:43:09,451 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-27 21:43:09,452 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@32e65852] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@192b472d]
2024-05-27 21:43:09,452 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-27 21:43:09,453 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:43:09,454 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-27 21:44:28,176 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-27 21:44:28,218 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-27 21:44:28,227 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-27 21:44:28,348 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-27 21:44:28,352 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-27 21:44:28,449 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-27 21:44:28,466 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-27 21:44:28,806 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-27 21:44:28,816 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-27 21:44:28,828 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-27 21:44:28,834 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-27 21:44:28,834 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-27 21:44:28,835 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:44:28,835 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:44:28,836 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-27 21:44:28,837 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-27 21:44:28,838 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-27 21:44:28,840 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:44:28,841 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-27 21:44:28,842 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-27 21:44:28,842 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:44:28,844 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-27 21:44:28,856 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-27 21:44:28,858 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-27 21:44:29,055 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:44:29,055 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:44:29,056 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-27 21:44:29,057 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:44:29,058 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-27 21:44:29,059 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-27 21:44:29,060 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-27 21:44:29,061 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:44:29,062 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-27 21:44:29,063 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-27 21:44:29,064 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:44:29,065 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:44:29,066 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:44:29,067 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:44:29,067 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-27 21:44:29,067 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-27 21:44:29,074 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-27 21:44:29,074 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-27 21:44:29,076 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26e412ef
2024-05-27 21:44:29,076 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-27 21:44:29,076 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-27 21:44:29,077 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-27 21:44:29,077 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@769d513
2024-05-27 21:44:29,077 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-27 21:44:29,077 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-27 21:44:29,077 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-27 21:44:29,077 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@769a58e5
2024-05-27 21:44:29,111 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-27 21:44:29,115 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-27 21:44:29,115 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:44:29,116 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-27 21:44:29,116 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-27 21:44:29,119 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-27 21:44:29,119 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-27 21:44:29,410 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-27 21:44:29,411 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-27 21:44:29,411 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-27 21:44:29,498 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-27 21:44:29,514 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-27 21:44:29,534 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-27 21:44:29,552 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1d75e7af)
2024-05-27 21:44:29,552 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fc142ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34b27915)
2024-05-27 21:44:29,556 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-27 21:44:29,556 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-27 21:44:29,572 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@56380231
2024-05-27 21:44:29,572 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@56380231
2024-05-27 21:44:29,573 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5bdd5689`
2024-05-27 21:44:29,582 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-27 21:44:29,582 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:44:29,582 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:44:29,588 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:44:29,588 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:44:29,588 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:44:29,588 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:44:29,588 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:44:29,588 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:44:29,590 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:44:29,590 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:44:29,590 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:44:29,594 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43a0a32d]
2024-05-27 21:44:29,656 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-27 21:44:29,712 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-27 21:44:29,731 DEBUG EntityBinder: Import with entity name Answer
2024-05-27 21:44:29,748 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-27 21:44:29,767 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:44:29,799 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,800 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:44:29,800 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:44:29,807 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:44:29,816 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-27 21:44:29,821 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:44:29,827 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-27 21:44:29,829 DEBUG PropertyBinder: Building property id
2024-05-27 21:44:29,838 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:44:29,840 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,841 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-27 21:44:29,841 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-27 21:44:29,841 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-27 21:44:29,842 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-27 21:44:29,842 DEBUG PropertyBinder: Building property answerMessage
2024-05-27 21:44:29,843 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,844 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-27 21:44:29,844 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-27 21:44:29,844 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-27 21:44:29,844 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-27 21:44:29,845 DEBUG PropertyBinder: Building property finalMessage
2024-05-27 21:44:29,845 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,846 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:44:29,846 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-27 21:44:29,846 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:44:29,846 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-27 21:44:29,847 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:44:29,847 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,848 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-27 21:44:29,848 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-27 21:44:29,848 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-27 21:44:29,848 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-27 21:44:29,848 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-27 21:44:29,849 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,849 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-27 21:44:29,849 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-27 21:44:29,849 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-27 21:44:29,850 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-27 21:44:29,850 DEBUG PropertyBinder: Building property questionId
2024-05-27 21:44:29,852 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:44:29,865 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-27 21:44:29,866 DEBUG EntityBinder: Import with entity name Game
2024-05-27 21:44:29,867 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-27 21:44:29,867 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:44:29,870 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,870 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:44:29,870 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:44:29,910 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:44:29,910 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-27 21:44:29,910 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:44:29,911 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-27 21:44:29,911 DEBUG PropertyBinder: Building property id
2024-05-27 21:44:29,911 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:44:29,911 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,912 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-27 21:44:29,912 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-27 21:44:29,912 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-27 21:44:29,912 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-27 21:44:29,912 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-27 21:44:29,913 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,913 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:44:29,913 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-27 21:44:29,914 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:44:29,914 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-27 21:44:29,914 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:44:29,914 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,914 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:44:29,914 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-27 21:44:29,915 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:44:29,915 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-27 21:44:29,915 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:44:29,915 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,915 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:44:29,915 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-27 21:44:29,915 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:44:29,915 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-27 21:44:29,916 DEBUG PropertyBinder: Building property questId
2024-05-27 21:44:29,916 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,916 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-27 21:44:29,916 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-27 21:44:29,916 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-27 21:44:29,916 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-27 21:44:29,916 DEBUG PropertyBinder: Building property userPlayerId
2024-05-27 21:44:29,917 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:44:29,917 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-27 21:44:29,918 DEBUG EntityBinder: Import with entity name Quest
2024-05-27 21:44:29,918 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-27 21:44:29,919 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:44:29,923 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,923 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:44:29,924 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:44:29,924 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:44:29,924 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-27 21:44:29,924 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:44:29,924 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-27 21:44:29,924 DEBUG PropertyBinder: Building property id
2024-05-27 21:44:29,925 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:44:29,925 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,926 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-27 21:44:29,926 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-27 21:44:29,927 DEBUG BasicValueBinder: building BasicValue for description
2024-05-27 21:44:29,927 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-27 21:44:29,927 DEBUG PropertyBinder: Building property description
2024-05-27 21:44:29,928 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-27 21:44:29,929 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:44:29,929 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-27 21:44:29,929 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:44:29,929 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-27 21:44:29,930 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:44:29,930 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,930 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:44:29,930 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-27 21:44:29,930 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:44:29,931 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-27 21:44:29,931 DEBUG PropertyBinder: Building property name
2024-05-27 21:44:29,931 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-27 21:44:29,931 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-27 21:44:29,932 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-27 21:44:29,932 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-27 21:44:29,932 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-27 21:44:29,932 DEBUG PropertyBinder: Building property userAuthorId
2024-05-27 21:44:29,933 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:44:29,934 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-27 21:44:29,935 DEBUG EntityBinder: Import with entity name Question
2024-05-27 21:44:29,935 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-27 21:44:29,935 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:44:29,938 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,938 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:44:29,938 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:44:29,938 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:44:29,938 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-27 21:44:29,938 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:44:29,938 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-27 21:44:29,938 DEBUG PropertyBinder: Building property id
2024-05-27 21:44:29,939 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:44:29,939 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,939 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:44:29,939 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-27 21:44:29,939 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:44:29,939 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-27 21:44:29,939 DEBUG PropertyBinder: Building property questId
2024-05-27 21:44:29,940 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,940 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-27 21:44:29,940 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-27 21:44:29,940 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-27 21:44:29,940 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-27 21:44:29,940 DEBUG PropertyBinder: Building property questionMessage
2024-05-27 21:44:29,941 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:44:29,942 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-27 21:44:29,943 DEBUG EntityBinder: Import with entity name User
2024-05-27 21:44:29,943 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-27 21:44:29,943 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:44:29,946 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,946 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:44:29,946 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:44:29,947 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:44:29,947 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-27 21:44:29,947 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:44:29,947 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-27 21:44:29,947 DEBUG PropertyBinder: Building property id
2024-05-27 21:44:29,947 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:44:29,948 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,948 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-27 21:44:29,948 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-27 21:44:29,948 DEBUG BasicValueBinder: building BasicValue for login
2024-05-27 21:44:29,948 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-27 21:44:29,948 DEBUG PropertyBinder: Building property login
2024-05-27 21:44:29,948 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,948 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:44:29,949 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-27 21:44:29,949 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:44:29,949 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-27 21:44:29,949 DEBUG PropertyBinder: Building property name
2024-05-27 21:44:29,949 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,949 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-27 21:44:29,949 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-27 21:44:29,949 DEBUG BasicValueBinder: building BasicValue for password
2024-05-27 21:44:29,950 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-27 21:44:29,950 DEBUG PropertyBinder: Building property password
2024-05-27 21:44:29,950 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:44:29,950 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-27 21:44:29,950 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-27 21:44:29,950 DEBUG BasicValueBinder: building BasicValue for role
2024-05-27 21:44:29,950 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-27 21:44:29,950 DEBUG PropertyBinder: Building property role
2024-05-27 21:44:29,951 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:44:29,953 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:44:29,956 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-27 21:44:29,956 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-27 21:44:29,956 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:44:29,959 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:44:29,960 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:44:29,961 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-27 21:44:29,961 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:44:29,961 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-27 21:44:29,961 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:44:29,961 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-27 21:44:29,961 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-27 21:44:29,965 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-27 21:44:29,966 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-27 21:44:29,966 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-27 21:44:29,966 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-27 21:44:29,966 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-27 21:44:30,031 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-27 21:44:30,264 DEBUG SessionFactoryImpl: Building session factory
2024-05-27 21:44:30,327 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:44:30,328 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson10HQL.QuestDbDaoTest,getQueryWithParam, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@76cf841, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-27 21:44:30,339 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-27 21:44:30,350 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:44:30,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-27 21:44:30,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-27 21:44:30,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-27 21:44:30,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-27 21:44:30,401 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73041b7d] under count; prior registration was null
2024-05-27 21:44:30,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5529ff44] under every; prior registration was null
2024-05-27 21:44:30,402 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14447be] under any; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-27 21:44:30,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-27 21:44:30,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-27 21:44:30,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-27 21:44:30,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-27 21:44:30,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-27 21:44:30,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-27 21:44:30,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-27 21:44:30,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-27 21:44:30,404 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-27 21:44:30,406 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b] under sinh; prior registration was null
2024-05-27 21:44:30,406 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a] under cosh; prior registration was null
2024-05-27 21:44:30,406 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5] under tanh; prior registration was null
2024-05-27 21:44:30,406 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2] under pi; prior registration was null
2024-05-27 21:44:30,406 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0] under log; prior registration was null
2024-05-27 21:44:30,407 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-27 21:44:30,407 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-27 21:44:30,407 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-27 21:44:30,407 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-27 21:44:30,407 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-27 21:44:30,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-27 21:44:30,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-27 21:44:30,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-27 21:44:30,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-27 21:44:30,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-27 21:44:30,408 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-27 21:44:30,408 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:44:30,409 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7945b206] under position; prior registration was null
2024-05-27 21:44:30,411 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5] under overlay; prior registration was null
2024-05-27 21:44:30,412 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@65629ac6] under trim; prior registration was null
2024-05-27 21:44:30,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1946384] under cast; prior registration was null
2024-05-27 21:44:30,413 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ac4c3f7] under collate; prior registration was null
2024-05-27 21:44:30,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70029d2d] under extract; prior registration was null
2024-05-27 21:44:30,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-27 21:44:30,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-27 21:44:30,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14168e1] under ifnull; prior registration was null
2024-05-27 21:44:30,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-27 21:44:30,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-27 21:44:30,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a2dc0a] under pad; prior registration was null
2024-05-27 21:44:30,428 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5f366587] under str; prior registration was null
2024-05-27 21:44:30,429 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13bdf540] under format; prior registration was null
2024-05-27 21:44:30,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7ca16adc] under timestampadd; prior registration was null
2024-05-27 21:44:30,431 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1903b5d] under timestampdiff; prior registration was null
2024-05-27 21:44:30,431 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-27 21:44:30,431 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62b57479] under current_date; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29a33620] under current_time; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ea04cab] under current_timestamp; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@134f8ef6] under local_date; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a90265a] under local_time; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a32191e] under local_datetime; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66fbc5e7] under offset_datetime; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9accff0] under instant; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f85217c] under sql; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-27 21:44:30,432 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e39baf0
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fd7a37] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3332c7a5
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da1380b
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1095d23a
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-27 21:44:30,433 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2accaec2
2024-05-27 21:44:30,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-27 21:44:30,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-27 21:44:30,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-27 21:44:30,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-27 21:44:30,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-27 21:44:30,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-27 21:44:30,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-27 21:44:30,434 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-27 21:44:30,435 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-27 21:44:30,435 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-27 21:44:30,435 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-27 21:44:30,435 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-27 21:44:30,436 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6436e181] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-27 21:44:30,436 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-27 21:44:30,437 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-27 21:44:30,437 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5a90265a
2024-05-27 21:44:30,437 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a32191e
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36068727] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@72543547] under bit_length; prior registration was null
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3d88e6b9] under octet_length; prior registration was null
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22bf9122] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7945b206
2024-05-27 21:44:30,438 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@208205ed] under bitand; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73afe2b7] under bitor; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9687f55] under bitxor; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5700c9db] under bitnot; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@671d03bb] under median; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-27 21:44:30,439 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-27 21:44:30,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-27 21:44:30,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-27 21:44:30,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-27 21:44:30,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-27 21:44:30,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-27 21:44:30,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-27 21:44:30,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-27 21:44:30,440 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-27 21:44:30,441 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2173a742] under insert; prior registration was null
2024-05-27 21:44:30,442 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@77f4c040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@500051c5
2024-05-27 21:44:30,442 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-27 21:44:30,442 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@606a1bc4] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-27 21:44:30,442 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-27 21:44:30,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-27 21:44:30,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-27 21:44:30,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-27 21:44:30,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-27 21:44:30,443 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-27 21:44:30,444 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@41b64020] under listagg; prior registration was null
2024-05-27 21:44:30,445 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@773014d3] under array; prior registration was null
2024-05-27 21:44:30,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7fedb795] under array_list; prior registration was null
2024-05-27 21:44:30,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@34451ed8] under array_agg; prior registration was null
2024-05-27 21:44:30,448 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@996a546] under array_position; prior registration was null
2024-05-27 21:44:30,454 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5ff6dd3c] under array_positions; prior registration was null
2024-05-27 21:44:30,457 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@11c713b7] under array_positions_list; prior registration was null
2024-05-27 21:44:30,457 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2251b3bc] under array_length; prior registration was null
2024-05-27 21:44:30,460 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6042d663] under array_concat; prior registration was null
2024-05-27 21:44:30,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@3a4aadf8] under array_prepend; prior registration was null
2024-05-27 21:44:30,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7bbfc5ff] under array_append; prior registration was null
2024-05-27 21:44:30,465 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@67332b1e] under array_contains; prior registration was null
2024-05-27 21:44:30,465 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7e34b127] under array_contains_nullable; prior registration was null
2024-05-27 21:44:30,467 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ac91282] under array_overlaps; prior registration was null
2024-05-27 21:44:30,467 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f79edee] under array_overlaps_nullable; prior registration was null
2024-05-27 21:44:30,468 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bfae028] under array_get; prior registration was null
2024-05-27 21:44:30,469 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7a1b8a46] under array_set; prior registration was null
2024-05-27 21:44:30,469 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-27 21:44:30,469 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@59fc6d05] under array_remove_index; prior registration was null
2024-05-27 21:44:30,469 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78307a56] under array_slice; prior registration was null
2024-05-27 21:44:30,469 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-27 21:44:30,470 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40d52be7] under array_trim; prior registration was null
2024-05-27 21:44:30,471 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@286855ea] under array_fill; prior registration was null
2024-05-27 21:44:30,471 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64aeaf29] under array_fill_list; prior registration was null
2024-05-27 21:44:30,471 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1e1232cf] under array_to_string; prior registration was null
2024-05-27 21:44:30,471 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-27 21:44:30,472 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-27 21:44:30,472 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-27 21:44:30,472 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-27 21:44:30,473 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3730f716] under mode; prior registration was null
2024-05-27 21:44:30,473 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7730ef88] under percentile_cont; prior registration was null
2024-05-27 21:44:30,473 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@66f5a02e] under percentile_disc; prior registration was null
2024-05-27 21:44:30,473 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45843650] under rank; prior registration was null
2024-05-27 21:44:30,473 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@72443081] under dense_rank; prior registration was null
2024-05-27 21:44:30,473 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@33feda48] under percent_rank; prior registration was null
2024-05-27 21:44:30,474 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6588b715] under cume_dist; prior registration was null
2024-05-27 21:44:30,474 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@373052b5] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-27 21:44:30,474 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67e0ff3a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-27 21:44:30,475 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3a8cea24] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-27 21:44:30,478 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2b73bd6b] under trunc; prior registration was null
2024-05-27 21:44:30,478 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-27 21:44:30,479 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45] under date_trunc; prior registration was null
2024-05-27 21:44:30,486 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-27 21:44:30,486 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-27 21:44:30,486 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-27 21:44:30,487 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-27 21:44:30,488 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-27 21:44:30,489 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Date current date
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Time current time
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:44:30,490 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-27 21:44:30,491 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-27 21:44:30,492 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:44:30,493 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:44:30,494 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-27 21:44:30,494 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-27 21:44:30,494 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-27 21:44:30,494 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-27 21:44:30,494 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-27 21:44:30,494 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-27 21:44:30,494 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-27 21:44:30,494 DEBUG HQL_FUNCTIONS: mode()
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: Double pi
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-27 21:44:30,495 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-27 21:44:30,496 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Object sql
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-27 21:44:30,497 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-27 21:44:30,498 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-27 21:44:30,507 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-27 21:44:30,614 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:44:30,615 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-27 21:44:30,734 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:44:30,735 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:44:31,018 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-27 21:44:31,050 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:44:31,051 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:44:31,076 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-27 21:44:31,077 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:44:31,078 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:44:31,108 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-27 21:44:31,109 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:44:31,110 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:44:31,128 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-27 21:44:31,129 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:44:31,129 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:44:31,143 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-27 21:44:31,177 DEBUG creation: Starting post-init callbacks
2024-05-27 21:44:31,177 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-27 21:44:31,179 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-27 21:44:31,179 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-27 21:44:31,179 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-27 21:44:31,179 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-27 21:44:31,295 DEBUG create: Created new SQL alias : g1_0
2024-05-27 21:44:31,298 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-27 21:44:31,318 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-27 21:44:31,322 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-27 21:44:31,335 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-27 21:44:31,335 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-27 21:44:31,335 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-27 21:44:31,335 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-27 21:44:31,335 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-27 21:44:31,336 DEBUG create: Created new SQL alias : a1_0
2024-05-27 21:44:31,336 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-27 21:44:31,336 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-27 21:44:31,336 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-27 21:44:31,336 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-27 21:44:31,336 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-27 21:44:31,336 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-27 21:44:31,336 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-27 21:44:31,336 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-27 21:44:31,337 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:44:31,337 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:44:31,337 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-27 21:44:31,337 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:44:31,337 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-27 21:44:31,337 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-27 21:44:31,337 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-27 21:44:31,337 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-27 21:44:31,337 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-27 21:44:31,337 DEBUG create: Created new SQL alias : u1_0
2024-05-27 21:44:31,337 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-27 21:44:31,338 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-27 21:44:31,338 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-27 21:44:31,338 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-27 21:44:31,338 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-27 21:44:31,338 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-27 21:44:31,338 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-27 21:44:31,338 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-27 21:44:31,338 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:44:31,338 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-27 21:44:31,338 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-27 21:44:31,338 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-27 21:44:31,339 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-27 21:44:31,339 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-27 21:44:31,339 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-27 21:44:31,339 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-27 21:44:31,339 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-27 21:44:31,382 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-27 21:44:31,383 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-27 21:44:31,389 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-27 21:44:31,389 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-27 21:44:31,390 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@192b472d]
2024-05-27 21:44:31,392 DEBUG NamedObjectRepository: Checking 0 named HQL queries
2024-05-27 21:44:31,392 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-27 21:44:31,393 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:44:31,393 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-27 21:44:31,396 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ef2cbe6
2024-05-27 21:44:31,397 DEBUG SessionFactoryRegistry: Registering SessionFactory: 9a80fd9b-71f8-4b21-b0ca-184a7c5d8a33 (<unnamed>)
2024-05-27 21:44:31,397 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-27 21:44:31,397 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-27 21:44:31,462 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-27 21:44:31,479 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-27 21:44:31,479 DEBUG TransactionImpl: begin
2024-05-27 21:44:31,481 DEBUG hql: HQL : SELECT q FROM Quest q where id > 1 order by q.id desc
2024-05-27 21:44:31,798 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-27 21:44:31,806 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : desc
2024-05-27 21:44:31,904 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-27 21:44:31,946 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-27 21:44:32,021 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:44:32,021 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest(q))] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:44:32,033 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id) 
2024-05-27 21:44:32,039 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest(q)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest(q).userAuthorId]

2024-05-27 21:44:32,039 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest(q)) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:44:32,056 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-27 21:44:32,073 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.Quest(q) -> EntityResultInitializer(com.javarush.nikolenko.entity.Quest(q))@1718325723 (SingleTableEntityPersister(com.javarush.nikolenko.entity.Quest))

2024-05-27 21:44:32,082 DEBUG SQL: 
    select
        q1_0.id,
        q1_0.description,
        q1_0.first_question_id,
        q1_0.name,
        q1_0.user_author_id 
    from
        quest q1_0 
    where
        q1_0.id>1 
    order by
        q1_0.id desc
2024-05-27 21:44:32,094 DEBUG results: Extracted JDBC value [0] - [2]
2024-05-27 21:44:32,096 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(q)): 2
2024-05-27 21:44:32,098 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(q)#2] : 1090300647
2024-05-27 21:44:32,098 DEBUG results: Extracted JDBC value [1] - [SecondQuest description]
2024-05-27 21:44:32,098 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-27 21:44:32,098 DEBUG results: Extracted JDBC value [3] - [SecondQuest]
2024-05-27 21:44:32,098 DEBUG results: Extracted JDBC value [4] - [1]
2024-05-27 21:44:32,103 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(q)#2
2024-05-27 21:44:32,104 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25765a49
2024-05-27 21:44:32,113 DEBUG TransactionImpl: committing
2024-05-27 21:44:32,114 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-27 21:44:32,136 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-27 21:44:32,142 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-05-27 21:44:32,142 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-27 21:44:32,144 DEBUG EntityPrinter: Listing entities:
2024-05-27 21:44:32,145 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=1, name=SecondQuest, description=SecondQuest description, id=2, firstQuestionId=null}
2024-05-27 21:44:32,147 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-27 21:44:32,148 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-27 21:44:32,150 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-27 21:44:32,151 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@55317c63] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@192b472d]
2024-05-27 21:44:32,151 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-27 21:44:32,151 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:44:32,153 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-27 21:55:46,060 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-27 21:55:46,091 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-27 21:55:46,098 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-27 21:55:46,242 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-27 21:55:46,247 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-27 21:55:46,333 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-27 21:55:46,344 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-27 21:55:46,670 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-27 21:55:46,681 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-27 21:55:46,692 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-27 21:55:46,698 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-27 21:55:46,698 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-27 21:55:46,699 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:55:46,699 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-27 21:55:46,700 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-27 21:55:46,701 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-27 21:55:46,702 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-27 21:55:46,704 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:55:46,704 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-27 21:55:46,705 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-27 21:55:46,705 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-27 21:55:46,706 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-27 21:55:46,718 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-27 21:55:46,719 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-27 21:55:46,915 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:55:46,915 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:55:46,915 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-27 21:55:46,915 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-27 21:55:46,915 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-27 21:55:46,915 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-27 21:55:46,916 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:55:46,917 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-27 21:55:46,918 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-27 21:55:46,919 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-27 21:55:46,920 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-27 21:55:46,921 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-27 21:55:46,922 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-27 21:55:46,923 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-27 21:55:46,924 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-27 21:55:46,925 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:55:46,926 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-27 21:55:46,926 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:55:46,926 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-27 21:55:46,926 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-27 21:55:46,926 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-27 21:55:46,936 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-27 21:55:46,936 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-27 21:55:46,938 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26e412ef
2024-05-27 21:55:46,938 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-27 21:55:46,938 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-27 21:55:46,938 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-27 21:55:46,938 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@769d513
2024-05-27 21:55:46,938 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-27 21:55:46,939 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-27 21:55:46,939 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-27 21:55:46,939 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@769a58e5
2024-05-27 21:55:46,974 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-27 21:55:46,979 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-27 21:55:46,979 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:55:46,980 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-27 21:55:46,980 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-27 21:55:46,983 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-27 21:55:46,983 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-27 21:55:47,291 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-27 21:55:47,291 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-27 21:55:47,292 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-27 21:55:47,387 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-27 21:55:47,403 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-27 21:55:47,423 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-27 21:55:47,438 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1d75e7af)
2024-05-27 21:55:47,438 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fc142ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34b27915)
2024-05-27 21:55:47,443 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-27 21:55:47,443 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-27 21:55:47,465 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@56380231
2024-05-27 21:55:47,465 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@56380231
2024-05-27 21:55:47,465 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5bdd5689`
2024-05-27 21:55:47,474 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-27 21:55:47,474 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:55:47,474 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-27 21:55:47,484 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:55:47,485 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:55:47,485 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-27 21:55:47,485 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:55:47,485 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:55:47,485 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-27 21:55:47,488 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:55:47,488 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:55:47,488 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-27 21:55:47,492 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43a0a32d]
2024-05-27 21:55:47,578 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-27 21:55:47,633 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-27 21:55:47,652 DEBUG EntityBinder: Import with entity name Answer
2024-05-27 21:55:47,667 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-27 21:55:47,690 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:55:47,726 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,727 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:55:47,727 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:55:47,736 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:55:47,745 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-27 21:55:47,750 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:55:47,758 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-27 21:55:47,760 DEBUG PropertyBinder: Building property id
2024-05-27 21:55:47,769 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:55:47,773 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,773 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-27 21:55:47,773 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-27 21:55:47,774 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-27 21:55:47,774 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-27 21:55:47,774 DEBUG PropertyBinder: Building property answerMessage
2024-05-27 21:55:47,775 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,775 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-27 21:55:47,775 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-27 21:55:47,775 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-27 21:55:47,775 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-27 21:55:47,775 DEBUG PropertyBinder: Building property finalMessage
2024-05-27 21:55:47,776 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,776 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:55:47,776 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-27 21:55:47,776 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:55:47,776 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-27 21:55:47,776 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:55:47,777 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,777 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-27 21:55:47,777 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-27 21:55:47,777 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-27 21:55:47,777 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-27 21:55:47,778 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-27 21:55:47,778 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,778 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-27 21:55:47,779 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-27 21:55:47,779 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-27 21:55:47,779 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-27 21:55:47,779 DEBUG PropertyBinder: Building property questionId
2024-05-27 21:55:47,782 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:55:47,792 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-27 21:55:47,794 DEBUG EntityBinder: Import with entity name Game
2024-05-27 21:55:47,794 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-27 21:55:47,796 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:55:47,799 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,799 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:55:47,800 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:55:47,839 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:55:47,840 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-27 21:55:47,840 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:55:47,840 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-27 21:55:47,841 DEBUG PropertyBinder: Building property id
2024-05-27 21:55:47,841 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:55:47,841 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,842 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-27 21:55:47,842 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-27 21:55:47,842 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-27 21:55:47,842 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-27 21:55:47,842 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-27 21:55:47,843 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,843 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:55:47,843 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-27 21:55:47,844 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:55:47,844 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-27 21:55:47,844 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:55:47,845 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,845 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-27 21:55:47,845 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-27 21:55:47,845 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-27 21:55:47,845 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-27 21:55:47,846 DEBUG PropertyBinder: Building property gameState
2024-05-27 21:55:47,846 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,846 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:55:47,847 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-27 21:55:47,847 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:55:47,847 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-27 21:55:47,847 DEBUG PropertyBinder: Building property questId
2024-05-27 21:55:47,848 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,848 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-27 21:55:47,848 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-27 21:55:47,848 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-27 21:55:47,848 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-27 21:55:47,849 DEBUG PropertyBinder: Building property userPlayerId
2024-05-27 21:55:47,850 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:55:47,851 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-27 21:55:47,864 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-27 21:55:47,865 DEBUG EntityBinder: Import with entity name Quest
2024-05-27 21:55:47,865 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-27 21:55:47,866 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:55:47,872 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,873 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:55:47,873 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:55:47,873 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:55:47,873 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-27 21:55:47,874 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:55:47,874 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-27 21:55:47,874 DEBUG PropertyBinder: Building property id
2024-05-27 21:55:47,874 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:55:47,875 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,875 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-27 21:55:47,875 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-27 21:55:47,875 DEBUG BasicValueBinder: building BasicValue for description
2024-05-27 21:55:47,875 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-27 21:55:47,876 DEBUG PropertyBinder: Building property description
2024-05-27 21:55:47,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-27 21:55:47,877 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-27 21:55:47,877 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-27 21:55:47,877 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-27 21:55:47,877 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-27 21:55:47,877 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-27 21:55:47,878 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,878 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:55:47,879 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-27 21:55:47,879 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:55:47,879 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-27 21:55:47,879 DEBUG PropertyBinder: Building property name
2024-05-27 21:55:47,880 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-27 21:55:47,880 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-27 21:55:47,880 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-27 21:55:47,880 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-27 21:55:47,880 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-27 21:55:47,881 DEBUG PropertyBinder: Building property userAuthorId
2024-05-27 21:55:47,881 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:55:47,882 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-27 21:55:47,883 DEBUG EntityBinder: Import with entity name Question
2024-05-27 21:55:47,883 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-27 21:55:47,883 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:55:47,885 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,886 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:55:47,886 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:55:47,886 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:55:47,886 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-27 21:55:47,886 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:55:47,887 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-27 21:55:47,887 DEBUG PropertyBinder: Building property id
2024-05-27 21:55:47,887 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:55:47,887 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,887 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-27 21:55:47,887 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-27 21:55:47,887 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-27 21:55:47,887 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-27 21:55:47,887 DEBUG PropertyBinder: Building property questId
2024-05-27 21:55:47,888 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,888 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-27 21:55:47,888 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-27 21:55:47,888 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-27 21:55:47,888 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-27 21:55:47,888 DEBUG PropertyBinder: Building property questionMessage
2024-05-27 21:55:47,889 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:55:47,890 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-27 21:55:47,890 DEBUG EntityBinder: Import with entity name User
2024-05-27 21:55:47,891 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-27 21:55:47,891 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-27 21:55:47,894 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,895 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:55:47,895 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:55:47,896 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-27 21:55:47,896 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-27 21:55:47,896 DEBUG BasicValueBinder: building BasicValue for id
2024-05-27 21:55:47,896 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-27 21:55:47,897 DEBUG PropertyBinder: Building property id
2024-05-27 21:55:47,897 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-27 21:55:47,897 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,897 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-27 21:55:47,897 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-27 21:55:47,897 DEBUG BasicValueBinder: building BasicValue for login
2024-05-27 21:55:47,897 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-27 21:55:47,898 DEBUG PropertyBinder: Building property login
2024-05-27 21:55:47,898 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,898 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-27 21:55:47,898 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-27 21:55:47,898 DEBUG BasicValueBinder: building BasicValue for name
2024-05-27 21:55:47,898 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-27 21:55:47,898 DEBUG PropertyBinder: Building property name
2024-05-27 21:55:47,899 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,899 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-27 21:55:47,899 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-27 21:55:47,899 DEBUG BasicValueBinder: building BasicValue for password
2024-05-27 21:55:47,899 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-27 21:55:47,899 DEBUG PropertyBinder: Building property password
2024-05-27 21:55:47,899 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-27 21:55:47,900 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-27 21:55:47,900 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-27 21:55:47,900 DEBUG BasicValueBinder: building BasicValue for role
2024-05-27 21:55:47,900 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-27 21:55:47,900 DEBUG PropertyBinder: Building property role
2024-05-27 21:55:47,901 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-27 21:55:47,903 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:55:47,907 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-27 21:55:47,907 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-27 21:55:47,907 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:55:47,911 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-27 21:55:47,911 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-27 21:55:47,912 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:55:47,912 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-27 21:55:47,912 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:55:47,912 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-27 21:55:47,912 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:55:47,912 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-27 21:55:47,913 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:55:47,913 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-27 21:55:47,913 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-27 21:55:47,913 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:55:47,913 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-27 21:55:47,913 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:55:47,913 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-27 21:55:47,913 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-27 21:55:47,914 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-27 21:55:47,914 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-27 21:55:47,914 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-27 21:55:47,914 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-27 21:55:47,914 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-27 21:55:47,919 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-27 21:55:47,919 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-27 21:55:47,919 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-27 21:55:47,919 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-27 21:55:47,919 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-27 21:55:47,979 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-27 21:55:48,217 DEBUG SessionFactoryImpl: Building session factory
2024-05-27 21:55:48,280 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:55:48,281 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson10HQL.QuestDbDaoTest,getQueryWithParam, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4faf104, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-27 21:55:48,291 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-27 21:55:48,301 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:55:48,353 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-27 21:55:48,354 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-27 21:55:48,354 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-27 21:55:48,355 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-27 21:55:48,357 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@307e4c44] under count; prior registration was null
2024-05-27 21:55:48,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5482bcac] under every; prior registration was null
2024-05-27 21:55:48,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@10244722] under any; prior registration was null
2024-05-27 21:55:48,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-27 21:55:48,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-27 21:55:48,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-27 21:55:48,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-27 21:55:48,358 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-27 21:55:48,359 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-27 21:55:48,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-27 21:55:48,360 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-27 21:55:48,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e] under sinh; prior registration was null
2024-05-27 21:55:48,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a] under cosh; prior registration was null
2024-05-27 21:55:48,362 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d] under tanh; prior registration was null
2024-05-27 21:55:48,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65] under pi; prior registration was null
2024-05-27 21:55:48,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4be0a27d] under log; prior registration was null
2024-05-27 21:55:48,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-27 21:55:48,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-27 21:55:48,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-27 21:55:48,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-27 21:55:48,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-27 21:55:48,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-27 21:55:48,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-27 21:55:48,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-27 21:55:48,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-27 21:55:48,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-27 21:55:48,364 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-27 21:55:48,364 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:55:48,365 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4a9860] under position; prior registration was null
2024-05-27 21:55:48,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5cff6b74] under overlay; prior registration was null
2024-05-27 21:55:48,380 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@ea04cab] under trim; prior registration was null
2024-05-27 21:55:48,381 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@285583d4] under cast; prior registration was null
2024-05-27 21:55:48,382 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1039bfc4] under collate; prior registration was null
2024-05-27 21:55:48,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@58a84a12] under extract; prior registration was null
2024-05-27 21:55:48,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-27 21:55:48,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-27 21:55:48,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6b649efa] under ifnull; prior registration was null
2024-05-27 21:55:48,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-27 21:55:48,383 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-27 21:55:48,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3d88e6b9] under pad; prior registration was null
2024-05-27 21:55:48,384 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@9687f55] under str; prior registration was null
2024-05-27 21:55:48,385 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7f6329cb] under format; prior registration was null
2024-05-27 21:55:48,386 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a15b73] under timestampadd; prior registration was null
2024-05-27 21:55:48,387 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1a538ed8] under timestampdiff; prior registration was null
2024-05-27 21:55:48,387 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-27 21:55:48,387 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4cb957b8] under current_date; prior registration was null
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cdc7b09] under current_time; prior registration was null
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7364eed1] under current_timestamp; prior registration was null
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@684e8c9d] under local_date; prior registration was null
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ecc02bb] under local_time; prior registration was null
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31973858] under local_datetime; prior registration was null
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65514add] under offset_datetime; prior registration was null
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-27 21:55:48,388 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79e7188e] under instant; prior registration was null
2024-05-27 21:55:48,389 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-27 21:55:48,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@51e754e1] under sql; prior registration was null
2024-05-27 21:55:48,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-27 21:55:48,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-27 21:55:48,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-27 21:55:48,389 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4be0a27d
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26865482] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-27 21:55:48,390 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-27 21:55:48,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-27 21:55:48,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-27 21:55:48,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-27 21:55:48,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-27 21:55:48,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-27 21:55:48,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-27 21:55:48,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-27 21:55:48,391 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-27 21:55:48,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@738d37fc] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-27 21:55:48,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-27 21:55:48,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-27 21:55:48,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6ecc02bb
2024-05-27 21:55:48,393 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@31973858
2024-05-27 21:55:48,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@46fb0c33] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-27 21:55:48,394 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-27 21:55:48,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3b009e7b] under bit_length; prior registration was null
2024-05-27 21:55:48,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@270a620] under octet_length; prior registration was null
2024-05-27 21:55:48,394 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-27 21:55:48,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-27 21:55:48,395 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-27 21:55:48,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41f4039e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4a9860
2024-05-27 21:55:48,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ff00507] under bitand; prior registration was null
2024-05-27 21:55:48,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@603cabc4] under bitor; prior registration was null
2024-05-27 21:55:48,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fa5045] under bitxor; prior registration was null
2024-05-27 21:55:48,395 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f347d7] under bitnot; prior registration was null
2024-05-27 21:55:48,396 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-27 21:55:48,396 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-27 21:55:48,396 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-27 21:55:48,396 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-27 21:55:48,396 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-27 21:55:48,396 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-27 21:55:48,396 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5974b233] under median; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-27 21:55:48,397 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-27 21:55:48,398 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-27 21:55:48,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69de5bed] under insert; prior registration was null
2024-05-27 21:55:48,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@545b5ed0] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5cff6b74
2024-05-27 21:55:48,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-27 21:55:48,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a7df831] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-27 21:55:48,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-27 21:55:48,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-27 21:55:48,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-27 21:55:48,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-27 21:55:48,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-27 21:55:48,400 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-27 21:55:48,401 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@45117dd] under listagg; prior registration was null
2024-05-27 21:55:48,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@58324c9f] under array; prior registration was null
2024-05-27 21:55:48,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d7d8613] under array_list; prior registration was null
2024-05-27 21:55:48,403 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@abad89c] under array_agg; prior registration was null
2024-05-27 21:55:48,406 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@73894c5a] under array_position; prior registration was null
2024-05-27 21:55:48,411 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@536b71b4] under array_positions; prior registration was null
2024-05-27 21:55:48,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1e8fb66f] under array_positions_list; prior registration was null
2024-05-27 21:55:48,414 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d8d17a3] under array_length; prior registration was null
2024-05-27 21:55:48,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@43f03c23] under array_concat; prior registration was null
2024-05-27 21:55:48,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@629a9f26] under array_prepend; prior registration was null
2024-05-27 21:55:48,417 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@b791a81] under array_append; prior registration was null
2024-05-27 21:55:48,419 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7c1a8f0f] under array_contains; prior registration was null
2024-05-27 21:55:48,419 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3730f716] under array_contains_nullable; prior registration was null
2024-05-27 21:55:48,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@15a3b42] under array_overlaps; prior registration was null
2024-05-27 21:55:48,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@52c9d3d0] under array_overlaps_nullable; prior registration was null
2024-05-27 21:55:48,420 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b2bf745] under array_get; prior registration was null
2024-05-27 21:55:48,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@5d318e91] under array_set; prior registration was null
2024-05-27 21:55:48,421 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-27 21:55:48,422 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@766a52f5] under array_remove_index; prior registration was null
2024-05-27 21:55:48,422 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4342c13] under array_slice; prior registration was null
2024-05-27 21:55:48,422 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-27 21:55:48,422 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ba1209b] under array_trim; prior registration was null
2024-05-27 21:55:48,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@750ed637] under array_fill; prior registration was null
2024-05-27 21:55:48,423 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5190010f] under array_fill_list; prior registration was null
2024-05-27 21:55:48,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4998e74b] under array_to_string; prior registration was null
2024-05-27 21:55:48,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-27 21:55:48,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-27 21:55:48,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-27 21:55:48,424 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-27 21:55:48,426 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@433d9680] under mode; prior registration was null
2024-05-27 21:55:48,426 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@566e142] under percentile_cont; prior registration was null
2024-05-27 21:55:48,426 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2da81754] under percentile_disc; prior registration was null
2024-05-27 21:55:48,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f9e08d4] under rank; prior registration was null
2024-05-27 21:55:48,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@390037e7] under dense_rank; prior registration was null
2024-05-27 21:55:48,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@704067c6] under percent_rank; prior registration was null
2024-05-27 21:55:48,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7f4596d0] under cume_dist; prior registration was null
2024-05-27 21:55:48,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78a8978a] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-27 21:55:48,427 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@f171912] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-27 21:55:48,428 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@1e54a6b1] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-27 21:55:48,431 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@60f77af] under trunc; prior registration was null
2024-05-27 21:55:48,431 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-27 21:55:48,431 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2574a9e3] under date_trunc; prior registration was null
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-27 21:55:48,437 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-27 21:55:48,438 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-27 21:55:48,439 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Date current date
2024-05-27 21:55:48,440 DEBUG HQL_FUNCTIONS: Time current time
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-27 21:55:48,441 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-27 21:55:48,442 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-27 21:55:48,443 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: mode()
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Double pi
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,444 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,445 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,445 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,445 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,445 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,445 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,445 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-27 21:55:48,445 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-27 21:55:48,445 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-27 21:55:48,446 DEBUG HQL_FUNCTIONS: Object sql
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-27 21:55:48,447 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-27 21:55:48,448 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-27 21:55:48,449 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-27 21:55:48,449 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-27 21:55:48,459 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-27 21:55:48,558 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-27 21:55:48,559 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-27 21:55:48,666 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-27 21:55:48,667 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-27 21:55:48,935 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-27 21:55:48,966 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-27 21:55:48,966 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-27 21:55:48,990 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-27 21:55:48,991 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-27 21:55:48,991 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-27 21:55:49,020 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-27 21:55:49,021 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-27 21:55:49,021 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-27 21:55:49,042 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-27 21:55:49,043 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-27 21:55:49,043 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-27 21:55:49,061 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-27 21:55:49,096 DEBUG creation: Starting post-init callbacks
2024-05-27 21:55:49,096 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-27 21:55:49,096 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-27 21:55:49,096 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-27 21:55:49,096 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-27 21:55:49,096 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-27 21:55:49,205 DEBUG create: Created new SQL alias : g1_0
2024-05-27 21:55:49,208 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-27 21:55:49,226 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-27 21:55:49,232 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-27 21:55:49,244 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-27 21:55:49,245 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-27 21:55:49,245 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-27 21:55:49,245 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-27 21:55:49,245 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-27 21:55:49,245 DEBUG create: Created new SQL alias : a1_0
2024-05-27 21:55:49,245 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-27 21:55:49,246 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-27 21:55:49,246 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-27 21:55:49,246 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-27 21:55:49,246 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-27 21:55:49,246 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-27 21:55:49,246 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-27 21:55:49,246 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-27 21:55:49,246 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:55:49,246 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:55:49,247 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-27 21:55:49,247 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:55:49,247 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-27 21:55:49,247 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-27 21:55:49,247 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-27 21:55:49,247 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-27 21:55:49,247 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-27 21:55:49,247 DEBUG create: Created new SQL alias : u1_0
2024-05-27 21:55:49,247 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-27 21:55:49,248 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-27 21:55:49,248 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-27 21:55:49,248 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-27 21:55:49,248 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-27 21:55:49,248 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-27 21:55:49,248 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-27 21:55:49,248 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-27 21:55:49,248 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:55:49,248 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-27 21:55:49,248 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-27 21:55:49,248 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-27 21:55:49,249 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-27 21:55:49,249 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-27 21:55:49,249 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-27 21:55:49,249 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-27 21:55:49,249 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-27 21:55:49,294 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-27 21:55:49,295 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-27 21:55:49,303 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-27 21:55:49,303 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-27 21:55:49,305 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@45e11627]
2024-05-27 21:55:49,773 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-27 21:55:49,773 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-27 21:55:49,781 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-27 21:55:49,788 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-27 21:55:50,070 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-27 21:55:50,072 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-27 21:55:50,174 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-27 21:55:50,186 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-27 21:55:50,200 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-27 21:55:50,210 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-27 21:55:50,212 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-27 21:55:50,212 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-27 21:55:50,217 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4910afdf
2024-05-27 21:55:50,217 DEBUG SessionFactoryRegistry: Registering SessionFactory: 999d1d62-9606-4529-9146-de40fa1c6d7d (<unnamed>)
2024-05-27 21:55:50,217 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-27 21:55:50,217 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-27 21:55:50,265 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-27 21:55:50,266 DEBUG TransactionImpl: begin
2024-05-27 21:55:50,349 DEBUG create: Created new SQL alias : q1_0
2024-05-27 21:55:50,349 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest(q))] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-27 21:55:50,366 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2024-05-27 21:55:50,366 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id) 
2024-05-27 21:55:50,377 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest(q)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(q).name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest(q).userAuthorId]

2024-05-27 21:55:50,378 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest(q)) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-27 21:55:50,408 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-27 21:55:50,440 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.Quest(q) -> EntityResultInitializer(com.javarush.nikolenko.entity.Quest(q))@1569607592 (SingleTableEntityPersister(com.javarush.nikolenko.entity.Quest))

2024-05-27 21:55:50,451 DEBUG SQL: 
    select
        q1_0.id,
        q1_0.description,
        q1_0.first_question_id,
        q1_0.name,
        q1_0.user_author_id 
    from
        quest q1_0 
    where
        q1_0.id>?
2024-05-27 21:55:50,698 DEBUG results: Extracted JDBC value [0] - [2]
2024-05-27 21:55:50,700 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(q)): 2
2024-05-27 21:55:50,702 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(q)#2] : 700081136
2024-05-27 21:55:50,702 DEBUG results: Extracted JDBC value [1] - [SecondQuest description]
2024-05-27 21:55:50,702 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-27 21:55:50,702 DEBUG results: Extracted JDBC value [3] - [SecondQuest]
2024-05-27 21:55:50,703 DEBUG results: Extracted JDBC value [4] - [1]
2024-05-27 21:55:50,709 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(q)#2
2024-05-27 21:55:50,710 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@63a7af06
2024-05-27 21:55:50,718 DEBUG TransactionImpl: committing
2024-05-27 21:55:50,719 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-27 21:55:50,722 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-27 21:55:50,732 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-05-27 21:55:50,732 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-27 21:55:50,733 DEBUG EntityPrinter: Listing entities:
2024-05-27 21:55:50,735 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=1, name=SecondQuest, description=SecondQuest description, id=2, firstQuestionId=null}
2024-05-27 21:55:50,738 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-27 21:55:50,738 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-27 21:55:50,742 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-27 21:55:50,743 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@47d81427] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45e11627]
2024-05-27 21:55:50,743 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-27 21:55:50,743 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-27 21:55:50,745 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
