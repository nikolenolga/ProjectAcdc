2024-05-28 16:23:07,897 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-28 16:23:07,975 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-28 16:23:08,117 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-28 16:23:08,394 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-28 16:23:08,409 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-28 16:23:08,710 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-28 16:23:08,789 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-28 16:23:10,632 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-28 16:23:10,694 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-28 16:23:10,757 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:23:10,789 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-28 16:23:10,883 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-28 16:23:10,883 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-28 16:23:11,525 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:23:11,526 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:23:11,526 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:23:11,526 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:23:11,526 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:23:11,526 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:23:11,526 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:23:11,526 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:23:11,526 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:23:11,527 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:23:11,527 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:23:11,527 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:23:11,527 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:23:11,527 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:23:11,528 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:23:11,529 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:23:11,530 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:23:11,531 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:23:11,531 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@985696
2024-05-28 16:23:11,531 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:23:11,531 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:23:11,531 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:23:11,531 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:23:11,531 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:23:11,532 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:23:11,533 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:23:11,533 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:23:11,533 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:23:11,533 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:23:11,533 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:23:11,533 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:23:11,534 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:23:11,534 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:23:11,534 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:23:11,534 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:23:11,534 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:23:11,534 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-28 16:23:11,535 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e1f8469
2024-05-28 16:23:11,535 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2e380628
2024-05-28 16:23:11,535 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2e380628
2024-05-28 16:23:11,535 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b6c624
2024-05-28 16:23:11,536 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1eaf1e62
2024-05-28 16:23:11,536 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@c81fd12
2024-05-28 16:23:11,536 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@c81fd12
2024-05-28 16:23:11,536 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@62e6a3ec
2024-05-28 16:23:11,536 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@62e6a3ec
2024-05-28 16:23:11,536 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5754de72
2024-05-28 16:23:11,536 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5754de72
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5754de72
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@31ee96f4
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@31ee96f4
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@31ee96f4
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@320494b6
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@652ab8d9
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@14fc5d40
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@14fc5d40
2024-05-28 16:23:11,537 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@51e0301d
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@51e0301d
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@51e0301d
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@47d7bfb3
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@770b3be0
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@1eb6e1c
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1eb6e1c
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@51dbd6e4
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@51dbd6e4
2024-05-28 16:23:11,538 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@51dbd6e4
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@2b8bd14b
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2b8bd14b
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5f13be1
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5f13be1
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f303ecd
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f303ecd
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@50d3bf39
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@50d3bf39
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@25a73de1
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25a73de1
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@29852487
2024-05-28 16:23:11,539 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@771db12c
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@66ba7e45
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@66ba7e45
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@4ba89729
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@178270b2
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@795fd838
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1b005a0b
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@141e879d
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@109d724c
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1704f67f
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@e4d2696
2024-05-28 16:23:11,547 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6e0f7aad
2024-05-28 16:23:11,736 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-28 16:23:11,862 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-28 16:23:11,877 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:23:11,877 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-28 16:23:11,877 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-28 16:23:11,893 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-28 16:23:11,893 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-28 16:23:12,798 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-28 16:23:12,798 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-28 16:23:12,798 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-28 16:23:13,321 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-28 16:23:13,336 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-28 16:23:13,441 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-28 16:23:13,467 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7158daf2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10f19647)
2024-05-28 16:23:13,467 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@102efc59) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3936df72)
2024-05-28 16:23:13,483 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-28 16:23:13,483 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@44550792
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@44550792
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@66ba7e45`
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:23:13,515 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:23:13,531 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:23:13,531 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:23:13,531 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:23:13,531 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45c2e0a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@119c745c]
2024-05-28 16:23:13,652 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-28 16:23:13,809 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-28 16:23:13,819 DEBUG EntityBinder: Import with entity name Answer
2024-05-28 16:23:13,850 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-28 16:23:13,881 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:23:13,929 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:13,929 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:23:13,929 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:23:13,929 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:23:13,929 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-28 16:23:13,963 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:23:13,979 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-28 16:23:13,979 DEBUG PropertyBinder: Building property id
2024-05-28 16:23:13,979 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:23:13,994 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:13,994 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-28 16:23:13,994 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-28 16:23:13,994 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-28 16:23:13,994 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-28 16:23:13,994 DEBUG PropertyBinder: Building property answerMessage
2024-05-28 16:23:13,994 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:13,994 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-28 16:23:13,994 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-28 16:23:13,994 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-28 16:23:13,994 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-28 16:23:13,994 DEBUG PropertyBinder: Building property finalMessage
2024-05-28 16:23:13,994 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:13,994 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:23:13,994 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-28 16:23:13,994 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:23:13,994 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-28 16:23:13,994 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:23:13,994 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:13,994 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-28 16:23:13,994 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-28 16:23:13,994 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-28 16:23:13,994 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-28 16:23:13,994 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-28 16:23:13,994 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:13,994 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-28 16:23:13,994 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-28 16:23:13,994 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-28 16:23:13,994 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-28 16:23:13,994 DEBUG PropertyBinder: Building property questionId
2024-05-28 16:23:13,994 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:23:14,010 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-28 16:23:14,010 DEBUG EntityBinder: Import with entity name Game
2024-05-28 16:23:14,010 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-28 16:23:14,010 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:23:14,010 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,010 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:23:14,010 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:23:14,041 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:23:14,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-28 16:23:14,041 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:23:14,041 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-28 16:23:14,041 DEBUG PropertyBinder: Building property id
2024-05-28 16:23:14,041 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:23:14,041 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,041 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-28 16:23:14,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-28 16:23:14,041 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-28 16:23:14,041 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-28 16:23:14,041 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-28 16:23:14,041 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,041 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:23:14,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-28 16:23:14,041 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:23:14,041 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-28 16:23:14,041 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:23:14,041 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,041 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:23:14,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-28 16:23:14,041 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:23:14,041 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-28 16:23:14,041 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:23:14,041 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,041 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:23:14,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-28 16:23:14,041 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:23:14,041 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-28 16:23:14,041 DEBUG PropertyBinder: Building property questId
2024-05-28 16:23:14,041 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,041 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-28 16:23:14,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-28 16:23:14,041 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-28 16:23:14,041 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-28 16:23:14,041 DEBUG PropertyBinder: Building property userPlayerId
2024-05-28 16:23:14,041 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:23:14,041 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-28 16:23:14,072 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-28 16:23:14,072 DEBUG EntityBinder: Import with entity name Quest
2024-05-28 16:23:14,072 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-28 16:23:14,072 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:23:14,072 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,072 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:23:14,072 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:23:14,072 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:23:14,072 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-28 16:23:14,072 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:23:14,072 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-28 16:23:14,072 DEBUG PropertyBinder: Building property id
2024-05-28 16:23:14,072 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:23:14,072 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,072 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-28 16:23:14,072 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-28 16:23:14,072 DEBUG BasicValueBinder: building BasicValue for description
2024-05-28 16:23:14,072 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-28 16:23:14,072 DEBUG PropertyBinder: Building property description
2024-05-28 16:23:14,072 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-28 16:23:14,072 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:23:14,072 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-28 16:23:14,072 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:23:14,072 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-28 16:23:14,072 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:23:14,088 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,088 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:23:14,088 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-28 16:23:14,088 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:23:14,088 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-28 16:23:14,088 DEBUG PropertyBinder: Building property name
2024-05-28 16:23:14,088 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-28 16:23:14,088 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-28 16:23:14,088 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-28 16:23:14,088 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-28 16:23:14,088 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-28 16:23:14,088 DEBUG PropertyBinder: Building property userAuthorId
2024-05-28 16:23:14,088 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:23:14,088 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-28 16:23:14,088 DEBUG EntityBinder: Import with entity name Question
2024-05-28 16:23:14,088 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-28 16:23:14,088 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,104 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:23:14,104 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:23:14,104 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:23:14,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-28 16:23:14,104 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:23:14,104 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-28 16:23:14,104 DEBUG PropertyBinder: Building property id
2024-05-28 16:23:14,104 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,104 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:23:14,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-28 16:23:14,104 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:23:14,104 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-28 16:23:14,104 DEBUG PropertyBinder: Building property questId
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,104 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-28 16:23:14,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-28 16:23:14,104 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-28 16:23:14,104 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-28 16:23:14,104 DEBUG PropertyBinder: Building property questionMessage
2024-05-28 16:23:14,104 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:23:14,104 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-28 16:23:14,104 DEBUG EntityBinder: Import with entity name User
2024-05-28 16:23:14,104 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,104 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:23:14,104 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:23:14,104 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:23:14,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-28 16:23:14,104 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:23:14,104 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-28 16:23:14,104 DEBUG PropertyBinder: Building property id
2024-05-28 16:23:14,104 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,104 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-28 16:23:14,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-28 16:23:14,104 DEBUG BasicValueBinder: building BasicValue for login
2024-05-28 16:23:14,104 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-28 16:23:14,104 DEBUG PropertyBinder: Building property login
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,104 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:23:14,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-28 16:23:14,104 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:23:14,104 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-28 16:23:14,104 DEBUG PropertyBinder: Building property name
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,104 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-28 16:23:14,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-28 16:23:14,104 DEBUG BasicValueBinder: building BasicValue for password
2024-05-28 16:23:14,104 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-28 16:23:14,104 DEBUG PropertyBinder: Building property password
2024-05-28 16:23:14,104 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:23:14,104 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-28 16:23:14,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-28 16:23:14,104 DEBUG BasicValueBinder: building BasicValue for role
2024-05-28 16:23:14,104 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-28 16:23:14,104 DEBUG PropertyBinder: Building property role
2024-05-28 16:23:14,104 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:23:14,119 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:23:14,119 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-28 16:23:14,119 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-28 16:23:14,119 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-28 16:23:14,136 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-28 16:23:14,151 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-28 16:23:14,151 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-28 16:23:14,151 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-28 16:23:14,151 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-28 16:23:14,151 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-28 16:23:14,245 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-28 16:23:15,391 DEBUG SessionFactoryImpl: Building session factory
2024-05-28 16:23:15,485 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:23:15,485 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson9Hibernate.UserDbDaoTest,find, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ab24484, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-28 16:23:15,502 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-28 16:23:15,522 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:23:15,601 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-28 16:23:15,601 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-28 16:23:15,601 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@14168e1] under count; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5f366587] under every; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6003ad65] under any; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1903b5d] under sinh; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4041739c] under cosh; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5cff6b74] under tanh; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@627ff1b8] under pi; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62b57479] under log; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1039bfc4] under position; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@36068727] under overlay; prior registration was null
2024-05-28 16:23:15,616 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@208205ed] under trim; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@706ceca6] under cast; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f6329cb] under collate; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6a15b73] under extract; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@29896529] under ifnull; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@78910096] under pad; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3cdc7b09] under str; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@79e7188e] under format; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@51e754e1] under timestampadd; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@61bb1e4d] under timestampdiff; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@270a620] under current_date; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@41f4039e] under current_time; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ff00507] under current_timestamp; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@603cabc4] under local_date; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67fa5045] under local_time; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f347d7] under local_datetime; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5974b233] under offset_datetime; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c134052] under instant; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4fc165f6] under sql; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62b57479
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@545b5ed0] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5cff6b74
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1903b5d
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4041739c
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@627ff1b8
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-28 16:23:15,632 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@2c748a15] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@67fa5045
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f347d7
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@45117dd] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7741771e] under bit_length; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@834e986] under octet_length; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cae2e4d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1039bfc4
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@604d23fa] under bitand; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cc8416a] under bitor; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@331ff3ac] under bitxor; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e5e6fc4] under bitnot; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2785db06] under median; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35d60381] under insert; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5d7d8613] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@36068727
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6eb089e6] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@11dcd42c] under listagg; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@576b7c74] under array; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@21de60a7] under array_list; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@28157173] under array_agg; prior registration was null
2024-05-28 16:23:15,648 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2287395] under array_position; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@47829d6d] under array_positions; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@b791a81] under array_positions_list; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4391a2d8] under array_length; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@1e1232cf] under array_concat; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7e87ef9e] under array_prepend; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@e3b0369] under array_append; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@298b64f7] under array_contains; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@740b6628] under array_contains_nullable; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@337a6d30] under array_overlaps; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2921a36a] under array_overlaps_nullable; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5190010f] under array_get; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@5d878b25] under array_set; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@575cabf0] under array_remove_index; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680] under array_slice; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@566e142] under array_trim; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@588545ac] under array_fill; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2b08772d] under array_fill_list; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@159424e2] under array_to_string; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4e245739] under mode; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d66e944] under percentile_cont; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@469a7575] under percentile_disc; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5042e3d0] under rank; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1c34365c] under dense_rank; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@348137e8] under percent_rank; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@412c5e8b] under cume_dist; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2574a9e3] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@18b6d3c1] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@11d86b9d] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2ac519dc] under trunc; prior registration was null
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-28 16:23:15,663 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d53e6f7] under date_trunc; prior registration was null
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Date current date
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Time current time
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: mode()
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double pi
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Object sql
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-28 16:23:15,679 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-28 16:23:15,695 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-28 16:23:15,915 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:23:15,931 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-28 16:23:16,212 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:23:16,212 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:23:16,572 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-28 16:23:16,682 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:23:16,682 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:23:16,698 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-28 16:23:16,698 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:23:16,698 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:23:16,729 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-28 16:23:16,729 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:23:16,729 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:23:16,745 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-28 16:23:16,745 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:23:16,745 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:23:16,761 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-28 16:23:16,807 DEBUG creation: Starting post-init callbacks
2024-05-28 16:23:16,807 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-28 16:23:16,807 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-28 16:23:16,807 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-28 16:23:16,807 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-28 16:23:16,807 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-28 16:23:16,964 DEBUG create: Created new SQL alias : g1_0
2024-05-28 16:23:16,964 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-28 16:23:16,998 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-28 16:23:16,998 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-28 16:23:17,064 DEBUG create: Created new SQL alias : a1_0
2024-05-28 16:23:17,064 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-28 16:23:17,064 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-28 16:23:17,064 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-28 16:23:17,064 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-28 16:23:17,064 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:23:17,064 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:23:17,064 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-28 16:23:17,064 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-28 16:23:17,080 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:23:17,080 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:23:17,080 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-28 16:23:17,080 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-28 16:23:17,080 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:23:17,080 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-28 16:23:17,080 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-28 16:23:17,080 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-28 16:23:17,080 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-28 16:23:17,127 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-28 16:23:17,127 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-28 16:23:17,127 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-28 16:23:17,127 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-28 16:23:17,174 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45c2e0a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@33ebe4f0]
2024-05-28 16:23:17,190 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-28 16:23:17,190 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-28 16:23:17,253 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-28 16:23:17,300 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-28 16:23:17,597 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-28 16:23:17,597 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-28 16:23:17,707 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-28 16:23:17,738 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-28 16:23:17,754 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-28 16:23:17,754 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-28 16:23:17,754 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:23:17,754 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-28 16:23:17,785 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ffd35dd
2024-05-28 16:23:17,785 DEBUG SessionFactoryRegistry: Registering SessionFactory: ef1c2481-5442-4df7-9d85-3e076790940b (<unnamed>)
2024-05-28 16:23:17,785 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-28 16:23:17,785 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-28 16:23:17,832 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:23:17,832 DEBUG TransactionImpl: begin
2024-05-28 16:23:17,847 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:23:17,847 DEBUG TransactionImpl: begin
2024-05-28 16:23:17,894 DEBUG TransactionImpl: rolling back
2024-05-28 16:23:17,895 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:23:17,897 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:23:17,903 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-28 16:23:17,903 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@642c5bb3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@33ebe4f0]
2024-05-28 16:23:17,903 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-28 16:23:17,903 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:23:17,919 ERROR pooling: Connection leak detected: there are 1 unclosed connections upon shutting down pool jdbc:postgresql://localhost:5432/game
2024-05-28 16:23:17,925 ERROR pooling: Connection leak detected: there are 1 unclosed connections
2024-05-28 16:23:17,925 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-28 16:24:40,799 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-28 16:24:40,830 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-28 16:24:40,846 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-28 16:24:40,976 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-28 16:24:40,976 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-28 16:24:41,072 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-28 16:24:41,088 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-28 16:24:41,473 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-28 16:24:41,488 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-28 16:24:41,504 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-28 16:24:41,504 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-28 16:24:41,504 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-28 16:24:41,504 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:24:41,504 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:24:41,504 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-28 16:24:41,519 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-28 16:24:41,519 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-28 16:24:41,519 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:24:41,535 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-28 16:24:41,535 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-28 16:24:41,535 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:24:41,535 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-28 16:24:41,535 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-28 16:24:41,535 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:24:41,739 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5b2f8ab6
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b2f8ab6
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@57aa341b
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@26e412ef
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@769d513
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-28 16:24:41,754 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-28 16:24:41,786 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-28 16:24:41,801 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-28 16:24:41,801 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:24:41,801 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-28 16:24:41,801 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-28 16:24:41,801 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-28 16:24:41,801 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-28 16:24:42,099 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-28 16:24:42,099 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-28 16:24:42,099 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-28 16:24:42,181 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-28 16:24:42,196 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-28 16:24:42,217 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-28 16:24:42,221 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3419e23b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2)
2024-05-28 16:24:42,221 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d75e7af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fc142ec)
2024-05-28 16:24:42,221 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-28 16:24:42,221 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-28 16:24:42,238 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6c15e8c7
2024-05-28 16:24:42,238 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6c15e8c7
2024-05-28 16:24:42,238 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5b2f8ab6`
2024-05-28 16:24:42,238 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:24:42,254 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:24:42,254 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53830483] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@29f85fe1]
2024-05-28 16:24:42,316 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-28 16:24:42,347 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-28 16:24:42,363 DEBUG EntityBinder: Import with entity name Answer
2024-05-28 16:24:42,379 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-28 16:24:42,394 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:24:42,426 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,426 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:24:42,426 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:24:42,426 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:24:42,442 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-28 16:24:42,442 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:24:42,442 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-28 16:24:42,442 DEBUG PropertyBinder: Building property id
2024-05-28 16:24:42,458 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:24:42,458 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,458 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-28 16:24:42,458 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-28 16:24:42,458 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-28 16:24:42,458 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-28 16:24:42,458 DEBUG PropertyBinder: Building property answerMessage
2024-05-28 16:24:42,458 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,458 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-28 16:24:42,458 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-28 16:24:42,458 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-28 16:24:42,458 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-28 16:24:42,458 DEBUG PropertyBinder: Building property finalMessage
2024-05-28 16:24:42,458 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,458 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:24:42,458 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-28 16:24:42,458 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:24:42,458 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-28 16:24:42,458 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:24:42,458 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,458 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-28 16:24:42,458 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-28 16:24:42,458 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-28 16:24:42,458 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-28 16:24:42,458 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-28 16:24:42,458 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,458 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-28 16:24:42,458 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-28 16:24:42,458 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-28 16:24:42,458 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-28 16:24:42,458 DEBUG PropertyBinder: Building property questionId
2024-05-28 16:24:42,458 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:24:42,473 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-28 16:24:42,473 DEBUG EntityBinder: Import with entity name Game
2024-05-28 16:24:42,473 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-28 16:24:42,473 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:24:42,473 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,473 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:24:42,473 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:24:42,504 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:24:42,504 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-28 16:24:42,504 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:24:42,504 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-28 16:24:42,504 DEBUG PropertyBinder: Building property id
2024-05-28 16:24:42,504 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:24:42,504 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,504 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-28 16:24:42,504 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-28 16:24:42,504 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-28 16:24:42,504 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-28 16:24:42,504 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-28 16:24:42,504 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,504 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:24:42,504 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-28 16:24:42,504 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:24:42,504 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-28 16:24:42,504 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:24:42,504 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,504 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:24:42,504 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-28 16:24:42,504 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:24:42,504 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-28 16:24:42,520 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:24:42,520 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,520 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:24:42,520 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-28 16:24:42,520 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:24:42,520 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-28 16:24:42,520 DEBUG PropertyBinder: Building property questId
2024-05-28 16:24:42,520 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,520 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-28 16:24:42,520 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-28 16:24:42,520 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-28 16:24:42,520 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-28 16:24:42,520 DEBUG PropertyBinder: Building property userPlayerId
2024-05-28 16:24:42,520 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:24:42,520 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-28 16:24:42,520 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-28 16:24:42,520 DEBUG EntityBinder: Import with entity name Quest
2024-05-28 16:24:42,520 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-28 16:24:42,520 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,536 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:24:42,536 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:24:42,536 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:24:42,536 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-28 16:24:42,536 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:24:42,536 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-28 16:24:42,536 DEBUG PropertyBinder: Building property id
2024-05-28 16:24:42,536 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,536 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-28 16:24:42,536 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-28 16:24:42,536 DEBUG BasicValueBinder: building BasicValue for description
2024-05-28 16:24:42,536 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-28 16:24:42,536 DEBUG PropertyBinder: Building property description
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-28 16:24:42,536 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:24:42,536 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-28 16:24:42,536 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:24:42,536 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-28 16:24:42,536 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,536 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:24:42,536 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-28 16:24:42,536 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:24:42,536 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-28 16:24:42,536 DEBUG PropertyBinder: Building property name
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-28 16:24:42,536 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-28 16:24:42,536 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-28 16:24:42,536 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-28 16:24:42,536 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-28 16:24:42,536 DEBUG PropertyBinder: Building property userAuthorId
2024-05-28 16:24:42,536 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:24:42,536 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-28 16:24:42,536 DEBUG EntityBinder: Import with entity name Question
2024-05-28 16:24:42,536 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,536 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:24:42,536 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:24:42,536 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:24:42,536 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-28 16:24:42,536 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:24:42,536 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-28 16:24:42,536 DEBUG PropertyBinder: Building property id
2024-05-28 16:24:42,536 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,536 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:24:42,536 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-28 16:24:42,536 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:24:42,536 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-28 16:24:42,536 DEBUG PropertyBinder: Building property questId
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,536 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-28 16:24:42,536 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-28 16:24:42,536 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-28 16:24:42,536 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-28 16:24:42,536 DEBUG PropertyBinder: Building property questionMessage
2024-05-28 16:24:42,536 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:24:42,536 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-28 16:24:42,536 DEBUG EntityBinder: Import with entity name User
2024-05-28 16:24:42,536 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-28 16:24:42,536 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:24:42,551 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,551 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:24:42,551 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:24:42,551 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:24:42,551 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:24:42,551 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-28 16:24:42,551 DEBUG PropertyBinder: Building property id
2024-05-28 16:24:42,551 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:24:42,551 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,551 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-28 16:24:42,551 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: building BasicValue for login
2024-05-28 16:24:42,551 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-28 16:24:42,551 DEBUG PropertyBinder: Building property login
2024-05-28 16:24:42,551 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,551 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:24:42,551 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:24:42,551 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-28 16:24:42,551 DEBUG PropertyBinder: Building property name
2024-05-28 16:24:42,551 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,551 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-28 16:24:42,551 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: building BasicValue for password
2024-05-28 16:24:42,551 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-28 16:24:42,551 DEBUG PropertyBinder: Building property password
2024-05-28 16:24:42,551 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:24:42,551 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-28 16:24:42,551 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: building BasicValue for role
2024-05-28 16:24:42,551 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-28 16:24:42,551 DEBUG PropertyBinder: Building property role
2024-05-28 16:24:42,551 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-28 16:24:42,551 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-28 16:24:42,567 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-28 16:24:42,567 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-28 16:24:42,567 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-28 16:24:42,567 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-28 16:24:42,567 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-28 16:24:42,567 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-28 16:24:42,645 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-28 16:24:42,880 DEBUG SessionFactoryImpl: Building session factory
2024-05-28 16:24:42,927 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:24:42,943 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson9Hibernate.UserDbDaoTest,find, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49fb0bbd, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-28 16:24:42,943 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-28 16:24:42,958 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4aa2877c] under count; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@56b8aaf1] under every; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5482bcac] under any; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e225820] under sinh; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e] under cosh; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a] under tanh; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d] under pi; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65] under log; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:24:43,022 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4dcbae55] under position; prior registration was null
2024-05-28 16:24:43,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4041739c] under overlay; prior registration was null
2024-05-28 16:24:43,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@29a33620] under trim; prior registration was null
2024-05-28 16:24:43,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@52559a69] under cast; prior registration was null
2024-05-28 16:24:43,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@285583d4] under collate; prior registration was null
2024-05-28 16:24:43,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5b202ff] under extract; prior registration was null
2024-05-28 16:24:43,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-28 16:24:43,037 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-28 16:24:43,053 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7186b202] under ifnull; prior registration was null
2024-05-28 16:24:43,053 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-28 16:24:43,053 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@72543547] under pad; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@73afe2b7] under str; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@706ceca6] under format; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@606a1bc4] under timestampadd; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@41b64020] under timestampdiff; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a1a256d] under current_date; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4cb957b8] under current_time; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cdc7b09] under current_timestamp; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7364eed1] under local_date; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@684e8c9d] under local_time; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ecc02bb] under local_datetime; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31973858] under offset_datetime; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65514add] under instant; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@10850d17] under sql; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51e754e1] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e225820
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@67bb4dcd] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@684e8c9d
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6ecc02bb
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5c53f292] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@46fb0c33] under bit_length; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3b009e7b] under octet_length; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@270a620] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4dcbae55
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41f4039e] under bitand; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ff00507] under bitor; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@603cabc4] under bitxor; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fa5045] under bitnot; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f347d7] under median; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c134052] under insert; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4fc165f6] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4041739c
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@545b5ed0] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-28 16:24:43,054 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-28 16:24:43,069 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@cfd1075] under listagg; prior registration was null
2024-05-28 16:24:43,069 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@61ffd148] under array; prior registration was null
2024-05-28 16:24:43,069 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@58324c9f] under array_list; prior registration was null
2024-05-28 16:24:43,069 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3bc69ce9] under array_agg; prior registration was null
2024-05-28 16:24:43,069 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@21de60a7] under array_position; prior registration was null
2024-05-28 16:24:43,069 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@67f63d26] under array_positions; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1f9d4b0e] under array_positions_list; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e8fb66f] under array_length; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2f677247] under array_concat; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1983b48a] under array_prepend; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@629a9f26] under array_append; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@64bebd55] under array_contains; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7c1a8f0f] under array_contains_nullable; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6588b715] under array_overlaps; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@15a3b42] under array_overlaps_nullable; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67e0ff3a] under array_get; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@1eb9a3ef] under array_set; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@27fe059d] under array_remove_index; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@766a52f5] under array_slice; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4342c13] under array_trim; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@157d3a45] under array_fill; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@750ed637] under array_fill_list; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@18d11527] under array_to_string; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@575cabf0] under mode; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@433d9680] under percentile_cont; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@566e142] under percentile_disc; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@261bd7b] under rank; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f9e08d4] under dense_rank; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@390037e7] under percent_rank; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@704067c6] under cume_dist; prior registration was null
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2b08772d] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78a8978a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-28 16:24:43,085 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@29bcf51d] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-28 16:24:43,101 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3b0c3951] under trunc; prior registration was null
2024-05-28 16:24:43,101 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-28 16:24:43,101 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60f77af] under date_trunc; prior registration was null
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Date current date
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Time current time
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: mode()
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-28 16:24:43,101 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double pi
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Object sql
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-28 16:24:43,116 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-28 16:24:43,220 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:24:43,220 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-28 16:24:43,315 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:24:43,315 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:24:43,581 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-28 16:24:43,612 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:24:43,612 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:24:43,645 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-28 16:24:43,645 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:24:43,645 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:24:43,677 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-28 16:24:43,677 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:24:43,677 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:24:43,693 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-28 16:24:43,693 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:24:43,693 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:24:43,709 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-28 16:24:43,756 DEBUG creation: Starting post-init callbacks
2024-05-28 16:24:43,756 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-28 16:24:43,756 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-28 16:24:43,756 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-28 16:24:43,756 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-28 16:24:43,756 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-28 16:24:43,882 DEBUG create: Created new SQL alias : g1_0
2024-05-28 16:24:43,882 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-28 16:24:43,897 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-28 16:24:43,897 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-28 16:24:43,913 DEBUG create: Created new SQL alias : a1_0
2024-05-28 16:24:43,913 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-28 16:24:43,913 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-28 16:24:43,913 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-28 16:24:43,913 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:24:43,913 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:24:43,913 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-28 16:24:43,913 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-28 16:24:43,913 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:24:43,913 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:24:43,913 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-28 16:24:43,913 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-28 16:24:43,913 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:24:43,913 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-28 16:24:43,913 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-28 16:24:43,913 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-28 16:24:43,913 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-28 16:24:43,960 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-28 16:24:43,960 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-28 16:24:43,960 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-28 16:24:43,960 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-28 16:24:43,960 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53830483] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@d84418a]
2024-05-28 16:24:43,975 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-28 16:24:43,975 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-28 16:24:43,992 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-28 16:24:43,992 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-28 16:24:44,321 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-28 16:24:44,321 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-28 16:24:44,460 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-28 16:24:44,475 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-28 16:24:44,500 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-28 16:24:44,514 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-28 16:24:44,515 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:24:44,515 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-28 16:24:44,516 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a247711
2024-05-28 16:24:44,516 DEBUG SessionFactoryRegistry: Registering SessionFactory: 96a63c2a-4f72-4bf2-b517-ab76ca46ff35 (<unnamed>)
2024-05-28 16:24:44,516 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-28 16:24:44,516 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-28 16:24:44,610 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:24:44,610 DEBUG TransactionImpl: begin
2024-05-28 16:24:44,611 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:24:44,611 DEBUG TransactionImpl: begin
2024-05-28 16:24:44,657 DEBUG TransactionImpl: rolling back
2024-05-28 16:24:44,657 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:24:44,658 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:24:44,672 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-28 16:24:44,673 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@24010875] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@d84418a]
2024-05-28 16:24:44,674 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-28 16:24:44,674 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:24:44,681 ERROR pooling: Connection leak detected: there are 1 unclosed connections upon shutting down pool jdbc:postgresql://localhost:5432/game
2024-05-28 16:24:44,683 ERROR pooling: Connection leak detected: there are 1 unclosed connections
2024-05-28 16:24:44,684 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-28 16:30:59,650 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-28 16:30:59,698 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-28 16:30:59,711 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-28 16:30:59,825 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-28 16:30:59,825 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-28 16:30:59,903 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-28 16:30:59,926 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-28 16:31:00,336 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-28 16:31:00,352 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-28 16:31:00,368 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:31:00,368 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-28 16:31:00,383 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-28 16:31:00,383 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@6e1f8469
2024-05-28 16:31:00,588 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2e380628
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@73ab3aac
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@73ab3aac
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@7103ab0
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@769d513
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@769a58e5
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@55f8669d
2024-05-28 16:31:00,603 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6be25526
2024-05-28 16:31:00,646 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-28 16:31:00,646 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-28 16:31:00,646 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:31:00,646 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-28 16:31:00,646 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-28 16:31:00,646 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-28 16:31:00,646 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-28 16:31:00,970 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-28 16:31:00,970 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-28 16:31:00,970 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-28 16:31:01,074 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-28 16:31:01,108 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-28 16:31:01,131 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-28 16:31:01,150 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4fc142ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@34b27915)
2024-05-28 16:31:01,151 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29eda4f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b9776f5)
2024-05-28 16:31:01,152 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-28 16:31:01,152 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-28 16:31:01,183 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6b3f6585
2024-05-28 16:31:01,183 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b3f6585
2024-05-28 16:31:01,183 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@73ab3aac`
2024-05-28 16:31:01,183 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-28 16:31:01,183 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:31:01,183 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:31:01,199 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:31:01,199 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@396ef8b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72825400]
2024-05-28 16:31:01,293 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-28 16:31:01,341 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-28 16:31:01,357 DEBUG EntityBinder: Import with entity name Answer
2024-05-28 16:31:01,372 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-28 16:31:01,404 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:31:01,436 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,436 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:31:01,436 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:31:01,436 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:31:01,436 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-28 16:31:01,451 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:31:01,451 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-28 16:31:01,451 DEBUG PropertyBinder: Building property id
2024-05-28 16:31:01,467 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:31:01,467 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,467 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-28 16:31:01,467 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-28 16:31:01,467 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-28 16:31:01,467 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-28 16:31:01,467 DEBUG PropertyBinder: Building property answerMessage
2024-05-28 16:31:01,467 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,467 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-28 16:31:01,467 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-28 16:31:01,467 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-28 16:31:01,467 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-28 16:31:01,467 DEBUG PropertyBinder: Building property finalMessage
2024-05-28 16:31:01,467 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,467 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:31:01,467 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-28 16:31:01,467 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:31:01,467 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-28 16:31:01,467 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:31:01,467 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,467 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-28 16:31:01,467 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-28 16:31:01,467 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-28 16:31:01,467 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-28 16:31:01,467 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-28 16:31:01,467 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,467 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-28 16:31:01,467 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-28 16:31:01,467 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-28 16:31:01,467 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-28 16:31:01,467 DEBUG PropertyBinder: Building property questionId
2024-05-28 16:31:01,467 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:31:01,482 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-28 16:31:01,482 DEBUG EntityBinder: Import with entity name Game
2024-05-28 16:31:01,482 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-28 16:31:01,482 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:31:01,482 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,482 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:31:01,482 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:31:01,514 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:31:01,514 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-28 16:31:01,514 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:31:01,514 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-28 16:31:01,514 DEBUG PropertyBinder: Building property id
2024-05-28 16:31:01,514 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:31:01,514 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,514 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-28 16:31:01,514 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-28 16:31:01,514 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-28 16:31:01,514 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-28 16:31:01,514 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-28 16:31:01,514 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,514 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:31:01,514 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-28 16:31:01,514 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:31:01,514 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-28 16:31:01,514 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:31:01,514 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,514 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:31:01,514 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-28 16:31:01,514 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:31:01,514 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-28 16:31:01,514 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:31:01,514 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,514 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:31:01,514 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-28 16:31:01,514 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:31:01,514 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-28 16:31:01,514 DEBUG PropertyBinder: Building property questId
2024-05-28 16:31:01,514 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,514 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-28 16:31:01,514 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-28 16:31:01,514 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-28 16:31:01,514 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-28 16:31:01,514 DEBUG PropertyBinder: Building property userPlayerId
2024-05-28 16:31:01,514 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:31:01,514 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-28 16:31:01,529 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-28 16:31:01,529 DEBUG EntityBinder: Import with entity name Quest
2024-05-28 16:31:01,529 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-28 16:31:01,529 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:31:01,529 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,529 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:31:01,529 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:31:01,529 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:31:01,529 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-28 16:31:01,529 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:31:01,529 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-28 16:31:01,529 DEBUG PropertyBinder: Building property id
2024-05-28 16:31:01,529 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:31:01,529 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,529 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-28 16:31:01,529 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-28 16:31:01,529 DEBUG BasicValueBinder: building BasicValue for description
2024-05-28 16:31:01,529 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-28 16:31:01,529 DEBUG PropertyBinder: Building property description
2024-05-28 16:31:01,546 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-28 16:31:01,546 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:31:01,546 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-28 16:31:01,546 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:31:01,546 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-28 16:31:01,546 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:31:01,546 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,546 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:31:01,546 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-28 16:31:01,546 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:31:01,546 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-28 16:31:01,546 DEBUG PropertyBinder: Building property name
2024-05-28 16:31:01,546 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-28 16:31:01,546 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-28 16:31:01,546 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-28 16:31:01,546 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-28 16:31:01,546 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-28 16:31:01,546 DEBUG PropertyBinder: Building property userAuthorId
2024-05-28 16:31:01,546 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:31:01,546 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-28 16:31:01,546 DEBUG EntityBinder: Import with entity name Question
2024-05-28 16:31:01,546 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-28 16:31:01,546 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:31:01,546 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,546 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:31:01,546 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:31:01,546 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:31:01,546 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-28 16:31:01,546 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:31:01,546 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-28 16:31:01,546 DEBUG PropertyBinder: Building property id
2024-05-28 16:31:01,546 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:31:01,546 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,546 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:31:01,546 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-28 16:31:01,546 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:31:01,546 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-28 16:31:01,546 DEBUG PropertyBinder: Building property questId
2024-05-28 16:31:01,546 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,546 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-28 16:31:01,546 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-28 16:31:01,546 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-28 16:31:01,546 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-28 16:31:01,546 DEBUG PropertyBinder: Building property questionMessage
2024-05-28 16:31:01,546 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:31:01,546 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-28 16:31:01,546 DEBUG EntityBinder: Import with entity name User
2024-05-28 16:31:01,546 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-28 16:31:01,546 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:31:01,562 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,562 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:31:01,562 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:31:01,562 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:31:01,562 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:31:01,562 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-28 16:31:01,562 DEBUG PropertyBinder: Building property id
2024-05-28 16:31:01,562 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:31:01,562 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,562 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-28 16:31:01,562 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: building BasicValue for login
2024-05-28 16:31:01,562 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-28 16:31:01,562 DEBUG PropertyBinder: Building property login
2024-05-28 16:31:01,562 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,562 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:31:01,562 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:31:01,562 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-28 16:31:01,562 DEBUG PropertyBinder: Building property name
2024-05-28 16:31:01,562 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,562 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-28 16:31:01,562 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: building BasicValue for password
2024-05-28 16:31:01,562 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-28 16:31:01,562 DEBUG PropertyBinder: Building property password
2024-05-28 16:31:01,562 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:31:01,562 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-28 16:31:01,562 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: building BasicValue for role
2024-05-28 16:31:01,562 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-28 16:31:01,562 DEBUG PropertyBinder: Building property role
2024-05-28 16:31:01,562 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-28 16:31:01,562 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-28 16:31:01,578 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-28 16:31:01,578 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-28 16:31:01,578 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-28 16:31:01,578 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-28 16:31:01,578 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-28 16:31:01,578 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-28 16:31:01,654 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-28 16:31:01,844 DEBUG SessionFactoryImpl: Building session factory
2024-05-28 16:31:01,890 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:31:01,890 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson9Hibernate.UserDbDaoTest,find, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5995851e, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-28 16:31:01,906 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-28 16:31:01,922 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:31:01,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-28 16:31:01,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-28 16:31:01,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-28 16:31:01,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-28 16:31:01,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@500051c5] under count; prior registration was null
2024-05-28 16:31:01,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@61615b4a] under every; prior registration was null
2024-05-28 16:31:01,970 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@721d8ab5] under any; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d] under sinh; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65] under cosh; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4be0a27d] under tanh; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f366587] under pi; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6003ad65] under log; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5ae1c281] under position; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@62b57479] under overlay; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5a90265a] under trim; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7f85217c] under cast; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fd7a37] under collate; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6436e181] under extract; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@36068727] under ifnull; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@208205ed] under pad; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@671d03bb] under str; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@77f4c040] under format; prior registration was null
2024-05-28 16:31:01,986 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@15fb4566] under timestampadd; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@39dec536] under timestampdiff; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7364eed1] under current_date; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@684e8c9d] under current_time; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ecc02bb] under current_timestamp; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31973858] under local_date; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65514add] under local_time; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79e7188e] under local_datetime; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@773014d3] under offset_datetime; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fedb795] under instant; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@34451ed8] under sql; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6003ad65
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c1050f2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4be0a27d
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f366587
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@61bb1e4d] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@65514add
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@79e7188e
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@270a620] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@41f4039e] under bit_length; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5ff00507] under octet_length; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@603cabc4] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5ae1c281
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fa5045] under bitand; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f347d7] under bitor; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5974b233] under bitxor; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c134052] under bitnot; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69de5bed] under median; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@996a546] under insert; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@667dcaad] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@62b57479
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@22d7fd41] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@834e986] under listagg; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6eb089e6] under array; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@715a70e9] under array_list; prior registration was null
2024-05-28 16:31:02,001 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@42507640] under array_agg; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@7a9ceddf] under array_position; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@39941489] under array_positions; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@ac91282] under array_positions_list; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f79edee] under array_length; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2921199d] under array_concat; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@4391a2d8] under array_prepend; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@47b269c4] under array_append; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7730ef88] under array_contains; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@66f5a02e] under array_contains_nullable; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@17207f5b] under array_overlaps; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@373052b5] under array_overlaps_nullable; prior registration was null
2024-05-28 16:31:02,017 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5af5d76f] under array_get; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@740b6628] under array_set; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@2ba1209b] under array_remove_index; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c241a9f] under array_slice; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58fd1214] under array_trim; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@673e76b3] under array_fill; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1bedc703] under array_fill_list; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@28279a49] under array_to_string; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2da81754] under mode; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1f992a3a] under percentile_cont; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@30bf26df] under percentile_disc; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@704067c6] under rank; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7f4596d0] under dense_rank; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6002e944] under percent_rank; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@588545ac] under cume_dist; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@7d4d8579] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@159424e2] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3b24087d] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@18b6d3c1] under trunc; prior registration was null
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-28 16:31:02,033 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@422ab737] under date_trunc; prior registration was null
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Date current date
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Time current time
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: mode()
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double pi
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Object sql
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-28 16:31:02,048 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-28 16:31:02,064 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-28 16:31:02,175 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:31:02,175 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-28 16:31:02,285 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:31:02,285 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:31:02,536 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-28 16:31:02,568 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:31:02,568 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:31:02,585 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-28 16:31:02,585 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:31:02,585 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:31:02,616 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-28 16:31:02,616 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:31:02,616 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:31:02,646 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-28 16:31:02,647 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:31:02,647 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:31:02,664 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-28 16:31:02,711 DEBUG creation: Starting post-init callbacks
2024-05-28 16:31:02,711 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-28 16:31:02,711 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-28 16:31:02,711 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-28 16:31:02,711 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-28 16:31:02,711 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-28 16:31:02,838 DEBUG create: Created new SQL alias : g1_0
2024-05-28 16:31:02,838 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-28 16:31:02,853 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-28 16:31:02,853 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-28 16:31:02,869 DEBUG create: Created new SQL alias : a1_0
2024-05-28 16:31:02,869 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-28 16:31:02,869 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-28 16:31:02,869 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-28 16:31:02,869 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:31:02,869 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:31:02,869 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-28 16:31:02,869 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-28 16:31:02,869 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:31:02,869 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:31:02,869 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-28 16:31:02,869 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-28 16:31:02,869 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-28 16:31:02,884 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:31:02,884 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-28 16:31:02,884 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-28 16:31:02,884 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-28 16:31:02,884 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-28 16:31:02,884 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-28 16:31:02,884 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-28 16:31:02,884 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-28 16:31:02,884 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-28 16:31:02,916 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-28 16:31:02,916 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-28 16:31:02,916 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-28 16:31:02,916 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-28 16:31:02,931 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@396ef8b2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3973b6d4]
2024-05-28 16:31:02,947 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-28 16:31:02,947 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-28 16:31:02,947 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-28 16:31:02,963 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-28 16:31:03,306 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-28 16:31:03,306 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-28 16:31:03,401 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-28 16:31:03,417 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-28 16:31:03,432 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-28 16:31:03,448 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-28 16:31:03,448 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:31:03,448 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-28 16:31:03,448 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50ac1249
2024-05-28 16:31:03,448 DEBUG SessionFactoryRegistry: Registering SessionFactory: a4faece2-52de-41cb-a284-8156e301e385 (<unnamed>)
2024-05-28 16:31:03,448 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-28 16:31:03,448 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-28 16:31:03,495 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:31:03,495 DEBUG TransactionImpl: begin
2024-05-28 16:31:03,495 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:31:03,495 DEBUG TransactionImpl: begin
2024-05-28 16:31:03,536 DEBUG TransactionImpl: rolling back
2024-05-28 16:31:03,537 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:31:03,538 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:31:03,546 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-28 16:31:03,546 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2411b935] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3973b6d4]
2024-05-28 16:31:03,546 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-28 16:31:03,546 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:31:03,546 ERROR pooling: Connection leak detected: there are 1 unclosed connections upon shutting down pool jdbc:postgresql://localhost:5432/game
2024-05-28 16:31:03,555 ERROR pooling: Connection leak detected: there are 1 unclosed connections
2024-05-28 16:31:03,555 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-28 16:33:08,495 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-28 16:33:08,526 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-28 16:33:08,542 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-28 16:33:08,673 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-28 16:33:08,673 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-28 16:33:08,767 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-28 16:33:08,784 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-28 16:33:09,122 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-28 16:33:09,137 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-28 16:33:09,153 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-28 16:33:09,153 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-28 16:33:09,153 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-28 16:33:09,153 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:33:09,153 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:33:09,153 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-28 16:33:09,153 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-28 16:33:09,153 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-28 16:33:09,169 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:33:09,169 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-28 16:33:09,169 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-28 16:33:09,169 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:33:09,169 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-28 16:33:09,184 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-28 16:33:09,184 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:33:09,372 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5b2f8ab6
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b2f8ab6
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@57aa341b
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@26e412ef
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@769d513
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-28 16:33:09,388 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-28 16:33:09,420 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-28 16:33:09,436 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-28 16:33:09,436 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:33:09,436 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-28 16:33:09,436 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-28 16:33:09,436 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-28 16:33:09,436 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-28 16:33:09,728 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-28 16:33:09,728 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-28 16:33:09,728 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-28 16:33:09,821 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-28 16:33:09,852 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-28 16:33:09,879 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-28 16:33:09,899 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3419e23b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2)
2024-05-28 16:33:09,899 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d75e7af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fc142ec)
2024-05-28 16:33:09,899 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-28 16:33:09,899 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-28 16:33:09,939 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6c15e8c7
2024-05-28 16:33:09,940 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6c15e8c7
2024-05-28 16:33:09,940 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5b2f8ab6`
2024-05-28 16:33:09,950 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-28 16:33:09,950 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:33:09,950 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:33:09,959 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:33:09,959 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:33:09,960 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:33:09,960 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:33:09,960 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:33:09,961 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:33:09,963 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:33:09,963 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:33:09,963 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:33:09,967 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53830483] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@29f85fe1]
2024-05-28 16:33:10,057 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-28 16:33:10,103 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-28 16:33:10,119 DEBUG EntityBinder: Import with entity name Answer
2024-05-28 16:33:10,123 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-28 16:33:10,160 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:33:10,201 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,203 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:33:10,204 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:33:10,213 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:33:10,226 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-28 16:33:10,234 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:33:10,240 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-28 16:33:10,241 DEBUG PropertyBinder: Building property id
2024-05-28 16:33:10,247 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:33:10,250 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,251 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-28 16:33:10,251 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-28 16:33:10,252 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-28 16:33:10,252 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-28 16:33:10,252 DEBUG PropertyBinder: Building property answerMessage
2024-05-28 16:33:10,253 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,254 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-28 16:33:10,254 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-28 16:33:10,254 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-28 16:33:10,255 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-28 16:33:10,255 DEBUG PropertyBinder: Building property finalMessage
2024-05-28 16:33:10,255 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,256 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:33:10,256 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-28 16:33:10,256 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:33:10,256 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-28 16:33:10,256 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:33:10,257 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,257 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-28 16:33:10,257 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-28 16:33:10,257 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-28 16:33:10,257 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-28 16:33:10,258 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-28 16:33:10,258 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,258 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-28 16:33:10,258 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-28 16:33:10,258 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-28 16:33:10,259 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-28 16:33:10,259 DEBUG PropertyBinder: Building property questionId
2024-05-28 16:33:10,261 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:33:10,262 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-28 16:33:10,262 DEBUG EntityBinder: Import with entity name Game
2024-05-28 16:33:10,262 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-28 16:33:10,262 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:33:10,262 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,262 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:33:10,262 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:33:10,293 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:33:10,293 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-28 16:33:10,293 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:33:10,293 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-28 16:33:10,293 DEBUG PropertyBinder: Building property id
2024-05-28 16:33:10,293 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:33:10,293 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,293 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-28 16:33:10,293 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-28 16:33:10,293 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-28 16:33:10,293 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-28 16:33:10,293 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-28 16:33:10,293 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,293 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:33:10,293 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-28 16:33:10,293 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:33:10,293 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-28 16:33:10,293 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:33:10,293 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,293 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:33:10,293 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-28 16:33:10,293 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:33:10,293 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-28 16:33:10,293 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:33:10,293 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,293 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:33:10,293 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-28 16:33:10,293 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:33:10,293 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-28 16:33:10,293 DEBUG PropertyBinder: Building property questId
2024-05-28 16:33:10,293 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,293 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-28 16:33:10,293 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-28 16:33:10,293 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-28 16:33:10,293 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-28 16:33:10,293 DEBUG PropertyBinder: Building property userPlayerId
2024-05-28 16:33:10,293 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:33:10,293 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-28 16:33:10,293 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-28 16:33:10,308 DEBUG EntityBinder: Import with entity name Quest
2024-05-28 16:33:10,308 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-28 16:33:10,308 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:33:10,308 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,308 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:33:10,308 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:33:10,308 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:33:10,308 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-28 16:33:10,308 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:33:10,308 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-28 16:33:10,308 DEBUG PropertyBinder: Building property id
2024-05-28 16:33:10,308 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:33:10,308 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,308 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-28 16:33:10,308 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-28 16:33:10,308 DEBUG BasicValueBinder: building BasicValue for description
2024-05-28 16:33:10,308 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-28 16:33:10,308 DEBUG PropertyBinder: Building property description
2024-05-28 16:33:10,308 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-28 16:33:10,308 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:33:10,308 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-28 16:33:10,308 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:33:10,308 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-28 16:33:10,308 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:33:10,308 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,308 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:33:10,308 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-28 16:33:10,308 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:33:10,308 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-28 16:33:10,308 DEBUG PropertyBinder: Building property name
2024-05-28 16:33:10,308 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-28 16:33:10,308 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-28 16:33:10,308 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-28 16:33:10,308 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-28 16:33:10,308 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-28 16:33:10,308 DEBUG PropertyBinder: Building property userAuthorId
2024-05-28 16:33:10,308 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:33:10,308 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-28 16:33:10,308 DEBUG EntityBinder: Import with entity name Question
2024-05-28 16:33:10,324 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,324 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:33:10,324 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:33:10,324 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:33:10,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-28 16:33:10,324 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:33:10,324 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-28 16:33:10,324 DEBUG PropertyBinder: Building property id
2024-05-28 16:33:10,324 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,324 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:33:10,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-28 16:33:10,324 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:33:10,324 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-28 16:33:10,324 DEBUG PropertyBinder: Building property questId
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,324 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-28 16:33:10,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-28 16:33:10,324 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-28 16:33:10,324 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-28 16:33:10,324 DEBUG PropertyBinder: Building property questionMessage
2024-05-28 16:33:10,324 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:33:10,324 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-28 16:33:10,324 DEBUG EntityBinder: Import with entity name User
2024-05-28 16:33:10,324 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,324 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:33:10,324 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:33:10,324 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:33:10,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-28 16:33:10,324 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:33:10,324 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-28 16:33:10,324 DEBUG PropertyBinder: Building property id
2024-05-28 16:33:10,324 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,324 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-28 16:33:10,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-28 16:33:10,324 DEBUG BasicValueBinder: building BasicValue for login
2024-05-28 16:33:10,324 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-28 16:33:10,324 DEBUG PropertyBinder: Building property login
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,324 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:33:10,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-28 16:33:10,324 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:33:10,324 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-28 16:33:10,324 DEBUG PropertyBinder: Building property name
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,324 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-28 16:33:10,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-28 16:33:10,324 DEBUG BasicValueBinder: building BasicValue for password
2024-05-28 16:33:10,324 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-28 16:33:10,324 DEBUG PropertyBinder: Building property password
2024-05-28 16:33:10,324 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:33:10,324 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-28 16:33:10,324 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-28 16:33:10,324 DEBUG BasicValueBinder: building BasicValue for role
2024-05-28 16:33:10,324 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-28 16:33:10,324 DEBUG PropertyBinder: Building property role
2024-05-28 16:33:10,340 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-28 16:33:10,340 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-28 16:33:10,340 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-28 16:33:10,340 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-28 16:33:10,340 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-28 16:33:10,340 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-28 16:33:10,340 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-28 16:33:10,403 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-28 16:33:10,608 DEBUG SessionFactoryImpl: Building session factory
2024-05-28 16:33:10,668 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:33:10,668 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson9Hibernate.UserDbDaoTest,find, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49fb0bbd, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-28 16:33:10,684 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-28 16:33:10,684 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4aa2877c] under count; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@56b8aaf1] under every; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5482bcac] under any; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e225820] under sinh; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e] under cosh; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a] under tanh; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d] under pi; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65] under log; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-28 16:33:10,746 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4dcbae55] under position; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4041739c] under overlay; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@29a33620] under trim; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@52559a69] under cast; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@285583d4] under collate; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5b202ff] under extract; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7186b202] under ifnull; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@72543547] under pad; prior registration was null
2024-05-28 16:33:10,762 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@73afe2b7] under str; prior registration was null
2024-05-28 16:33:10,772 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@706ceca6] under format; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@606a1bc4] under timestampadd; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@41b64020] under timestampdiff; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a1a256d] under current_date; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4cb957b8] under current_time; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cdc7b09] under current_timestamp; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7364eed1] under local_date; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@684e8c9d] under local_time; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ecc02bb] under local_datetime; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31973858] under offset_datetime; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65514add] under instant; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@10850d17] under sql; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51e754e1] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e225820
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@67bb4dcd] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@684e8c9d
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6ecc02bb
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5c53f292] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@46fb0c33] under bit_length; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3b009e7b] under octet_length; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@270a620] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4dcbae55
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41f4039e] under bitand; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ff00507] under bitor; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@603cabc4] under bitxor; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fa5045] under bitnot; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f347d7] under median; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c134052] under insert; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4fc165f6] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4041739c
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@545b5ed0] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-28 16:33:10,773 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@cfd1075] under listagg; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@61ffd148] under array; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@58324c9f] under array_list; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3bc69ce9] under array_agg; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@21de60a7] under array_position; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@67f63d26] under array_positions; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1f9d4b0e] under array_positions_list; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e8fb66f] under array_length; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2f677247] under array_concat; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1983b48a] under array_prepend; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@629a9f26] under array_append; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@64bebd55] under array_contains; prior registration was null
2024-05-28 16:33:10,789 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7c1a8f0f] under array_contains_nullable; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6588b715] under array_overlaps; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@15a3b42] under array_overlaps_nullable; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67e0ff3a] under array_get; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@1eb9a3ef] under array_set; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@27fe059d] under array_remove_index; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@766a52f5] under array_slice; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4342c13] under array_trim; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@157d3a45] under array_fill; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@750ed637] under array_fill_list; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@18d11527] under array_to_string; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@575cabf0] under mode; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@433d9680] under percentile_cont; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@566e142] under percentile_disc; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@261bd7b] under rank; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f9e08d4] under dense_rank; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@390037e7] under percent_rank; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@704067c6] under cume_dist; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2b08772d] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78a8978a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@29bcf51d] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3b0c3951] under trunc; prior registration was null
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-28 16:33:10,804 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60f77af] under date_trunc; prior registration was null
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Date current date
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Time current time
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: mode()
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double pi
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Object sql
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-28 16:33:10,820 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-28 16:33:10,835 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-28 16:33:10,930 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:33:10,930 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-28 16:33:11,041 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:33:11,041 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:33:11,334 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-28 16:33:11,365 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:33:11,365 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:33:11,381 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-28 16:33:11,397 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:33:11,397 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:33:11,412 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-28 16:33:11,428 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:33:11,428 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:33:11,443 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-28 16:33:11,443 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:33:11,443 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:33:11,475 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-28 16:33:11,506 DEBUG creation: Starting post-init callbacks
2024-05-28 16:33:11,506 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-28 16:33:11,506 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-28 16:33:11,506 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-28 16:33:11,506 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-28 16:33:11,506 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-28 16:33:11,616 DEBUG create: Created new SQL alias : g1_0
2024-05-28 16:33:11,616 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-28 16:33:11,647 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-28 16:33:11,647 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-28 16:33:11,663 DEBUG create: Created new SQL alias : a1_0
2024-05-28 16:33:11,663 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-28 16:33:11,663 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-28 16:33:11,663 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-28 16:33:11,663 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:33:11,663 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:33:11,663 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-28 16:33:11,663 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-28 16:33:11,663 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:33:11,663 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:33:11,663 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-28 16:33:11,663 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-28 16:33:11,663 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:33:11,663 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-28 16:33:11,663 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-28 16:33:11,663 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-28 16:33:11,663 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-28 16:33:11,694 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-28 16:33:11,694 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-28 16:33:11,710 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-28 16:33:11,710 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-28 16:33:11,710 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53830483] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@d84418a]
2024-05-28 16:33:11,710 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-28 16:33:11,710 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-28 16:33:11,726 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-28 16:33:11,726 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-28 16:33:12,053 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-28 16:33:12,053 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-28 16:33:12,173 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-28 16:33:12,191 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-28 16:33:12,206 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-28 16:33:12,222 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-28 16:33:12,222 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:33:12,222 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-28 16:33:12,237 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a247711
2024-05-28 16:33:12,237 DEBUG SessionFactoryRegistry: Registering SessionFactory: 19d0047a-941e-406f-ba75-b73b0a32518f (<unnamed>)
2024-05-28 16:33:12,237 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-28 16:33:12,237 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-28 16:33:12,301 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:33:12,301 DEBUG TransactionImpl: begin
2024-05-28 16:33:12,301 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:33:12,301 DEBUG TransactionImpl: begin
2024-05-28 16:33:12,500 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:33:12,500 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User(933331691272500))] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:33:12,516 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bcb8599
2024-05-28 16:33:12,516 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.User(933331691272500).role) 
2024-05-28 16:33:12,516 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User(933331691272500)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User(933331691272500).login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User(933331691272500).name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User(933331691272500).password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User(933331691272500).role]

2024-05-28 16:33:12,516 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User(933331691272500)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:33:12,547 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-28 16:33:12,563 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User(933331691272500) -> EntityResultInitializer(com.javarush.nikolenko.entity.User(933331691272500))@1569607592 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-05-28 16:33:12,579 DEBUG TransactionImpl: committing
2024-05-28 16:33:12,579 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:33:12,579 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:33:12,579 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.role=?
2024-05-28 16:33:12,579 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-28 16:33:12,579 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4822ab4d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@d84418a]
2024-05-28 16:33:12,594 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-28 16:33:12,594 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:33:12,594 ERROR pooling: Connection leak detected: there are 1 unclosed connections upon shutting down pool jdbc:postgresql://localhost:5432/game
2024-05-28 16:33:12,600 ERROR pooling: Connection leak detected: there are 1 unclosed connections
2024-05-28 16:33:12,600 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-28 16:37:07,013 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-28 16:37:07,061 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-28 16:37:07,077 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-28 16:37:07,187 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-28 16:37:07,203 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-28 16:37:07,282 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-28 16:37:07,298 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-28 16:37:07,702 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-28 16:37:07,702 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-28 16:37:07,717 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-28 16:37:07,717 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-28 16:37:07,717 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-28 16:37:07,717 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:37:07,717 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:37:07,717 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-28 16:37:07,733 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-28 16:37:07,733 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-28 16:37:07,733 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:37:07,733 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-28 16:37:07,733 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-28 16:37:07,733 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:37:07,733 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-28 16:37:07,749 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-28 16:37:07,749 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6e1f8469
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6e1f8469
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e380628
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e380628
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3b6c624
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3b6c624
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@1eaf1e62
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1eaf1e62
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@c81fd12
2024-05-28 16:37:07,952 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@62e6a3ec
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@2e140e59
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2e140e59
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@588cd519
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@769a58e5
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@55f8669d
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6be25526
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42435b98
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@66ba7e45
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70e02081
2024-05-28 16:37:07,968 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@9d200de
2024-05-28 16:37:07,999 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-28 16:37:07,999 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-28 16:37:08,015 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:37:08,015 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-28 16:37:08,015 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-28 16:37:08,015 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-28 16:37:08,015 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-28 16:37:08,331 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-28 16:37:08,331 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-28 16:37:08,331 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-28 16:37:08,426 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-28 16:37:08,442 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-28 16:37:08,471 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-28 16:37:08,485 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5e048149) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@79d9214d)
2024-05-28 16:37:08,485 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3d5790ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dd7796b)
2024-05-28 16:37:08,485 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-28 16:37:08,485 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-28 16:37:08,516 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@45e1aa48
2024-05-28 16:37:08,516 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@45e1aa48
2024-05-28 16:37:08,516 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2e140e59`
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:37:08,532 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:37:08,532 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1174a305] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71b6d77f]
2024-05-28 16:37:08,626 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-28 16:37:08,679 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-28 16:37:08,688 DEBUG EntityBinder: Import with entity name Answer
2024-05-28 16:37:08,704 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-28 16:37:08,720 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:37:08,767 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,767 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:37:08,767 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:37:08,767 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:37:08,782 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-28 16:37:08,782 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:37:08,782 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-28 16:37:08,782 DEBUG PropertyBinder: Building property id
2024-05-28 16:37:08,798 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:37:08,798 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,798 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-28 16:37:08,798 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-28 16:37:08,798 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-28 16:37:08,798 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-28 16:37:08,798 DEBUG PropertyBinder: Building property answerMessage
2024-05-28 16:37:08,798 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,798 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-28 16:37:08,798 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-28 16:37:08,798 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-28 16:37:08,798 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-28 16:37:08,798 DEBUG PropertyBinder: Building property finalMessage
2024-05-28 16:37:08,798 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,798 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:37:08,798 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-28 16:37:08,798 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:37:08,798 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-28 16:37:08,798 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:37:08,798 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,798 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-28 16:37:08,798 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-28 16:37:08,798 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-28 16:37:08,798 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-28 16:37:08,798 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-28 16:37:08,798 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,798 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-28 16:37:08,798 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-28 16:37:08,798 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-28 16:37:08,798 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-28 16:37:08,798 DEBUG PropertyBinder: Building property questionId
2024-05-28 16:37:08,798 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:37:08,813 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-28 16:37:08,813 DEBUG EntityBinder: Import with entity name Game
2024-05-28 16:37:08,813 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-28 16:37:08,813 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:37:08,829 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,829 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:37:08,829 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:37:08,845 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:37:08,845 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-28 16:37:08,845 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:37:08,845 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-28 16:37:08,845 DEBUG PropertyBinder: Building property id
2024-05-28 16:37:08,845 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:37:08,845 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,845 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-28 16:37:08,845 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-28 16:37:08,845 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-28 16:37:08,845 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-28 16:37:08,845 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-28 16:37:08,845 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,845 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:37:08,845 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-28 16:37:08,860 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:37:08,860 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-28 16:37:08,860 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:37:08,860 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,860 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:37:08,860 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-28 16:37:08,860 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:37:08,860 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-28 16:37:08,860 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:37:08,860 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,860 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:37:08,860 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-28 16:37:08,860 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:37:08,860 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-28 16:37:08,860 DEBUG PropertyBinder: Building property questId
2024-05-28 16:37:08,860 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,860 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-28 16:37:08,860 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-28 16:37:08,860 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-28 16:37:08,860 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-28 16:37:08,860 DEBUG PropertyBinder: Building property userPlayerId
2024-05-28 16:37:08,860 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:37:08,860 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-28 16:37:08,860 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-28 16:37:08,860 DEBUG EntityBinder: Import with entity name Quest
2024-05-28 16:37:08,860 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-28 16:37:08,860 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:37:08,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,876 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:37:08,876 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:37:08,876 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:37:08,876 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-28 16:37:08,876 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:37:08,876 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-28 16:37:08,876 DEBUG PropertyBinder: Building property id
2024-05-28 16:37:08,876 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:37:08,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,876 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-28 16:37:08,876 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-28 16:37:08,876 DEBUG BasicValueBinder: building BasicValue for description
2024-05-28 16:37:08,876 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-28 16:37:08,876 DEBUG PropertyBinder: Building property description
2024-05-28 16:37:08,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-28 16:37:08,876 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:37:08,876 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-28 16:37:08,876 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:37:08,876 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-28 16:37:08,876 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:37:08,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,876 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:37:08,876 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-28 16:37:08,876 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:37:08,876 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-28 16:37:08,876 DEBUG PropertyBinder: Building property name
2024-05-28 16:37:08,876 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-28 16:37:08,876 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-28 16:37:08,876 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-28 16:37:08,876 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-28 16:37:08,876 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-28 16:37:08,876 DEBUG PropertyBinder: Building property userAuthorId
2024-05-28 16:37:08,876 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:37:08,876 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-28 16:37:08,876 DEBUG EntityBinder: Import with entity name Question
2024-05-28 16:37:08,876 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-28 16:37:08,876 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:37:08,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,892 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:37:08,892 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:37:08,892 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:37:08,892 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-28 16:37:08,892 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:37:08,892 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-28 16:37:08,892 DEBUG PropertyBinder: Building property id
2024-05-28 16:37:08,892 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:37:08,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,892 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:37:08,892 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-28 16:37:08,892 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:37:08,892 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-28 16:37:08,892 DEBUG PropertyBinder: Building property questId
2024-05-28 16:37:08,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,892 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-28 16:37:08,892 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-28 16:37:08,892 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-28 16:37:08,892 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-28 16:37:08,892 DEBUG PropertyBinder: Building property questionMessage
2024-05-28 16:37:08,892 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:37:08,892 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-28 16:37:08,892 DEBUG EntityBinder: Import with entity name User
2024-05-28 16:37:08,892 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-28 16:37:08,892 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:37:08,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,892 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:37:08,892 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:37:08,892 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:37:08,892 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-28 16:37:08,892 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:37:08,892 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-28 16:37:08,892 DEBUG PropertyBinder: Building property id
2024-05-28 16:37:08,892 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:37:08,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,892 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-28 16:37:08,892 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-28 16:37:08,892 DEBUG BasicValueBinder: building BasicValue for login
2024-05-28 16:37:08,892 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-28 16:37:08,892 DEBUG PropertyBinder: Building property login
2024-05-28 16:37:08,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,892 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:37:08,892 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-28 16:37:08,892 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:37:08,892 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-28 16:37:08,892 DEBUG PropertyBinder: Building property name
2024-05-28 16:37:08,892 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,892 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-28 16:37:08,892 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-28 16:37:08,892 DEBUG BasicValueBinder: building BasicValue for password
2024-05-28 16:37:08,892 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-28 16:37:08,892 DEBUG PropertyBinder: Building property password
2024-05-28 16:37:08,908 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:37:08,908 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-28 16:37:08,908 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: building BasicValue for role
2024-05-28 16:37:08,908 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-28 16:37:08,908 DEBUG PropertyBinder: Building property role
2024-05-28 16:37:08,908 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-28 16:37:08,908 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-28 16:37:08,908 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-28 16:37:08,908 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-28 16:37:08,908 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-28 16:37:08,908 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-28 16:37:08,908 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-28 16:37:08,971 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-28 16:37:09,174 DEBUG SessionFactoryImpl: Building session factory
2024-05-28 16:37:09,237 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:37:09,237 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson9Hibernate.UserDbDaoTest,find, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@77d4ac52, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-28 16:37:09,237 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-28 16:37:09,252 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@65629ac6] under count; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ac4c3f7] under every; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7412a438] under any; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6003ad65] under sinh; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ec99035] under cosh; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60743cdb] under tanh; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c02670f] under pi; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71179b6f] under log; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3db432c2] under position; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5a90265a] under overlay; prior registration was null
2024-05-28 16:37:09,316 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@52559a69] under trim; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@e700eba] under cast; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6436e181] under collate; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@36068727] under extract; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@208205ed] under ifnull; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@671d03bb] under pad; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7f6329cb] under str; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@15fb4566] under format; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@41b64020] under timestampadd; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7364eed1] under timestampdiff; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65514add] under current_date; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79e7188e] under current_time; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@773014d3] under current_timestamp; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fedb795] under local_date; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10850d17] under local_time; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51e754e1] under local_datetime; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26865482] under offset_datetime; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34451ed8] under instant; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6fa2448b] under sql; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71179b6f
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61bb1e4d] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60743cdb
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6003ad65
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ec99035
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c02670f
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@270a620] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@10850d17
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51e754e1
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@67fa5045] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6f347d7] under bit_length; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5974b233] under octet_length; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c134052] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3db432c2
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69de5bed] under bitand; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@750f64fe] under bitor; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@996a546] under bitxor; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fc165f6] under bitnot; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@545b5ed0] under median; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-28 16:37:09,331 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@667dcaad] under insert; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@115dcaea] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5a90265a
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@cfd1075] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@331ff3ac] under listagg; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@602f8f94] under array; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@42507640] under array_list; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4c302f38] under array_agg; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@3fbe503c] under array_position; prior registration was null
2024-05-28 16:37:09,347 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@679dd234] under array_positions; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@b5c6a30] under array_positions_list; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3bfae028] under array_length; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@78307a56] under array_concat; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7c40ffef] under array_prepend; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@286855ea] under array_append; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@e3b0369] under array_contains; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@45843650] under array_contains_nullable; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6fe595dc] under array_overlaps; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5af5d76f] under array_overlaps_nullable; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@298b64f7] under array_get; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@2ba1209b] under array_set; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@5f0bab7e] under array_remove_index; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7b2e2] under array_slice; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@337a6d30] under array_trim; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5d878b25] under array_fill; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@28279a49] under array_fill_list; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@433d9680] under array_to_string; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6f9e08d4] under mode; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@390037e7] under percentile_cont; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@704067c6] under percentile_disc; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2b08772d] under rank; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@78a8978a] under dense_rank; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@f171912] under percent_rank; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7d4d8579] under cume_dist; prior registration was null
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@f238e4f] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3b24087d] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@469a7575] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-28 16:37:09,363 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@11d86b9d] under trunc; prior registration was null
2024-05-28 16:37:09,378 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-28 16:37:09,378 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6dce59e] under date_trunc; prior registration was null
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Date current date
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Time current time
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: mode()
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double pi
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Object sql
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-28 16:37:09,378 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-28 16:37:09,394 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-28 16:37:09,488 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:37:09,488 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-28 16:37:09,598 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:37:09,598 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:37:09,880 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-28 16:37:09,911 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:37:09,911 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:37:09,927 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-28 16:37:09,927 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:37:09,927 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:37:09,958 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-28 16:37:09,958 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:37:09,958 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:37:09,974 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-28 16:37:09,974 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:37:09,974 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:37:09,990 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-28 16:37:10,021 DEBUG creation: Starting post-init callbacks
2024-05-28 16:37:10,021 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-28 16:37:10,036 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-28 16:37:10,036 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-28 16:37:10,036 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-28 16:37:10,036 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-28 16:37:10,158 DEBUG create: Created new SQL alias : g1_0
2024-05-28 16:37:10,162 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-28 16:37:10,185 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-28 16:37:10,185 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-28 16:37:10,205 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-28 16:37:10,205 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-28 16:37:10,205 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-28 16:37:10,205 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-28 16:37:10,205 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-28 16:37:10,205 DEBUG create: Created new SQL alias : a1_0
2024-05-28 16:37:10,205 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-28 16:37:10,205 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-28 16:37:10,206 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-28 16:37:10,206 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-28 16:37:10,206 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-28 16:37:10,206 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-28 16:37:10,206 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-28 16:37:10,206 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-28 16:37:10,206 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:37:10,206 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:37:10,206 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-28 16:37:10,206 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-28 16:37:10,207 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:37:10,207 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:37:10,207 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-28 16:37:10,207 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-28 16:37:10,207 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-28 16:37:10,208 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:37:10,208 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-28 16:37:10,208 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-28 16:37:10,208 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-28 16:37:10,208 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-28 16:37:10,208 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-28 16:37:10,208 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-28 16:37:10,208 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-28 16:37:10,208 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-28 16:37:10,255 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-28 16:37:10,256 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-28 16:37:10,266 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-28 16:37:10,267 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-28 16:37:10,268 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1174a305] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@9205c0a]
2024-05-28 16:37:10,281 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-28 16:37:10,281 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-28 16:37:10,288 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-28 16:37:10,292 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-28 16:37:10,638 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-28 16:37:10,638 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-28 16:37:10,770 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-28 16:37:10,779 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-28 16:37:10,810 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-28 16:37:10,826 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-28 16:37:10,826 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:37:10,826 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-28 16:37:10,826 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@543d2ef3
2024-05-28 16:37:10,826 DEBUG SessionFactoryRegistry: Registering SessionFactory: c4b0ccaa-0a2c-4c89-9d5f-7da6f114aaad (<unnamed>)
2024-05-28 16:37:10,826 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-28 16:37:10,826 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-28 16:37:10,904 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:37:10,904 DEBUG TransactionImpl: begin
2024-05-28 16:37:10,904 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:37:10,904 DEBUG TransactionImpl: begin
2024-05-28 16:37:11,057 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:37:11,057 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User(933570279390300))] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:37:11,072 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@703cb756
2024-05-28 16:37:11,072 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.User(933570279390300).role) 
2024-05-28 16:37:11,072 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User(933570279390300)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User(933570279390300).login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User(933570279390300).name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User(933570279390300).password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User(933570279390300).role]

2024-05-28 16:37:11,072 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User(933570279390300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:37:11,104 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-28 16:37:11,135 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.User(933570279390300) -> EntityResultInitializer(com.javarush.nikolenko.entity.User(933570279390300))@608670733 (SingleTableEntityPersister(com.javarush.nikolenko.entity.User))

2024-05-28 16:37:11,135 DEBUG SQL: 
    select
        u1_0.id,
        u1_0.login,
        u1_0.name,
        u1_0.password,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.role=?
2024-05-28 16:37:11,486 DEBUG results: Extracted JDBC value [0] - [1]
2024-05-28 16:37:11,486 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.User(933570279390300)): 1
2024-05-28 16:37:11,489 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.User(933570279390300)#1] : 365016387
2024-05-28 16:37:11,523 DEBUG results: Extracted JDBC value [1] - [admin]
2024-05-28 16:37:11,523 DEBUG results: Extracted JDBC value [2] - [Admin]
2024-05-28 16:37:11,523 DEBUG results: Extracted JDBC value [3] - [admin]
2024-05-28 16:37:11,523 DEBUG results: Extracted JDBC value [4] - [ADMIN]
2024-05-28 16:37:11,554 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.User(933570279390300)#1
2024-05-28 16:37:11,554 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b5e1fc5
2024-05-28 16:37:11,554 DEBUG TransactionImpl: committing
2024-05-28 16:37:11,554 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-28 16:37:11,570 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-28 16:37:11,570 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-05-28 16:37:11,570 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-28 16:37:11,570 DEBUG EntityPrinter: Listing entities:
2024-05-28 16:37:11,570 DEBUG EntityPrinter: com.javarush.nikolenko.entity.User{password=admin, role=ADMIN, name=Admin, id=1, login=admin}
2024-05-28 16:37:11,582 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:37:11,583 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:37:11,588 DEBUG TransactionImpl: committing
2024-05-28 16:37:11,589 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:37:11,589 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:37:11,593 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-28 16:37:11,593 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@237cd264] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9205c0a]
2024-05-28 16:37:11,593 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-28 16:37:11,593 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:37:11,599 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-28 16:52:02,251 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-28 16:52:02,281 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-28 16:52:02,297 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-28 16:52:02,402 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-28 16:52:02,402 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-28 16:52:02,482 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-28 16:52:02,482 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-28 16:52:02,794 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-28 16:52:02,809 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-28 16:52:02,825 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-28 16:52:02,825 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-28 16:52:02,825 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:52:02,841 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-28 16:52:02,856 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-28 16:52:02,872 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:52:03,110 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:52:03,125 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:52:03,125 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4632cfc
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5bdd5689
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@26e412ef
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@769d513
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-28 16:52:03,126 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@769a58e5
2024-05-28 16:52:03,183 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-28 16:52:03,183 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-28 16:52:03,183 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:52:03,183 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-28 16:52:03,183 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-28 16:52:03,183 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-28 16:52:03,183 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-28 16:52:03,503 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-28 16:52:03,503 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-28 16:52:03,503 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-28 16:52:03,600 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-28 16:52:03,616 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-28 16:52:03,652 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-28 16:52:03,671 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1d75e7af)
2024-05-28 16:52:03,671 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fc142ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34b27915)
2024-05-28 16:52:03,671 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-28 16:52:03,686 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-28 16:52:03,702 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@56380231
2024-05-28 16:52:03,702 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@56380231
2024-05-28 16:52:03,702 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5bdd5689`
2024-05-28 16:52:03,718 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-28 16:52:03,718 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:52:03,718 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:52:03,718 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:52:03,718 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:52:03,718 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:52:03,718 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:52:03,718 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:52:03,733 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:52:03,734 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:52:03,734 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:52:03,734 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:52:03,734 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43a0a32d]
2024-05-28 16:52:03,828 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-28 16:52:03,875 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-28 16:52:03,890 DEBUG EntityBinder: Import with entity name Answer
2024-05-28 16:52:03,906 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-28 16:52:03,938 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:03,970 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:03,970 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:52:03,970 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:52:03,970 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:03,986 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-28 16:52:03,986 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:03,986 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-28 16:52:03,986 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:04,001 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:04,001 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,001 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-28 16:52:04,001 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-28 16:52:04,001 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-28 16:52:04,001 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-28 16:52:04,001 DEBUG PropertyBinder: Building property answerMessage
2024-05-28 16:52:04,001 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,001 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-28 16:52:04,001 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-28 16:52:04,001 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-28 16:52:04,001 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-28 16:52:04,001 DEBUG PropertyBinder: Building property finalMessage
2024-05-28 16:52:04,001 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,001 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:52:04,001 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-28 16:52:04,001 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:52:04,001 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-28 16:52:04,001 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:52:04,001 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,001 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-28 16:52:04,001 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-28 16:52:04,001 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-28 16:52:04,001 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-28 16:52:04,001 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-28 16:52:04,001 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,001 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-28 16:52:04,001 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-28 16:52:04,001 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-28 16:52:04,001 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-28 16:52:04,001 DEBUG PropertyBinder: Building property questionId
2024-05-28 16:52:04,001 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:04,017 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-28 16:52:04,017 DEBUG EntityBinder: Import with entity name Game
2024-05-28 16:52:04,017 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-28 16:52:04,017 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:04,017 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,017 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:52:04,017 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:52:04,033 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:04,033 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-28 16:52:04,033 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:04,033 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-28 16:52:04,033 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:04,033 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:04,033 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,033 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-28 16:52:04,033 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-28 16:52:04,033 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-28 16:52:04,033 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-28 16:52:04,033 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-28 16:52:04,033 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,033 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:52:04,033 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-28 16:52:04,033 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:52:04,033 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-28 16:52:04,033 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:52:04,033 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,033 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:52:04,033 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-28 16:52:04,033 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:52:04,033 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-28 16:52:04,033 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:52:04,033 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,033 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:52:04,033 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-28 16:52:04,033 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:52:04,033 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-28 16:52:04,033 DEBUG PropertyBinder: Building property questId
2024-05-28 16:52:04,033 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,033 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-28 16:52:04,033 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-28 16:52:04,033 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-28 16:52:04,033 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-28 16:52:04,033 DEBUG PropertyBinder: Building property userPlayerId
2024-05-28 16:52:04,033 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:04,033 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-28 16:52:04,048 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-28 16:52:04,048 DEBUG EntityBinder: Import with entity name Quest
2024-05-28 16:52:04,048 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-28 16:52:04,048 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:04,048 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,048 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:52:04,048 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:52:04,048 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:04,048 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-28 16:52:04,048 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:04,048 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-28 16:52:04,048 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:04,048 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:04,048 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,048 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-28 16:52:04,048 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-28 16:52:04,048 DEBUG BasicValueBinder: building BasicValue for description
2024-05-28 16:52:04,048 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-28 16:52:04,048 DEBUG PropertyBinder: Building property description
2024-05-28 16:52:04,048 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-28 16:52:04,048 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:52:04,048 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-28 16:52:04,064 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:52:04,064 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-28 16:52:04,064 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:52:04,064 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,064 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:52:04,064 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-28 16:52:04,064 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:52:04,064 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-28 16:52:04,064 DEBUG PropertyBinder: Building property name
2024-05-28 16:52:04,064 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-28 16:52:04,064 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-28 16:52:04,064 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-28 16:52:04,064 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-28 16:52:04,064 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-28 16:52:04,064 DEBUG PropertyBinder: Building property userAuthorId
2024-05-28 16:52:04,064 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:04,064 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-28 16:52:04,064 DEBUG EntityBinder: Import with entity name Question
2024-05-28 16:52:04,064 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-28 16:52:04,064 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:04,064 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,064 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:52:04,064 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:52:04,064 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:04,064 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-28 16:52:04,064 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:04,064 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-28 16:52:04,064 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:04,064 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:04,064 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,064 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:52:04,064 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-28 16:52:04,064 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:52:04,064 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-28 16:52:04,064 DEBUG PropertyBinder: Building property questId
2024-05-28 16:52:04,064 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,064 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-28 16:52:04,064 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-28 16:52:04,064 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-28 16:52:04,064 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-28 16:52:04,064 DEBUG PropertyBinder: Building property questionMessage
2024-05-28 16:52:04,064 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:04,064 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-28 16:52:04,064 DEBUG EntityBinder: Import with entity name User
2024-05-28 16:52:04,064 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-28 16:52:04,064 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:04,064 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,064 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:52:04,064 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:52:04,064 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:04,079 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:04,079 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-28 16:52:04,079 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:04,079 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:04,079 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,079 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-28 16:52:04,079 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: building BasicValue for login
2024-05-28 16:52:04,079 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-28 16:52:04,079 DEBUG PropertyBinder: Building property login
2024-05-28 16:52:04,079 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,079 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:52:04,079 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:52:04,079 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-28 16:52:04,079 DEBUG PropertyBinder: Building property name
2024-05-28 16:52:04,079 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,079 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-28 16:52:04,079 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: building BasicValue for password
2024-05-28 16:52:04,079 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-28 16:52:04,079 DEBUG PropertyBinder: Building property password
2024-05-28 16:52:04,079 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:04,079 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-28 16:52:04,079 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: building BasicValue for role
2024-05-28 16:52:04,079 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-28 16:52:04,079 DEBUG PropertyBinder: Building property role
2024-05-28 16:52:04,079 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-28 16:52:04,079 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-28 16:52:04,079 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-28 16:52:04,095 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-28 16:52:04,095 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-28 16:52:04,095 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-28 16:52:04,095 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-28 16:52:04,143 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-28 16:52:04,359 DEBUG SessionFactoryImpl: Building session factory
2024-05-28 16:52:04,422 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:52:04,422 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson10HQL.QuestDbDaoTest,find, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5489b1f7, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-28 16:52:04,437 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-28 16:52:04,437 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@307e4c44] under count; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5482bcac] under every; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@10244722] under any; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-28 16:52:04,500 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e] under sinh; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a] under cosh; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d] under tanh; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65] under pi; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4be0a27d] under log; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4a9860] under position; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5cff6b74] under overlay; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@ea04cab] under trim; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@285583d4] under cast; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1039bfc4] under collate; prior registration was null
2024-05-28 16:52:04,516 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@58a84a12] under extract; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6b649efa] under ifnull; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3d88e6b9] under pad; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@9687f55] under str; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7f6329cb] under format; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a15b73] under timestampadd; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1a538ed8] under timestampdiff; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4cb957b8] under current_date; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cdc7b09] under current_time; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7364eed1] under current_timestamp; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@684e8c9d] under local_date; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ecc02bb] under local_time; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31973858] under local_datetime; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65514add] under offset_datetime; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79e7188e] under instant; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@51e754e1] under sql; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4be0a27d
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26865482] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-28 16:52:04,531 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@738d37fc] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-28 16:52:04,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-28 16:52:04,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-28 16:52:04,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6ecc02bb
2024-05-28 16:52:04,547 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@31973858
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@46fb0c33] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3b009e7b] under bit_length; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@270a620] under octet_length; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41f4039e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4a9860
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ff00507] under bitand; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@603cabc4] under bitor; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fa5045] under bitxor; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f347d7] under bitnot; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5974b233] under median; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69de5bed] under insert; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@545b5ed0] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5cff6b74
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a7df831] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@45117dd] under listagg; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@58324c9f] under array; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d7d8613] under array_list; prior registration was null
2024-05-28 16:52:04,548 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@abad89c] under array_agg; prior registration was null
2024-05-28 16:52:04,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@73894c5a] under array_position; prior registration was null
2024-05-28 16:52:04,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@536b71b4] under array_positions; prior registration was null
2024-05-28 16:52:04,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1e8fb66f] under array_positions_list; prior registration was null
2024-05-28 16:52:04,564 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d8d17a3] under array_length; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@43f03c23] under array_concat; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@629a9f26] under array_prepend; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@b791a81] under array_append; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7c1a8f0f] under array_contains; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3730f716] under array_contains_nullable; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@15a3b42] under array_overlaps; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@52c9d3d0] under array_overlaps_nullable; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b2bf745] under array_get; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@5d318e91] under array_set; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@766a52f5] under array_remove_index; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4342c13] under array_slice; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ba1209b] under array_trim; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@750ed637] under array_fill; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5190010f] under array_fill_list; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4998e74b] under array_to_string; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-28 16:52:04,580 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@433d9680] under mode; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@566e142] under percentile_cont; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2da81754] under percentile_disc; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f9e08d4] under rank; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@390037e7] under dense_rank; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@704067c6] under percent_rank; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7f4596d0] under cume_dist; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78a8978a] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@f171912] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@1e54a6b1] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@60f77af] under trunc; prior registration was null
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-28 16:52:04,596 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2574a9e3] under date_trunc; prior registration was null
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-28 16:52:04,596 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Date current date
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Time current time
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: mode()
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double pi
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Object sql
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-28 16:52:04,612 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-28 16:52:04,628 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-28 16:52:04,737 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:52:04,737 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-28 16:52:04,848 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:52:04,848 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:52:05,116 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-28 16:52:05,147 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:52:05,147 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:52:05,164 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-28 16:52:05,180 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:52:05,180 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:52:05,196 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-28 16:52:05,211 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:52:05,211 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:52:05,228 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-28 16:52:05,228 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:52:05,228 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:52:05,244 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-28 16:52:05,291 DEBUG creation: Starting post-init callbacks
2024-05-28 16:52:05,291 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-28 16:52:05,291 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-28 16:52:05,291 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-28 16:52:05,291 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-28 16:52:05,291 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-28 16:52:05,411 DEBUG create: Created new SQL alias : g1_0
2024-05-28 16:52:05,411 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-28 16:52:05,432 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-28 16:52:05,448 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-28 16:52:05,448 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-28 16:52:05,464 DEBUG create: Created new SQL alias : a1_0
2024-05-28 16:52:05,464 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-28 16:52:05,464 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-28 16:52:05,464 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-28 16:52:05,464 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:52:05,464 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:52:05,464 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-28 16:52:05,464 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-28 16:52:05,464 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:52:05,464 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:52:05,464 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-28 16:52:05,464 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-28 16:52:05,464 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:52:05,464 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-28 16:52:05,464 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-28 16:52:05,464 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-28 16:52:05,464 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-28 16:52:05,511 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-28 16:52:05,511 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-28 16:52:05,526 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-28 16:52:05,526 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-28 16:52:05,526 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29f85fe1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@45e11627]
2024-05-28 16:52:05,542 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-28 16:52:05,542 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-28 16:52:05,542 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-28 16:52:05,557 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-28 16:52:05,983 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-28 16:52:05,983 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-28 16:52:06,079 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-28 16:52:06,095 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-28 16:52:06,111 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-28 16:52:06,127 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-28 16:52:06,127 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:52:06,127 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-28 16:52:06,127 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4910afdf
2024-05-28 16:52:06,127 DEBUG SessionFactoryRegistry: Registering SessionFactory: 61e960d9-3cb0-4f4e-9152-b9f5811d3d2f (<unnamed>)
2024-05-28 16:52:06,127 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-28 16:52:06,127 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-28 16:52:06,175 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:52:06,175 DEBUG TransactionImpl: begin
2024-05-28 16:52:06,175 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:52:06,175 DEBUG TransactionImpl: begin
2024-05-28 16:52:06,237 DEBUG ActionQueue: Executing identity-insert immediately
2024-05-28 16:52:06,253 DEBUG SQL: 
    insert 
    into
        quest
        (description, first_question_id, name, user_author_id) 
    values
        (?, ?, ?, ?)
2024-05-28 16:52:06,466 DEBUG IdentifierGeneratorHelper: Natively generated identity (com.javarush.nikolenko.entity.Quest) : 3
2024-05-28 16:52:06,466 DEBUG ResourceRegistryStandardImpl: HHH000387: ResultSet's statement was not registered
2024-05-28 16:52:06,497 DEBUG ResourceRegistryStandardImpl: Exception clearing maxRows/queryTimeout [Этот statement был закрыт.]
2024-05-28 16:52:06,575 DEBUG TransactionImpl: committing
2024-05-28 16:52:06,575 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-28 16:52:06,575 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-28 16:52:06,575 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-05-28 16:52:06,575 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-28 16:52:06,575 DEBUG EntityPrinter: Listing entities:
2024-05-28 16:52:06,575 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=null, name=TestQuest, description=null, id=3, firstQuestionId=null}
2024-05-28 16:52:06,647 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:06,648 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:06,648 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:52:06,649 DEBUG TransactionImpl: begin
2024-05-28 16:52:06,649 DEBUG TransactionImpl: rolling back
2024-05-28 16:52:06,649 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:06,649 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:06,649 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-28 16:52:06,649 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@595184d8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45e11627]
2024-05-28 16:52:06,649 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-28 16:52:06,649 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:52:06,659 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-28 16:52:38,451 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-28 16:52:38,467 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-28 16:52:38,483 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-28 16:52:38,593 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-28 16:52:38,593 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-28 16:52:38,676 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-28 16:52:38,695 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-28 16:52:39,011 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-28 16:52:39,011 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-28 16:52:39,026 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-28 16:52:39,026 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-28 16:52:39,026 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-28 16:52:39,026 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:52:39,026 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:52:39,026 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-28 16:52:39,042 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-28 16:52:39,042 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-28 16:52:39,042 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:52:39,042 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-28 16:52:39,042 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-28 16:52:39,042 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:52:39,042 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-28 16:52:39,058 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-28 16:52:39,058 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:52:39,247 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5b2f8ab6
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b2f8ab6
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@57aa341b
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@26e412ef
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@769d513
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-28 16:52:39,263 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-28 16:52:39,310 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-28 16:52:39,311 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-28 16:52:39,311 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:52:39,311 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-28 16:52:39,311 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-28 16:52:39,311 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-28 16:52:39,311 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-28 16:52:39,615 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-28 16:52:39,615 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-28 16:52:39,615 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-28 16:52:39,727 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-28 16:52:39,742 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-28 16:52:39,772 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-28 16:52:39,789 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3419e23b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2)
2024-05-28 16:52:39,789 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d75e7af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fc142ec)
2024-05-28 16:52:39,789 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-28 16:52:39,789 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-28 16:52:39,805 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6c15e8c7
2024-05-28 16:52:39,805 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6c15e8c7
2024-05-28 16:52:39,805 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5b2f8ab6`
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:52:39,821 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:52:39,836 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53830483] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@29f85fe1]
2024-05-28 16:52:39,899 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-28 16:52:39,962 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-28 16:52:39,978 DEBUG EntityBinder: Import with entity name Answer
2024-05-28 16:52:39,978 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-28 16:52:39,994 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:40,026 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,026 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:52:40,026 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:52:40,041 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:40,041 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-28 16:52:40,057 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:40,057 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-28 16:52:40,057 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:40,057 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:40,073 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,073 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-28 16:52:40,073 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-28 16:52:40,073 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-28 16:52:40,073 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-28 16:52:40,073 DEBUG PropertyBinder: Building property answerMessage
2024-05-28 16:52:40,073 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,073 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-28 16:52:40,073 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-28 16:52:40,073 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-28 16:52:40,073 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-28 16:52:40,073 DEBUG PropertyBinder: Building property finalMessage
2024-05-28 16:52:40,073 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,073 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:52:40,073 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-28 16:52:40,073 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:52:40,073 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-28 16:52:40,073 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:52:40,073 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,073 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-28 16:52:40,073 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-28 16:52:40,073 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-28 16:52:40,073 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-28 16:52:40,073 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-28 16:52:40,073 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,073 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-28 16:52:40,073 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-28 16:52:40,073 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-28 16:52:40,073 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-28 16:52:40,073 DEBUG PropertyBinder: Building property questionId
2024-05-28 16:52:40,073 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:40,088 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-28 16:52:40,088 DEBUG EntityBinder: Import with entity name Game
2024-05-28 16:52:40,088 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-28 16:52:40,088 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:40,088 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,088 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:52:40,088 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:52:40,104 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:40,104 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-28 16:52:40,104 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:40,104 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-28 16:52:40,104 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:40,104 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:40,116 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,117 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-28 16:52:40,117 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-28 16:52:40,117 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-28 16:52:40,118 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-28 16:52:40,118 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-28 16:52:40,118 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,118 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:52:40,118 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-28 16:52:40,118 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:52:40,118 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-28 16:52:40,118 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:52:40,118 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,118 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:52:40,118 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-28 16:52:40,118 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:52:40,118 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-28 16:52:40,118 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:52:40,118 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,118 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:52:40,118 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-28 16:52:40,118 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:52:40,118 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-28 16:52:40,118 DEBUG PropertyBinder: Building property questId
2024-05-28 16:52:40,118 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,118 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-28 16:52:40,118 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-28 16:52:40,118 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-28 16:52:40,118 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-28 16:52:40,118 DEBUG PropertyBinder: Building property userPlayerId
2024-05-28 16:52:40,118 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:40,118 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-28 16:52:40,118 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-28 16:52:40,118 DEBUG EntityBinder: Import with entity name Quest
2024-05-28 16:52:40,118 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-28 16:52:40,118 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,135 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:52:40,135 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:52:40,135 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:40,135 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-28 16:52:40,135 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:40,135 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-28 16:52:40,135 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:40,135 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,135 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-28 16:52:40,135 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-28 16:52:40,135 DEBUG BasicValueBinder: building BasicValue for description
2024-05-28 16:52:40,135 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-28 16:52:40,135 DEBUG PropertyBinder: Building property description
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-28 16:52:40,135 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:52:40,135 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-28 16:52:40,135 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:52:40,135 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-28 16:52:40,135 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,135 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:52:40,135 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-28 16:52:40,135 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:52:40,135 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-28 16:52:40,135 DEBUG PropertyBinder: Building property name
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-28 16:52:40,135 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-28 16:52:40,135 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-28 16:52:40,135 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-28 16:52:40,135 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-28 16:52:40,135 DEBUG PropertyBinder: Building property userAuthorId
2024-05-28 16:52:40,135 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:40,135 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-28 16:52:40,135 DEBUG EntityBinder: Import with entity name Question
2024-05-28 16:52:40,135 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,135 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:52:40,135 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:52:40,135 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:40,135 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-28 16:52:40,135 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:40,135 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-28 16:52:40,135 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:40,135 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,135 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:52:40,135 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-28 16:52:40,135 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:52:40,135 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-28 16:52:40,135 DEBUG PropertyBinder: Building property questId
2024-05-28 16:52:40,135 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,135 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-28 16:52:40,135 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-28 16:52:40,135 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-28 16:52:40,135 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-28 16:52:40,150 DEBUG PropertyBinder: Building property questionMessage
2024-05-28 16:52:40,150 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:40,150 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-28 16:52:40,150 DEBUG EntityBinder: Import with entity name User
2024-05-28 16:52:40,150 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-28 16:52:40,150 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:52:40,150 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,150 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:52:40,150 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:52:40,150 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:52:40,150 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-28 16:52:40,150 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:52:40,150 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-28 16:52:40,150 DEBUG PropertyBinder: Building property id
2024-05-28 16:52:40,150 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:52:40,150 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,150 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-28 16:52:40,150 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-28 16:52:40,150 DEBUG BasicValueBinder: building BasicValue for login
2024-05-28 16:52:40,150 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-28 16:52:40,150 DEBUG PropertyBinder: Building property login
2024-05-28 16:52:40,150 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,150 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:52:40,150 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-28 16:52:40,150 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:52:40,150 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-28 16:52:40,150 DEBUG PropertyBinder: Building property name
2024-05-28 16:52:40,150 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,150 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-28 16:52:40,150 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-28 16:52:40,150 DEBUG BasicValueBinder: building BasicValue for password
2024-05-28 16:52:40,150 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-28 16:52:40,150 DEBUG PropertyBinder: Building property password
2024-05-28 16:52:40,150 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:52:40,150 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-28 16:52:40,150 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-28 16:52:40,150 DEBUG BasicValueBinder: building BasicValue for role
2024-05-28 16:52:40,150 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-28 16:52:40,150 DEBUG PropertyBinder: Building property role
2024-05-28 16:52:40,150 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:52:40,150 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-28 16:52:40,166 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-28 16:52:40,166 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-28 16:52:40,166 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-28 16:52:40,166 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-28 16:52:40,166 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-28 16:52:40,166 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-28 16:52:40,224 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-28 16:52:40,445 DEBUG SessionFactoryImpl: Building session factory
2024-05-28 16:52:40,508 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:52:40,508 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson10HQL.QuestDbDaoTest,find, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49fb0bbd, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-28 16:52:40,508 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-28 16:52:40,523 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:52:40,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-28 16:52:40,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-28 16:52:40,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-28 16:52:40,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-28 16:52:40,571 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4aa2877c] under count; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@56b8aaf1] under every; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5482bcac] under any; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e225820] under sinh; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e] under cosh; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a] under tanh; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d] under pi; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65] under log; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4dcbae55] under position; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4041739c] under overlay; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@29a33620] under trim; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@52559a69] under cast; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@285583d4] under collate; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5b202ff] under extract; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7186b202] under ifnull; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-28 16:52:40,586 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@72543547] under pad; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@73afe2b7] under str; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@706ceca6] under format; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@606a1bc4] under timestampadd; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@41b64020] under timestampdiff; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a1a256d] under current_date; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4cb957b8] under current_time; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cdc7b09] under current_timestamp; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7364eed1] under local_date; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@684e8c9d] under local_time; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ecc02bb] under local_datetime; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31973858] under offset_datetime; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65514add] under instant; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@10850d17] under sql; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51e754e1] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e225820
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@67bb4dcd] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@684e8c9d
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6ecc02bb
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5c53f292] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@46fb0c33] under bit_length; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3b009e7b] under octet_length; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@270a620] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4dcbae55
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41f4039e] under bitand; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ff00507] under bitor; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@603cabc4] under bitxor; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fa5045] under bitnot; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f347d7] under median; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-28 16:52:40,602 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c134052] under insert; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4fc165f6] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4041739c
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@545b5ed0] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@cfd1075] under listagg; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@61ffd148] under array; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@58324c9f] under array_list; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3bc69ce9] under array_agg; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@21de60a7] under array_position; prior registration was null
2024-05-28 16:52:40,618 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@67f63d26] under array_positions; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1f9d4b0e] under array_positions_list; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e8fb66f] under array_length; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2f677247] under array_concat; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1983b48a] under array_prepend; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@629a9f26] under array_append; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@64bebd55] under array_contains; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7c1a8f0f] under array_contains_nullable; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6588b715] under array_overlaps; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@15a3b42] under array_overlaps_nullable; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67e0ff3a] under array_get; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@1eb9a3ef] under array_set; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@27fe059d] under array_remove_index; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@766a52f5] under array_slice; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4342c13] under array_trim; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@157d3a45] under array_fill; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@750ed637] under array_fill_list; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@18d11527] under array_to_string; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@575cabf0] under mode; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@433d9680] under percentile_cont; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@566e142] under percentile_disc; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@261bd7b] under rank; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f9e08d4] under dense_rank; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@390037e7] under percent_rank; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@704067c6] under cume_dist; prior registration was null
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2b08772d] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78a8978a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-28 16:52:40,634 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@29bcf51d] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-28 16:52:40,650 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3b0c3951] under trunc; prior registration was null
2024-05-28 16:52:40,650 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-28 16:52:40,650 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60f77af] under date_trunc; prior registration was null
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Date current date
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Time current time
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-28 16:52:40,650 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: mode()
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double pi
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Object sql
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-28 16:52:40,666 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-28 16:52:40,681 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-28 16:52:40,789 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:52:40,811 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-28 16:52:40,958 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:52:40,958 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:52:41,273 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-28 16:52:41,320 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:52:41,320 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:52:41,336 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-28 16:52:41,336 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:52:41,336 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:52:41,368 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-28 16:52:41,368 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:52:41,368 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:52:41,383 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-28 16:52:41,383 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:52:41,383 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:52:41,399 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-28 16:52:41,446 DEBUG creation: Starting post-init callbacks
2024-05-28 16:52:41,446 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-28 16:52:41,446 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-28 16:52:41,446 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-28 16:52:41,446 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-28 16:52:41,446 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-28 16:52:41,557 DEBUG create: Created new SQL alias : g1_0
2024-05-28 16:52:41,572 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-28 16:52:41,603 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-28 16:52:41,603 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-28 16:52:41,619 DEBUG create: Created new SQL alias : a1_0
2024-05-28 16:52:41,619 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-28 16:52:41,619 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-28 16:52:41,619 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-28 16:52:41,619 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:52:41,619 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:52:41,619 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-28 16:52:41,619 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-28 16:52:41,619 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:52:41,619 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:52:41,619 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-28 16:52:41,619 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-28 16:52:41,619 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:52:41,619 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-28 16:52:41,619 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-28 16:52:41,619 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-28 16:52:41,619 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-28 16:52:41,651 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-28 16:52:41,667 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-28 16:52:41,667 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-28 16:52:41,667 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-28 16:52:41,667 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53830483] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@d84418a]
2024-05-28 16:52:41,683 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-28 16:52:41,683 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-28 16:52:41,699 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-28 16:52:41,699 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-28 16:52:42,022 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-28 16:52:42,022 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-28 16:52:42,133 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-28 16:52:42,149 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-28 16:52:42,196 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-28 16:52:42,212 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-28 16:52:42,212 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:52:42,212 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-28 16:52:42,212 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a247711
2024-05-28 16:52:42,212 DEBUG SessionFactoryRegistry: Registering SessionFactory: b2071af9-10f3-4dcf-b6f5-6e0843f1da99 (<unnamed>)
2024-05-28 16:52:42,212 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-28 16:52:42,212 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-28 16:52:42,307 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:52:42,307 DEBUG TransactionImpl: begin
2024-05-28 16:52:42,307 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:52:42,307 DEBUG TransactionImpl: begin
2024-05-28 16:52:42,419 DEBUG ActionQueue: Executing identity-insert immediately
2024-05-28 16:52:42,435 DEBUG SQL: 
    insert 
    into
        quest
        (description, first_question_id, name, user_author_id) 
    values
        (?, ?, ?, ?)
2024-05-28 16:52:42,472 DEBUG IdentifierGeneratorHelper: Natively generated identity (com.javarush.nikolenko.entity.Quest) : 4
2024-05-28 16:52:42,475 DEBUG ResourceRegistryStandardImpl: HHH000387: ResultSet's statement was not registered
2024-05-28 16:52:42,484 DEBUG ResourceRegistryStandardImpl: Exception clearing maxRows/queryTimeout [Этот statement был закрыт.]
2024-05-28 16:52:42,484 DEBUG TransactionImpl: committing
2024-05-28 16:52:42,484 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-28 16:52:42,484 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-28 16:52:42,500 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-05-28 16:52:42,500 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-28 16:52:42,500 DEBUG EntityPrinter: Listing entities:
2024-05-28 16:52:42,500 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=null, name=TestQuest, description=null, id=4, firstQuestionId=null}
2024-05-28 16:52:42,591 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:42,591 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:42,591 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:52:42,591 DEBUG TransactionImpl: begin
2024-05-28 16:52:42,667 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:52:42,667 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest(934501919145000))] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:52:42,683 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c1908c8
2024-05-28 16:52:42,683 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(934501919145000).id) 
2024-05-28 16:52:42,699 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47f0e078
2024-05-28 16:52:42,699 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(934501919145000).name) 
2024-05-28 16:52:42,699 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest(934501919145000)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934501919145000).description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934501919145000).firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934501919145000).name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest(934501919145000).userAuthorId]

2024-05-28 16:52:42,699 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest(934501919145000)) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:52:42,730 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-28 16:52:42,746 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.Quest(934501919145000) -> EntityResultInitializer(com.javarush.nikolenko.entity.Quest(934501919145000))@1328382325 (SingleTableEntityPersister(com.javarush.nikolenko.entity.Quest))

2024-05-28 16:52:42,761 DEBUG SQL: 
    select
        q1_0.id,
        q1_0.description,
        q1_0.first_question_id,
        q1_0.name,
        q1_0.user_author_id 
    from
        quest q1_0 
    where
        q1_0.id=? 
        and q1_0.name=?
2024-05-28 16:52:42,868 DEBUG results: Extracted JDBC value [0] - [4]
2024-05-28 16:52:42,868 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(934501919145000)): 4
2024-05-28 16:52:42,868 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(934501919145000)#4] : 1718325723
2024-05-28 16:52:42,868 DEBUG results: Extracted JDBC value [1] - [null]
2024-05-28 16:52:42,868 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-28 16:52:42,868 DEBUG results: Extracted JDBC value [3] - [TestQuest]
2024-05-28 16:52:42,868 DEBUG results: Extracted JDBC value [4] - [null]
2024-05-28 16:52:42,868 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(934501919145000)#4
2024-05-28 16:52:42,868 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9cb927e
2024-05-28 16:52:42,868 DEBUG TransactionImpl: committing
2024-05-28 16:52:42,868 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-28 16:52:42,868 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-28 16:52:42,868 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-05-28 16:52:42,868 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-28 16:52:42,868 DEBUG EntityPrinter: Listing entities:
2024-05-28 16:52:42,868 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=null, name=TestQuest, description=null, id=4, firstQuestionId=null}
2024-05-28 16:52:42,879 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:42,879 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:42,879 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:52:42,879 DEBUG TransactionImpl: begin
2024-05-28 16:52:42,896 DEBUG TransactionImpl: committing
2024-05-28 16:52:42,896 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-28 16:52:42,896 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-28 16:52:42,896 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2024-05-28 16:52:42,896 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-28 16:52:42,896 DEBUG EntityPrinter: Listing entities:
2024-05-28 16:52:42,896 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=null, name=TestQuest, description=null, id=4, firstQuestionId=null}
2024-05-28 16:52:42,896 DEBUG SQL: 
    delete 
    from
        quest 
    where
        id=?
2024-05-28 16:52:43,001 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:43,002 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:43,002 DEBUG TransactionImpl: committing
2024-05-28 16:52:43,002 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:43,002 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:52:43,006 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-28 16:52:43,008 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1f57666b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@d84418a]
2024-05-28 16:52:43,008 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-28 16:52:43,008 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:52:43,010 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-05-28 16:53:23,190 DEBUG logging: Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-05-28 16:53:23,222 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-05-28 16:53:23,238 DEBUG IntegratorServiceImpl: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-05-28 16:53:23,368 INFO Version: HHH000412: Hibernate ORM core version 6.4.1.Final
2024-05-28 16:53:23,368 DEBUG Environment: HHH000206: 'hibernate.properties' not found
2024-05-28 16:53:23,464 DEBUG LocalXmlResourceResolver: Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-05-28 16:53:23,479 DEBUG JaxbCfgProcessor: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-05-28 16:53:23,903 DEBUG Configuration: Building session factory using internal StandardServiceRegistryBuilder
2024-05-28 16:53:23,919 DEBUG Configuration: Building session factory using provided StandardServiceRegistry
2024-05-28 16:53:23,919 DEBUG factory: Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-05-28 16:53:23,934 DEBUG factory: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-05-28 16:53:23,950 DEBUG RegionFactoryInitiator: Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-05-28 16:53:23,950 INFO RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a64e035
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4d74c3ba
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41c204a0
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@64138b0c
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49dbaaf3
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration binary -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration [B -> org.hibernate.type.BasicTypeReference@22d9c961
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@736f3e9e
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration image -> org.hibernate.type.BasicTypeReference@bdc8014
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration blob -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1f443fae
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73ba6fe6
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@79ab34c1
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1698d7c0
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration integer -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration int -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@281f23f2
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@87abc48
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28d79cba
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@782168b7
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@29f0c4f2
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7435a578
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration character -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration char -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6093d508
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13047d7d
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration string -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c7cfcbb
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65bb9029
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration characters -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration [C -> org.hibernate.type.BasicTypeReference@1bfe3203
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b214b94
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration text -> org.hibernate.type.BasicTypeReference@70e3f36f
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49601f82
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration clob -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@23e44287
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b8d084
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6daf2337
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@24fabd0f
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@250b236d
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@61f3fbb8
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7551da2a
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@432034a
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration Duration -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@78de58ea
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@60e5272
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7d755813
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@69c93ca4
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63da207f
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@173373b4
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40d10481
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dd3c23
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@52b6319f
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e9456ae
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a9a4f1
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f1cae23
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c455e96
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@985696
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration date -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5bcde458
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration time -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@215a34b4
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77bd7fe7
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35d3ab60
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@10876a6
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71870da7
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration instant -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6dd91637
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration uuid -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@45792847
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@706cb08
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e25147a
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration class -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6b68cb27
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration Currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@675ffd1d
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration locale -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@56303475
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration serializable -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@30506c0d
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1dcca8d3
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5631962
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration url -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@52a70627
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration vector -> org.hibernate.type.BasicTypeReference@6124287a
2024-05-28 16:53:24,139 DEBUG BasicTypeRegistry: Adding type registration row_version -> org.hibernate.type.BasicTypeReference@19569ebd
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration object -> org.hibernate.type.JavaObjectType@5b2f8ab6
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b2f8ab6
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration null -> org.hibernate.type.NullType@57aa341b
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@26e412ef
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ae263bf
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7103ab0
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19ccca5
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@769d513
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5e4fa1da
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@588cd519
2024-05-28 16:53:24,155 DEBUG BasicTypeRegistry: Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3f92c349
2024-05-28 16:53:24,186 WARN pooling: HHH10001002: Using built-in connection pool (not intended for production use)
2024-05-28 16:53:24,186 INFO pooling: HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2024-05-28 16:53:24,186 INFO pooling: HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:53:24,186 INFO pooling: HHH10001001: Connection properties: {password=postgres, user=postgres}
2024-05-28 16:53:24,186 INFO pooling: HHH10001003: Autocommit mode: false
2024-05-28 16:53:24,201 DEBUG pooling: Initializing Connection pool with 1 Connections
2024-05-28 16:53:24,201 INFO pooling: HHH10001115: Connection pool size: 20 (min=1)
2024-05-28 16:53:24,500 DEBUG JdbcEnvironmentInitiator: Database ->
       name : PostgreSQL
    version : 16.2 (Debian 16.2-1.pgdg120+2)
      major : 16
      minor : 2
2024-05-28 16:53:24,500 DEBUG JdbcEnvironmentInitiator: Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.6.0
      major : 42
      minor : 6
2024-05-28 16:53:24,500 DEBUG JdbcEnvironmentInitiator: JDBC version : 4.2
2024-05-28 16:53:24,581 DEBUG dialect: HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 16.2
2024-05-28 16:53:24,597 DEBUG IdentifierHelperBuilder: JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-05-28 16:53:24,617 DEBUG lob: HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2024-05-28 16:53:24,620 DEBUG DdlTypeRegistry: addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3419e23b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@710d89e2)
2024-05-28 16:53:24,620 DEBUG DdlTypeRegistry: addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d75e7af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fc142ec)
2024-05-28 16:53:24,636 DEBUG JdbcTypeRegistry: addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-05-28 16:53:24,636 DEBUG JdbcTypeRegistry: addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-05-28 16:53:24,636 DEBUG BasicTypeRegistry: Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6c15e8c7
2024-05-28 16:53:24,636 DEBUG BasicTypeRegistry: Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6c15e8c7
2024-05-28 16:53:24,636 DEBUG BasicTypeRegistry: Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5b2f8ab6`
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:53:24,652 DEBUG BasicTypeRegistry: Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-05-28 16:53:24,652 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53830483] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@29f85fe1]
2024-05-28 16:53:24,715 DEBUG Namespace: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-05-28 16:53:24,762 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Answer
2024-05-28 16:53:24,762 DEBUG EntityBinder: Import with entity name Answer
2024-05-28 16:53:24,793 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Answer on table answer
2024-05-28 16:53:24,809 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:53:24,840 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,840 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:53:24,840 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:53:24,840 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:53:24,840 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:id]
2024-05-28 16:53:24,856 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:53:24,856 DEBUG BasicValue: Skipping column re-registration: answer.id
2024-05-28 16:53:24,856 DEBUG PropertyBinder: Building property id
2024-05-28 16:53:24,856 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:53:24,856 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,856 DEBUG PropertyBinder: MetadataSourceProcessor property answerMessage with lazy=false
2024-05-28 16:53:24,856 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:answerMessage]
2024-05-28 16:53:24,856 DEBUG BasicValueBinder: building BasicValue for answerMessage
2024-05-28 16:53:24,856 DEBUG BasicValue: Skipping column re-registration: answer.answerMessage
2024-05-28 16:53:24,856 DEBUG PropertyBinder: Building property answerMessage
2024-05-28 16:53:24,872 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,872 DEBUG PropertyBinder: MetadataSourceProcessor property finalMessage with lazy=false
2024-05-28 16:53:24,872 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:finalMessage]
2024-05-28 16:53:24,872 DEBUG BasicValueBinder: building BasicValue for finalMessage
2024-05-28 16:53:24,872 DEBUG BasicValue: Skipping column re-registration: answer.finalMessage
2024-05-28 16:53:24,872 DEBUG PropertyBinder: Building property finalMessage
2024-05-28 16:53:24,872 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,872 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:53:24,872 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:gameState]
2024-05-28 16:53:24,872 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:53:24,872 DEBUG BasicValue: Skipping column re-registration: answer.gameState
2024-05-28 16:53:24,872 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:53:24,872 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,872 DEBUG PropertyBinder: MetadataSourceProcessor property nextQuestionId with lazy=false
2024-05-28 16:53:24,872 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:nextQuestionId]
2024-05-28 16:53:24,872 DEBUG BasicValueBinder: building BasicValue for nextQuestionId
2024-05-28 16:53:24,872 DEBUG BasicValue: Skipping column re-registration: answer.nextQuestionId
2024-05-28 16:53:24,872 DEBUG PropertyBinder: Building property nextQuestionId
2024-05-28 16:53:24,872 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,872 DEBUG PropertyBinder: MetadataSourceProcessor property questionId with lazy=false
2024-05-28 16:53:24,872 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Answer:questionId]
2024-05-28 16:53:24,872 DEBUG BasicValueBinder: building BasicValue for questionId
2024-05-28 16:53:24,872 DEBUG BasicValue: Skipping column re-registration: answer.questionId
2024-05-28 16:53:24,872 DEBUG PropertyBinder: Building property questionId
2024-05-28 16:53:24,872 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:53:24,872 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Game
2024-05-28 16:53:24,872 DEBUG EntityBinder: Import with entity name Game
2024-05-28 16:53:24,872 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Game on table game
2024-05-28 16:53:24,872 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:53:24,888 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,888 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:53:24,888 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:53:24,920 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:53:24,920 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:id]
2024-05-28 16:53:24,920 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:53:24,920 DEBUG BasicValue: Skipping column re-registration: game.id
2024-05-28 16:53:24,920 DEBUG PropertyBinder: Building property id
2024-05-28 16:53:24,920 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:53:24,920 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,920 DEBUG PropertyBinder: MetadataSourceProcessor property currentQuestionId with lazy=false
2024-05-28 16:53:24,920 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:currentQuestionId]
2024-05-28 16:53:24,920 DEBUG BasicValueBinder: building BasicValue for currentQuestionId
2024-05-28 16:53:24,920 DEBUG BasicValue: Skipping column re-registration: game.currentQuestionId
2024-05-28 16:53:24,920 DEBUG PropertyBinder: Building property currentQuestionId
2024-05-28 16:53:24,920 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,920 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:53:24,920 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:firstQuestionId]
2024-05-28 16:53:24,920 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:53:24,920 DEBUG BasicValue: Skipping column re-registration: game.firstQuestionId
2024-05-28 16:53:24,920 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:53:24,920 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,920 DEBUG PropertyBinder: MetadataSourceProcessor property gameState with lazy=false
2024-05-28 16:53:24,920 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:gameState]
2024-05-28 16:53:24,920 DEBUG BasicValueBinder: building BasicValue for gameState
2024-05-28 16:53:24,920 DEBUG BasicValue: Skipping column re-registration: game.gameState
2024-05-28 16:53:24,920 DEBUG PropertyBinder: Building property gameState
2024-05-28 16:53:24,920 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,920 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:53:24,920 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:questId]
2024-05-28 16:53:24,920 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:53:24,920 DEBUG BasicValue: Skipping column re-registration: game.questId
2024-05-28 16:53:24,920 DEBUG PropertyBinder: Building property questId
2024-05-28 16:53:24,920 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,920 DEBUG PropertyBinder: MetadataSourceProcessor property userPlayerId with lazy=false
2024-05-28 16:53:24,920 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Game:userPlayerId]
2024-05-28 16:53:24,920 DEBUG BasicValueBinder: building BasicValue for userPlayerId
2024-05-28 16:53:24,920 DEBUG BasicValue: Skipping column re-registration: game.userPlayerId
2024-05-28 16:53:24,920 DEBUG PropertyBinder: Building property userPlayerId
2024-05-28 16:53:24,920 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:53:24,920 DEBUG QueryBinder: Binding named query: QUERY_MORE_ID => SELECT q FROM Quest q where id>:id
2024-05-28 16:53:24,935 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Quest
2024-05-28 16:53:24,935 DEBUG EntityBinder: Import with entity name Quest
2024-05-28 16:53:24,935 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Quest on table quest
2024-05-28 16:53:24,935 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:53:24,935 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,935 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:53:24,935 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:53:24,935 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:53:24,935 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:id]
2024-05-28 16:53:24,935 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:53:24,935 DEBUG BasicValue: Skipping column re-registration: quest.id
2024-05-28 16:53:24,935 DEBUG PropertyBinder: Building property id
2024-05-28 16:53:24,935 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:53:24,935 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,935 DEBUG PropertyBinder: MetadataSourceProcessor property description with lazy=false
2024-05-28 16:53:24,935 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:description]
2024-05-28 16:53:24,935 DEBUG BasicValueBinder: building BasicValue for description
2024-05-28 16:53:24,935 DEBUG BasicValue: Skipping column re-registration: quest.description
2024-05-28 16:53:24,935 DEBUG PropertyBinder: Building property description
2024-05-28 16:53:24,935 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='first_question_id')
2024-05-28 16:53:24,935 DEBUG PropertyBinder: MetadataSourceProcessor property firstQuestionId with lazy=false
2024-05-28 16:53:24,935 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:firstQuestionId]
2024-05-28 16:53:24,935 DEBUG BasicValueBinder: building BasicValue for firstQuestionId
2024-05-28 16:53:24,935 DEBUG BasicValue: Skipping column re-registration: quest.first_question_id
2024-05-28 16:53:24,935 DEBUG PropertyBinder: Building property firstQuestionId
2024-05-28 16:53:24,935 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,935 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:53:24,935 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:name]
2024-05-28 16:53:24,935 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:53:24,935 DEBUG BasicValue: Skipping column re-registration: quest.name
2024-05-28 16:53:24,935 DEBUG PropertyBinder: Building property name
2024-05-28 16:53:24,935 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn(column='user_author_id')
2024-05-28 16:53:24,935 DEBUG PropertyBinder: MetadataSourceProcessor property userAuthorId with lazy=false
2024-05-28 16:53:24,935 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Quest:userAuthorId]
2024-05-28 16:53:24,935 DEBUG BasicValueBinder: building BasicValue for userAuthorId
2024-05-28 16:53:24,935 DEBUG BasicValue: Skipping column re-registration: quest.user_author_id
2024-05-28 16:53:24,935 DEBUG PropertyBinder: Building property userAuthorId
2024-05-28 16:53:24,935 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:53:24,935 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.Question
2024-05-28 16:53:24,935 DEBUG EntityBinder: Import with entity name Question
2024-05-28 16:53:24,935 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.Question on table question
2024-05-28 16:53:24,935 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:53:24,935 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,935 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:53:24,951 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:53:24,951 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:53:24,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:id]
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:53:24,951 DEBUG BasicValue: Skipping column re-registration: question.id
2024-05-28 16:53:24,951 DEBUG PropertyBinder: Building property id
2024-05-28 16:53:24,951 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:53:24,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,951 DEBUG PropertyBinder: MetadataSourceProcessor property questId with lazy=false
2024-05-28 16:53:24,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questId]
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: building BasicValue for questId
2024-05-28 16:53:24,951 DEBUG BasicValue: Skipping column re-registration: question.questId
2024-05-28 16:53:24,951 DEBUG PropertyBinder: Building property questId
2024-05-28 16:53:24,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,951 DEBUG PropertyBinder: MetadataSourceProcessor property questionMessage with lazy=false
2024-05-28 16:53:24,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.Question:questionMessage]
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: building BasicValue for questionMessage
2024-05-28 16:53:24,951 DEBUG BasicValue: Skipping column re-registration: question.questionMessage
2024-05-28 16:53:24,951 DEBUG PropertyBinder: Building property questionMessage
2024-05-28 16:53:24,951 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:53:24,951 DEBUG EntityBinder: Binding entity from annotated class: com.javarush.nikolenko.entity.User
2024-05-28 16:53:24,951 DEBUG EntityBinder: Import with entity name User
2024-05-28 16:53:24,951 DEBUG EntityBinder: Bind entity com.javarush.nikolenko.entity.User on table users
2024-05-28 16:53:24,951 DEBUG AnnotatedColumn: Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-05-28 16:53:24,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,951 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:53:24,951 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:53:24,951 DEBUG PropertyBinder: MetadataSourceProcessor property id with lazy=false
2024-05-28 16:53:24,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:id]
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: building BasicValue for id
2024-05-28 16:53:24,951 DEBUG BasicValue: Skipping column re-registration: users.id
2024-05-28 16:53:24,951 DEBUG PropertyBinder: Building property id
2024-05-28 16:53:24,951 DEBUG BinderHelper: #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-05-28 16:53:24,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,951 DEBUG PropertyBinder: MetadataSourceProcessor property login with lazy=false
2024-05-28 16:53:24,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:login]
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: building BasicValue for login
2024-05-28 16:53:24,951 DEBUG BasicValue: Skipping column re-registration: users.login
2024-05-28 16:53:24,951 DEBUG PropertyBinder: Building property login
2024-05-28 16:53:24,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,951 DEBUG PropertyBinder: MetadataSourceProcessor property name with lazy=false
2024-05-28 16:53:24,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:name]
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: building BasicValue for name
2024-05-28 16:53:24,951 DEBUG BasicValue: Skipping column re-registration: users.name
2024-05-28 16:53:24,951 DEBUG PropertyBinder: Building property name
2024-05-28 16:53:24,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,951 DEBUG PropertyBinder: MetadataSourceProcessor property password with lazy=false
2024-05-28 16:53:24,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:password]
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: building BasicValue for password
2024-05-28 16:53:24,951 DEBUG BasicValue: Skipping column re-registration: users.password
2024-05-28 16:53:24,951 DEBUG PropertyBinder: Building property password
2024-05-28 16:53:24,951 DEBUG AnnotatedColumn: Binding column: AnnotatedColumn()
2024-05-28 16:53:24,951 DEBUG PropertyBinder: MetadataSourceProcessor property role with lazy=false
2024-05-28 16:53:24,951 DEBUG AbstractPropertyHolder: Attempting to locate auto-apply AttributeConverter for property [com.javarush.nikolenko.entity.User:role]
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: building BasicValue for role
2024-05-28 16:53:24,951 DEBUG BasicValue: Skipping column re-registration: users.role
2024-05-28 16:53:24,951 DEBUG PropertyBinder: Building property role
2024-05-28 16:53:24,951 DEBUG ClassLoaderServiceImpl: HHH000194: Package not found or wo package-info.java: com.javarush.nikolenko.entity
2024-05-28 16:53:24,951 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for answerMessage
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for finalMessage
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for nextQuestionId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for currentQuestionId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for gameState
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userPlayerId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for description
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for firstQuestionId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for userAuthorId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questId
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for questionMessage
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for id
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for login
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for name
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for password
2024-05-28 16:53:24,967 DEBUG BasicValueBinder: Starting `BasicValueBinder#fillSimpleValue` for role
2024-05-28 16:53:24,982 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [answer]
2024-05-28 16:53:24,982 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [game]
2024-05-28 16:53:24,982 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [quest]
2024-05-28 16:53:24,982 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [question]
2024-05-28 16:53:24,982 DEBUG PrimaryKey: Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-05-28 16:53:25,029 DEBUG BytecodeProviderInitiator: HHH000021: Bytecode provider: bytebuddy
2024-05-28 16:53:25,249 DEBUG SessionFactoryImpl: Building session factory
2024-05-28 16:53:25,321 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:53:25,321 DEBUG SessionFactoryImpl: Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=22, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, java.class.path=C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.1\junit-platform-launcher-1.10.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\plugins\junit\lib\junit-rt.jar;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\test-classes;O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc\target\classes;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Ольга\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.0\jakarta.servlet.jsp.jstl-api-3.0.0.jar;C:\Users\Ольга\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\Ольга\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.21.1\log4j-core-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.21.1\log4j-slf4j2-impl-2.21.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\2.0.11\slf4j-api-2.0.11.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Ольга\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.14.11\byte-buddy-1.14.11.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.11\byte-buddy-agent-1.14.11.jar;C:\Users\Ольга\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Ольга\.m2\repository\org\liquibase\liquibase-core\4.24.0\liquibase-core-4.24.0.jar;C:\Users\Ольга\.m2\repository\com\opencsv\opencsv\5.8\opencsv-5.8.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar;C:\Users\Ольга\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Ольга\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ольга\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Ольга\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Ольга\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Ольга\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Ольга\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Ольга\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Ольга\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=22, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.javarush.nikolenko.lesson10HQL.QuestDbDaoTest,find, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Users\Ольга\.jdks\openjdk-22.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=Ольга, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/game, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, java.version=22.0.1, user.dir=O:\IdeaProjects\JavaRush\smallProjects\ProjectAcdc, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49fb0bbd, native.encoding=Cp1251, java.library.path=C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Common Files\Intel\Shared Files\cpp\bin\Intel64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Hewlett-Packard\SimplePass\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\OpenVPN\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Ольга\.jdks\openjdk-22.0.1\bin;C:\Program Files\Git\cmd;O:\devtools\maven\bin;O:\devtools\node\;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Olga\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.1\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, sun.io.unicode.encoding=UnicodeLittle, java.class.version=66.0}
2024-05-28 16:53:25,336 DEBUG SessionFactoryImpl: Session factory constructed with filter configurations : {}
2024-05-28 16:53:25,336 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4aa2877c] under count; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@56b8aaf1] under every; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5482bcac] under any; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e225820] under sinh; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e] under cosh; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a] under tanh; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d] under pi; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65] under log; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-05-28 16:53:25,399 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4dcbae55] under position; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4041739c] under overlay; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@29a33620] under trim; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@52559a69] under cast; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@285583d4] under collate; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5b202ff] under extract; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7186b202] under ifnull; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-05-28 16:53:25,415 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@72543547] under pad; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@73afe2b7] under str; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@706ceca6] under format; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@606a1bc4] under timestampadd; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@41b64020] under timestampdiff; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : dateadd -> timestampadd
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : datediff -> timestampdiff
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a1a256d] under current_date; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4cb957b8] under current_time; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cdc7b09] under current_timestamp; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : current date -> current_date
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : current time -> current_time
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : current timestamp -> current_timestamp
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7364eed1] under local_date; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@684e8c9d] under local_time; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ecc02bb] under local_datetime; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31973858] under offset_datetime; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : local date -> local_date
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : local time -> local_time
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : local datetime -> local_datetime
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : offset datetime -> offset_datetime
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65514add] under instant; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : current_instant -> instant
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@10850d17] under sql; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36ef1d65
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51e754e1] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2dc0a
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e225820
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8aeab9e
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a00b15d
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@67bb4dcd] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@684e8c9d
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6ecc02bb
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5c53f292] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : length -> character_length
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@46fb0c33] under bit_length; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3b009e7b] under octet_length; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : char -> chr
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@270a620] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4dcbae55
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41f4039e] under bitand; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ff00507] under bitor; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@603cabc4] under bitxor; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fa5045] under bitnot; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : every -> bool_and
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-05-28 16:53:25,430 DEBUG SqmFunctionRegistry: Registering alternate key : any -> bool_or
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f347d7] under median; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c134052] under insert; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4fc165f6] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4041739c
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@545b5ed0] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@cfd1075] under listagg; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@61ffd148] under array; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@58324c9f] under array_list; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3bc69ce9] under array_agg; prior registration was null
2024-05-28 16:53:25,446 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@21de60a7] under array_position; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@67f63d26] under array_positions; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1f9d4b0e] under array_positions_list; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e8fb66f] under array_length; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2f677247] under array_concat; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1983b48a] under array_prepend; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@629a9f26] under array_append; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@64bebd55] under array_contains; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7c1a8f0f] under array_contains_nullable; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6588b715] under array_overlaps; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@15a3b42] under array_overlaps_nullable; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67e0ff3a] under array_get; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@1eb9a3ef] under array_set; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@27fe059d] under array_remove_index; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@766a52f5] under array_slice; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4342c13] under array_trim; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@157d3a45] under array_fill; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@750ed637] under array_fill_list; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@18d11527] under array_to_string; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@575cabf0] under mode; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@433d9680] under percentile_cont; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@566e142] under percentile_disc; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@261bd7b] under rank; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f9e08d4] under dense_rank; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@390037e7] under percent_rank; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@704067c6] under cume_dist; prior registration was null
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2b08772d] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-05-28 16:53:25,462 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78a8978a] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-05-28 16:53:25,477 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@29bcf51d] under round; prior registration was NamedSqmFunctionTemplate(round)
2024-05-28 16:53:25,478 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3b0c3951] under trunc; prior registration was null
2024-05-28 16:53:25,478 DEBUG SqmFunctionRegistry: Registering alternate key : truncate -> trunc
2024-05-28 16:53:25,478 DEBUG SqmFunctionRegistry: Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60f77af] under date_trunc; prior registration was null
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: abs(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double acos(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double acosh(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Boolean any(BOOLEAN predicate)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_agg(arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_append( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_concat( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_fill(OBJECT element, INTEGER elementCount)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_fill_list(OBJECT element, INTEGER elementCount)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_get(ARRAY array, INTEGER index)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer array_length(ARRAY array)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_list( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: int[] array_positions(ARRAY array, OBJECT element)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: List array_positions_list(ARRAY array, OBJECT element)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_prepend( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_remove( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_remove_index( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_replace(ARRAY array, OBJECT old, OBJECT new)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_set( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String array_to_string( ... )
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: array_trim(ARRAY array, INTEGER elementsToRemove)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer ascii(STRING arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double asin(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double asinh(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double atan(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double atanh(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: avg(arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: bit_and(arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer bit_length(STRING_OR_CLOB arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: bit_or(arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: bitand(arg0, arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: bitnot(arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: bitor(arg0, arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: bitxor(arg0, arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Boolean bool_and(BOOLEAN predicate)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Boolean bool_or(BOOLEAN predicate)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: cast(arg as Type)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double cbrt(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: ceiling(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Character char(INTEGER arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer character_length(STRING_OR_CLOB arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Character chr(INTEGER arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: coalesce(arg0[, arg1[, ...]])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String collate(STRING string as COLLATION collation)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: (STRING string0[, STRING string1[, ...]])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double corr(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double cos(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double cosh(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double cot(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Long count([distinct ]{arg|*})
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double cume_dist([arg0[, ...]])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Date current date
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Time current time
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Timestamp current timestamp
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Date current_date
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Instant current_instant
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Time current_time
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Timestamp current_timestamp
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: date_trunc(STRING field, TEMPORAL datetime)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double degrees(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Long dense_rank([arg0[, ...]])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Boolean every(BOOLEAN predicate)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double exp(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: first_valueANY value
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: floor(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String format(TEMPORAL datetime as STRING pattern)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: ifnull(arg0, arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String initcap(arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Instant instant
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: lagANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: last_valueANY value
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: leadANY value[, INTEGER offset[, ANY default]]
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String left(STRING string, INTEGER length)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer length(STRING_OR_CLOB arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String listagg(STRING arg0, STRING arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double ln(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: LocalDate local date
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: LocalDateTime local datetime
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: LocalTime local time
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: LocalDate local_date
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: LocalDateTime local_datetime
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: LocalTime local_time
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Time localtime
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Timestamp localtimestamp
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double log(NUMERIC arg0[, NUMERIC arg1])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double log10(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String lower(STRING string)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String lpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String ltrim(STRING string[, STRING characters])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: max(COMPARABLE arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: String md5(arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Double median(NUMERIC arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: min(COMPARABLE arg)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer mod(INTEGER arg0, INTEGER arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: mode()
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: nth_valueANY value, INTEGER nth
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: nullif(arg0, arg1)
2024-05-28 16:53:25,478 DEBUG HQL_FUNCTIONS: Integer octet_length(STRING_OR_CLOB arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: OffsetDateTime offset datetime
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: OffsetDateTime offset_datetime
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String overlay(string placing replacement from start[ for length])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double percent_rank([arg0[, ...]])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: percentile_cont(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: percentile_disc(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double pi
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Integer position(STRING pattern in STRING string)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double power(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double radians(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Long rank([arg0[, ...]])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_count(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String repeat(STRING string, INTEGER times)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String replace(STRING string, STRING pattern, STRING replacement)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String right(STRING string, INTEGER length)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: round(NUMERIC number[, INTEGER places])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Long row_number()
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String rpad(STRING string, INTEGER length[, STRING padding])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String rtrim(STRING string[, STRING characters])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Integer sign(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double sin(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double sinh(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String soundex(arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Object sql
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double sqrt(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double stddev(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double stddev_pop(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double stddev_samp(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String str(arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String substr(STRING string, INTEGER start[, INTEGER length])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: sum(arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double tan(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double tanh(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: basicType@5(java.lang.Long,-5)|basicType@20(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String to_char(ANY arg0[, STRING arg1, STRING arg2])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String translate(STRING arg0, STRING arg1, STRING arg2)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: trunc( ... )
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: truncate( ... )
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: String upper(STRING string)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double var_pop(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double var_samp(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG HQL_FUNCTIONS: Double variance(NUMERIC arg)
2024-05-28 16:53:25,493 DEBUG cache: Starting QueryInterpretationCache(2048)
2024-05-28 16:53:25,588 DEBUG SessionFactoryServiceRegistryImpl: EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-05-28 16:53:25,588 DEBUG EntityCopyObserverFactoryInitiator: Configured EntityCopyObserver strategy: disallow
2024-05-28 16:53:25,718 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Game] is safe
2024-05-28 16:53:25,719 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Game
2024-05-28 16:53:26,009 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Game]: private accessor [currentQuestionId]
2024-05-28 16:53:26,038 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Answer] is safe
2024-05-28 16:53:26,038 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Answer
2024-05-28 16:53:26,053 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Answer]: private accessor [finalMessage]
2024-05-28 16:53:26,053 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Quest] is safe
2024-05-28 16:53:26,053 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Quest
2024-05-28 16:53:26,085 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Quest]: private accessor [description]
2024-05-28 16:53:26,085 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.User] is safe
2024-05-28 16:53:26,085 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.User
2024-05-28 16:53:26,101 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.User]: private accessor [login]
2024-05-28 16:53:26,101 DEBUG ClassLoaderAccessImpl: Not known whether passed class name [com.javarush.nikolenko.entity.Question] is safe
2024-05-28 16:53:26,101 DEBUG ClassLoaderAccessImpl: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javarush.nikolenko.entity.Question
2024-05-28 16:53:26,117 DEBUG BytecodeProviderImpl: HHH000513: Unable to create the ReflectionOptimizer for [com.javarush.nikolenko.entity.Question]: private accessor [questId]
2024-05-28 16:53:26,148 DEBUG creation: Starting post-init callbacks
2024-05-28 16:53:26,148 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Game) `staticFetchableList` generator
2024-05-28 16:53:26,148 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Answer) `staticFetchableList` generator
2024-05-28 16:53:26,148 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Quest) `staticFetchableList` generator
2024-05-28 16:53:26,148 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.User) `staticFetchableList` generator
2024-05-28 16:53:26,148 DEBUG creation: Starting PostInitCallbackEntry : Entity(com.javarush.nikolenko.entity.Question) `staticFetchableList` generator
2024-05-28 16:53:26,268 DEBUG create: Created new SQL alias : g1_0
2024-05-28 16:53:26,268 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Game)] with identifierForTableGroup [com.javarush.nikolenko.entity.Game] for NavigablePath [com.javarush.nikolenko.entity.Game] 
2024-05-28 16:53:26,284 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Game]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.currentQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Game.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Game.userPlayerId]

2024-05-28 16:53:26,284 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : com.javarush.nikolenko.entity.Game) {
          primaryTableReference : game as g1_0
        }
      }
    }

2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Game
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Version select: select id from game where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Insert (0): insert into game (currentQuestionId,firstQuestionId,gameState,questId,userPlayerId) values (?,?,?,?,?)
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Update (0): update game set currentQuestionId=?,firstQuestionId=?,gameState=?,questId=?,userPlayerId=? where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Delete (0): delete from game where id=?
2024-05-28 16:53:26,305 DEBUG create: Created new SQL alias : a1_0
2024-05-28 16:53:26,305 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Answer)] with identifierForTableGroup [com.javarush.nikolenko.entity.Answer] for NavigablePath [com.javarush.nikolenko.entity.Answer] 
2024-05-28 16:53:26,305 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Answer]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.answerMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.finalMessage]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.gameState]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Answer.nextQuestionId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Answer.questionId]

2024-05-28 16:53:26,305 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.javarush.nikolenko.entity.Answer) {
          primaryTableReference : answer as a1_0
        }
      }
    }

2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Answer
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Version select: select id from answer where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Insert (0): insert into answer (answerMessage,finalMessage,gameState,nextQuestionId,questionId) values (?,?,?,?,?)
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Update (0): update answer set answerMessage=?,finalMessage=?,gameState=?,nextQuestionId=?,questionId=? where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Delete (0): delete from answer where id=?
2024-05-28 16:53:26,305 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:53:26,305 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest)] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:53:26,305 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest.name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest.userAuthorId]

2024-05-28 16:53:26,305 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Quest
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Version select: select id from quest where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Insert (0): insert into quest (description,first_question_id,name,user_author_id) values (?,?,?,?)
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Update (0): update quest set description=?,first_question_id=?,name=?,user_author_id=? where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Delete (0): delete from quest where id=?
2024-05-28 16:53:26,305 DEBUG create: Created new SQL alias : u1_0
2024-05-28 16:53:26,305 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.User)] with identifierForTableGroup [com.javarush.nikolenko.entity.User] for NavigablePath [com.javarush.nikolenko.entity.User] 
2024-05-28 16:53:26,305 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.User]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.login]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.name]
 |  +-BasicFetch [com.javarush.nikolenko.entity.User.password]
 |  \-BasicFetch [com.javarush.nikolenko.entity.User.role]

2024-05-28 16:53:26,305 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.javarush.nikolenko.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.User
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Version select: select id from users where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Insert (0): insert into users (login,name,password,role) values (?,?,?,?)
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Update (0): update users set login=?,name=?,password=?,role=? where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Delete (0): delete from users where id=?
2024-05-28 16:53:26,305 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:53:26,305 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Question)] with identifierForTableGroup [com.javarush.nikolenko.entity.Question] for NavigablePath [com.javarush.nikolenko.entity.Question] 
2024-05-28 16:53:26,305 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Question]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Question.questId]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Question.questionMessage]

2024-05-28 16:53:26,305 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Question) {
          primaryTableReference : question as q1_0
        }
      }
    }

2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister: Static SQL for entity: com.javarush.nikolenko.entity.Question
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Version select: select id from question where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Insert (0): insert into question (questId,questionMessage) values (?,?)
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Update (0): update question set questId=?,questionMessage=? where id=?
2024-05-28 16:53:26,305 DEBUG AbstractEntityPersister:  Delete (0): delete from question where id=?
2024-05-28 16:53:26,353 DEBUG JtaPlatformInitiator: No JtaPlatform was specified, checking resolver
2024-05-28 16:53:26,353 DEBUG JtaPlatformResolverInitiator: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-05-28 16:53:26,353 DEBUG StandardJtaPlatformResolver: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-05-28 16:53:26,353 INFO JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-05-28 16:53:26,353 DEBUG TypeConfiguration$Scope: Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53830483] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@d84418a]
2024-05-28 16:53:26,368 DEBUG NamedObjectRepository: Checking 1 named HQL queries
2024-05-28 16:53:26,368 DEBUG NamedObjectRepository: Checking named HQL query: QUERY_MORE_ID
2024-05-28 16:53:26,384 DEBUG StatisticsInitiator: Statistics initialized [enabled=false]
2024-05-28 16:53:26,400 DEBUG hql: HQL : SELECT q FROM Quest q where id>:id
2024-05-28 16:53:26,731 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : >
2024-05-28 16:53:26,747 DEBUG reservedWordAsIdentifier: Encountered use of reserved word as identifier : <EOF>
2024-05-28 16:53:26,846 DEBUG hql: Unable to resolve unqualified attribute [id] in local from-clause
2024-05-28 16:53:26,861 DEBUG creation: Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(q).id)
2024-05-28 16:53:26,892 DEBUG ast: SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
            <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.javarush.nikolenko.entity.Quest(q)`
          <- [root] - `com.javarush.nikolenko.entity.Quest(q)`
        <- [from]
        -> [where]
          -> [GREATER_THAN]
              -> [basic-path] - `com.javarush.nikolenko.entity.Quest(q).id`
              :id
          <- [GREATER_THAN]
        <- [where]
      <- [query-spec]
    <- [select]

2024-05-28 16:53:26,908 DEBUG NamedObjectRepository: Checking 0 named SQL queries
2024-05-28 16:53:26,908 DEBUG SchemaManagementToolCoordinator: No schema actions specified for contributor `orm`; doing nothing
2024-05-28 16:53:26,908 DEBUG SchemaManagementToolCoordinator: No actions found; doing nothing
2024-05-28 16:53:26,908 DEBUG SessionFactoryRegistry: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a247711
2024-05-28 16:53:26,908 DEBUG SessionFactoryRegistry: Registering SessionFactory: de105321-a8be-4e51-9e91-21da555444af (<unnamed>)
2024-05-28 16:53:26,908 DEBUG SessionFactoryRegistry: Not binding SessionFactory to JNDI, no JNDI name configured
2024-05-28 16:53:26,908 DEBUG SessionFactoryImpl: Instantiated SessionFactory
2024-05-28 16:53:26,972 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:53:26,972 DEBUG TransactionImpl: begin
2024-05-28 16:53:26,972 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:53:26,972 DEBUG TransactionImpl: begin
2024-05-28 16:53:27,016 DEBUG ActionQueue: Executing identity-insert immediately
2024-05-28 16:53:27,032 DEBUG SQL: 
    insert 
    into
        quest
        (description, first_question_id, name, user_author_id) 
    values
        (?, ?, ?, ?)
2024-05-28 16:53:27,070 DEBUG IdentifierGeneratorHelper: Natively generated identity (com.javarush.nikolenko.entity.Quest) : 5
2024-05-28 16:53:27,072 DEBUG ResourceRegistryStandardImpl: HHH000387: ResultSet's statement was not registered
2024-05-28 16:53:27,076 DEBUG ResourceRegistryStandardImpl: Exception clearing maxRows/queryTimeout [Этот statement был закрыт.]
2024-05-28 16:53:27,076 DEBUG TransactionImpl: committing
2024-05-28 16:53:27,076 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-28 16:53:27,076 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-28 16:53:27,092 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-05-28 16:53:27,092 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-28 16:53:27,092 DEBUG EntityPrinter: Listing entities:
2024-05-28 16:53:27,092 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=null, name=TestQuest, description=null, id=5, firstQuestionId=null}
2024-05-28 16:53:27,135 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,136 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,137 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:53:27,137 DEBUG TransactionImpl: begin
2024-05-28 16:53:27,209 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:53:27,209 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest(934546463656900))] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:53:27,224 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c1908c8
2024-05-28 16:53:27,224 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(934546463656900).id) 
2024-05-28 16:53:27,224 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47f0e078
2024-05-28 16:53:27,224 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(934546463656900).name) 
2024-05-28 16:53:27,224 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest(934546463656900)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934546463656900).description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934546463656900).firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934546463656900).name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest(934546463656900).userAuthorId]

2024-05-28 16:53:27,224 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest(934546463656900)) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:53:27,240 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-28 16:53:27,271 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.Quest(934546463656900) -> EntityResultInitializer(com.javarush.nikolenko.entity.Quest(934546463656900))@1328382325 (SingleTableEntityPersister(com.javarush.nikolenko.entity.Quest))

2024-05-28 16:53:27,271 DEBUG SQL: 
    select
        q1_0.id,
        q1_0.description,
        q1_0.first_question_id,
        q1_0.name,
        q1_0.user_author_id 
    from
        quest q1_0 
    where
        q1_0.id=? 
        and q1_0.name=?
2024-05-28 16:53:27,284 DEBUG results: Extracted JDBC value [0] - [5]
2024-05-28 16:53:27,284 DEBUG entity: (EntityResultInitializer) Hydrated EntityKey (com.javarush.nikolenko.entity.Quest(934546463656900)): 5
2024-05-28 16:53:27,284 DEBUG entity: (EntityResultInitializer) Created new entity instance [com.javarush.nikolenko.entity.Quest(934546463656900)#5] : 1718325723
2024-05-28 16:53:27,284 DEBUG results: Extracted JDBC value [1] - [null]
2024-05-28 16:53:27,284 DEBUG results: Extracted JDBC value [2] - [null]
2024-05-28 16:53:27,284 DEBUG results: Extracted JDBC value [3] - [TestQuest]
2024-05-28 16:53:27,284 DEBUG results: Extracted JDBC value [4] - [null]
2024-05-28 16:53:27,284 DEBUG entity: (EntityResultInitializer) Done materializing entityInstance : com.javarush.nikolenko.entity.Quest(934546463656900)#5
2024-05-28 16:53:27,284 DEBUG loading: Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9cb927e
2024-05-28 16:53:27,284 DEBUG TransactionImpl: committing
2024-05-28 16:53:27,284 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-28 16:53:27,284 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-28 16:53:27,284 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-05-28 16:53:27,284 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-28 16:53:27,284 DEBUG EntityPrinter: Listing entities:
2024-05-28 16:53:27,284 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=null, name=TestQuest, description=null, id=5, firstQuestionId=null}
2024-05-28 16:53:27,293 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,293 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,299 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:53:27,299 DEBUG TransactionImpl: begin
2024-05-28 16:53:27,303 DEBUG TransactionImpl: committing
2024-05-28 16:53:27,303 DEBUG AbstractFlushingEventListener: Processing flush-time cascades
2024-05-28 16:53:27,303 DEBUG AbstractFlushingEventListener: Dirty checking collections
2024-05-28 16:53:27,303 DEBUG AbstractFlushingEventListener: Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2024-05-28 16:53:27,303 DEBUG AbstractFlushingEventListener: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-05-28 16:53:27,303 DEBUG EntityPrinter: Listing entities:
2024-05-28 16:53:27,303 DEBUG EntityPrinter: com.javarush.nikolenko.entity.Quest{userAuthorId=null, name=TestQuest, description=null, id=5, firstQuestionId=null}
2024-05-28 16:53:27,303 DEBUG SQL: 
    delete 
    from
        quest 
    where
        id=?
2024-05-28 16:53:27,369 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,369 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,369 DEBUG TransactionImpl: On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-05-28 16:53:27,369 DEBUG TransactionImpl: begin
2024-05-28 16:53:27,370 DEBUG create: Created new SQL alias : q1_0
2024-05-28 16:53:27,370 DEBUG create: Registration of TableGroup [StandardTableGroup(com.javarush.nikolenko.entity.Quest(934546695714100))] with identifierForTableGroup [com.javarush.nikolenko.entity.Quest] for NavigablePath [com.javarush.nikolenko.entity.Quest] 
2024-05-28 16:53:27,371 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23c00420
2024-05-28 16:53:27,371 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(934546695714100).id) 
2024-05-28 16:53:27,371 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@215a329c
2024-05-28 16:53:27,371 DEBUG BaseSqmToSqlAstConverter: Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.javarush.nikolenko.entity.Quest(934546695714100).name) 
2024-05-28 16:53:27,371 DEBUG AST: DomainResult Graph:
 \-EntityResultImpl [com.javarush.nikolenko.entity.Quest(934546695714100)]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934546695714100).description]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934546695714100).firstQuestionId]
 |  +-BasicFetch [com.javarush.nikolenko.entity.Quest(934546695714100).name]
 |  \-BasicFetch [com.javarush.nikolenko.entity.Quest(934546695714100).userAuthorId]

2024-05-28 16:53:27,371 DEBUG tree: SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (q1 : com.javarush.nikolenko.entity.Quest(934546695714100)) {
          primaryTableReference : quest as q1_0
        }
      }
    }

2024-05-28 16:53:27,372 DEBUG exec: Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-05-28 16:53:27,372 DEBUG results: Initializer list:
	  com.javarush.nikolenko.entity.Quest(934546695714100) -> EntityResultInitializer(com.javarush.nikolenko.entity.Quest(934546695714100))@271502177 (SingleTableEntityPersister(com.javarush.nikolenko.entity.Quest))

2024-05-28 16:53:27,372 DEBUG SQL: 
    select
        q1_0.id,
        q1_0.description,
        q1_0.first_question_id,
        q1_0.name,
        q1_0.user_author_id 
    from
        quest q1_0 
    where
        q1_0.id=? 
        and q1_0.name=?
2024-05-28 16:53:27,375 DEBUG TransactionImpl: committing
2024-05-28 16:53:27,377 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,377 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,378 DEBUG TransactionImpl: committing
2024-05-28 16:53:27,379 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,379 DEBUG LogicalConnectionManagedImpl: Initiating JDBC connection release from afterTransaction
2024-05-28 16:53:27,385 DEBUG SessionFactoryImpl: HHH000031: Closing
2024-05-28 16:53:27,386 DEBUG TypeConfiguration$Scope: Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7097d921] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@d84418a]
2024-05-28 16:53:27,386 DEBUG AbstractServiceRegistryImpl: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-05-28 16:53:27,387 INFO pooling: HHH10001008: Cleaning up connection pool [jdbc:postgresql://localhost:5432/game]
2024-05-28 16:53:27,390 DEBUG BootstrapServiceRegistryImpl: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
